timeout 900 ./AProVE.sh -m wst --bit-width 64 Incorrect_Update_for_Loop_Iterator_1_NT.c
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Incorrect_Update_for_Loop_Iterator_1_NT.c
NO
proof of /home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Update_for_Loop_Iterator_1_NT.c
# AProVE Commit ID: 249ab60e2b58fea5661f104665226199f0baff7b jera 20211103 unpublished


Termination of the given C Problem could be disproven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 76 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 3537 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToLassoProof [COMPLETE, 18 ms]
(6) AND
    (7) LLVM Symbolic Execution Lasso
        (8) Lasso2IRS [EQUIVALENT, 223 ms]
        (9) IntTRS
        (10) IRS2T2 [EQUIVALENT, 0 ms]
        (11) T2IntSys
    (12) LLVM Symbolic Execution Lasso
        (13) Lasso2IRS [EQUIVALENT, 198 ms]
        (14) IntTRS
        (15) IRS2T2 [EQUIVALENT, 0 ms]
        (16) T2IntSys
    (17) LLVM Symbolic Execution Lasso
        (18) Lasso2IRS [EQUIVALENT, 220 ms]
        (19) IntTRS
        (20) IRS2T2 [EQUIVALENT, 0 ms]
        (21) T2IntSys
    (22) LLVM Symbolic Execution Lasso
        (23) Lasso2IRS [EQUIVALENT, 257 ms]
        (24) IntTRS
        (25) IRS2T2 [EQUIVALENT, 0 ms]
        (26) T2IntSys
    (27) LLVM Symbolic Execution Lasso
        (28) Lasso2IRS [EQUIVALENT, 214 ms]
        (29) IntTRS
        (30) IRS2T2 [EQUIVALENT, 0 ms]
        (31) T2IntSys
        (32) T2 [COMPLETE, 2040 ms]
        (33) NO
    (34) LLVM Symbolic Execution Lasso
        (35) Lasso2IRS [EQUIVALENT, 236 ms]
        (36) IntTRS
        (37) IRS2T2 [EQUIVALENT, 0 ms]
        (38) T2IntSys
    (39) LLVM Symbolic Execution Lasso
        (40) Lasso2IRS [EQUIVALENT, 197 ms]
        (41) IntTRS
        (42) IRS2T2 [EQUIVALENT, 0 ms]
        (43) T2IntSys
    (44) LLVM Symbolic Execution Lasso
        (45) Lasso2IRS [EQUIVALENT, 136 ms]
        (46) IntTRS
        (47) IRS2T2 [EQUIVALENT, 0 ms]
        (48) T2IntSys
        (49) T2 [EQUIVALENT, 634 ms]
        (50) YES
    (51) LLVM Symbolic Execution Lasso
        (52) Lasso2IRS [EQUIVALENT, 109 ms]
        (53) IntTRS
        (54) IRS2T2 [EQUIVALENT, 0 ms]
        (55) T2IntSys


----------------------------------------

(0)
Obligation:
c file /home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Update_for_Loop_Iterator_1_NT.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Update_for_Loop_Iterator_1_NT.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-unknown-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 9
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%6 = call i32 (...)* @__VERIFIER_nondet_int()
		store %6, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%7 = call i32 (...)* @__VERIFIER_nondet_int()
		store %7, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%8 = call i32 (...)* @__VERIFIER_nondet_int()
		store %8, %4
		%9 = load %2
		%10 = icmp slt %9 -1
		br %10, %17, %11
	11:
		%12 = load %3
		%13 = icmp sle %12 0
		br %13, %17, %14
	14:
		%15 = load %4
		%16 = icmp slt %15 0
		br %16, %17, %18
	17:
		store 0, %1
		br %40
	18:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 64, %5
		br %19
	19:
		%20 = load %4
		%21 = load %5
		%22 = sdiv i32 %21, 2
		%23 = icmp slt %20 %22
		br %23, %24, %39
	24:
		%25 = load %5
		%26 = mul i32 %25, 2
		store %26, %5
		%27 = load %2
		%28 = icmp ne %27 -1
		br %28, %29, %35
	29:
		%30 = load %5
		%31 = load %2
		%32 = icmp sgt %30 %31
		br %32, %33, %35
	33:
		%34 = load %2
		store %34, %5
		br %35
	35:
		%36 = load %5
		%37 = load %3
		%38 = sub i32 %36, %37
		store %38, %4
		br %19
	39:
		store 0, %1
		br %40
	40:
		%41 = load %1
		ret %41


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToLassoProof (COMPLETE)
Converted SEGraph to 9 dependent lassos.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Lasso
----------------------------------------

(8) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 140 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 128 <= v11
f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: v50 + v13 = 128 && v50 <= 127
f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_374(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) :|: TRUE
f_374(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) -> f_476(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) :|: TRUE
f_476(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) -> f_570(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 64, 4) :|: TRUE
f_570(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1497, v1498, v1499, 1, v1501, v1502, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1533 = v1501 / 2
f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1502 < v1533
f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: TRUE
f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) :|: 0 = 0
f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) -> f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1559 = 2 * v1501 && 256 <= v1559
f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_591(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1493 < v1559
f_591(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_593(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_593(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_595(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_595(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_597(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_597(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_599(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_599(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_601(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_601(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_643(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v2146:0 + v13:0, v13:0, v15:0, 0, v2146:0, 128, 64, 1, 256, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v2146:0 + v13:0 > 127 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v50:0 < 128 && v50:0 + v13:0 = 128 && v2146:0 + v13:0 < 256 && v50:0 < 64
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_172 -> f_611(v2146:0 + v13:0, v13:0, v2146:0, 128, 64, 256) :|: v13:0 > 0 && v2146:0 + v13:0 < 256 && v2146:0 + v13:0 > 127
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(9)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_172 -> f_611(v2146:0 + v13:0, v13:0, v2146:0, 128, 64, 256) :|: v13:0 > 0 && v2146:0 + v13:0 < 256 && v2146:0 + v13:0 > 127
f_731(x64, x65, x66, x67, x68, x69) -> f_611(x70 + x65, x65, x70, x67, x68, x69) :|: x69 > x70 + x65 && x69 > 1 && x67 > 0 && x70 + x65 > 0 && x64 = x70 + x65
Start term: f_172

----------------------------------------

(10) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_731'_6,4)
   (f_172_6,5)

----------------------------------------

(11)
Obligation:
START: 5;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 4;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 < 256 && oldX6 + oldX7 > 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 128;
x4 := 64;
x5 := 256;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(12)
Obligation:
Lasso
----------------------------------------

(13) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 121 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: v11 < 128
f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: v57 + v13 = v11 && v57 <= 126
f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_399(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 2, 127, 31, 126, 254, 4) :|: TRUE
f_399(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 127, 31, 126, 254, 4) -> f_610(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v57:0 + v13:0, v13:0, v15:0, 0, v57:0, 64, 32, 1, 128, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v57:0 + v13:0 > -1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v57:0 < 127 && v57:0 + v13:0 < 128
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(14)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0
Start term: f_172

----------------------------------------

(15) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_172_6,4)
   (f_731'_6,5)

----------------------------------------

(16)
Obligation:
START: 4;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 > -1 && oldX6 + oldX7 < 128 && oldX6 < 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 64;
x4 := 32;
x5 := 128;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 5;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(17)
Obligation:
Lasso
----------------------------------------

(18) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 121 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: v11 < 128
f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: v57 + v13 = v11 && v57 <= 126
f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_399(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 2, 127, 31, 126, 254, 4) :|: TRUE
f_399(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 127, 31, 126, 254, 4) -> f_610(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v57:0 + v13:0, v13:0, v15:0, 0, v57:0, 64, 32, 1, 128, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v57:0 + v13:0 > -1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v57:0 < 127 && v57:0 + v13:0 < 128
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(19)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0
Start term: f_172

----------------------------------------

(20) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_172_6,4)
   (f_731'_6,5)

----------------------------------------

(21)
Obligation:
START: 4;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 > -1 && oldX6 + oldX7 < 128 && oldX6 < 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 64;
x4 := 32;
x5 := 128;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 5;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(22)
Obligation:
Lasso
----------------------------------------

(23) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 140 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 128 <= v11
f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: v50 + v13 = 128 && v50 <= 127
f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_374(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) :|: TRUE
f_374(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) -> f_476(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) :|: TRUE
f_476(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) -> f_570(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 64, 4) :|: TRUE
f_570(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1497, v1498, v1499, 1, v1501, v1502, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1533 = v1501 / 2
f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1502 < v1533
f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: TRUE
f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) :|: 0 = 0
f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) -> f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1559 = 2 * v1501 && 256 <= v1559
f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_591(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1493 < v1559
f_591(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_593(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_593(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_595(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_595(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_597(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_597(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_599(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_599(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_601(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_601(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_643(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v2146:0 + v13:0, v13:0, v15:0, 0, v2146:0, 128, 64, 1, 256, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v2146:0 + v13:0 > 127 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v50:0 < 128 && v50:0 + v13:0 = 128 && v2146:0 + v13:0 < 256 && v50:0 < 64
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_172 -> f_611(v2146:0 + v13:0, v13:0, v2146:0, 128, 64, 256) :|: v13:0 > 0 && v2146:0 + v13:0 < 256 && v2146:0 + v13:0 > 127
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(24)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_172 -> f_611(v2146:0 + v13:0, v13:0, v2146:0, 128, 64, 256) :|: v13:0 > 0 && v2146:0 + v13:0 < 256 && v2146:0 + v13:0 > 127
f_731(x64, x65, x66, x67, x68, x69) -> f_611(x70 + x65, x65, x70, x67, x68, x69) :|: x69 > x70 + x65 && x69 > 1 && x67 > 0 && x70 + x65 > 0 && x64 = x70 + x65
Start term: f_172

----------------------------------------

(25) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_731'_6,4)
   (f_172_6,5)

----------------------------------------

(26)
Obligation:
START: 5;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 4;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 < 256 && oldX6 + oldX7 > 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 128;
x4 := 64;
x5 := 256;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(27)
Obligation:
Lasso
----------------------------------------

(28) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 121 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: v11 < 128
f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: v57 + v13 = v11 && v57 <= 126
f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_399(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 2, 127, 31, 126, 254, 4) :|: TRUE
f_399(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 127, 31, 126, 254, 4) -> f_610(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v57:0 + v13:0, v13:0, v15:0, 0, v57:0, 64, 32, 1, 128, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v57:0 + v13:0 > -1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v57:0 < 127 && v57:0 + v13:0 < 128
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(29)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0
Start term: f_172

----------------------------------------

(30) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_172_6,4)
   (f_731'_6,5)

----------------------------------------

(31)
Obligation:
START: 4;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 > -1 && oldX6 + oldX7 < 128 && oldX6 < 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 64;
x4 := 32;
x5 := 128;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 5;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(32) T2 (COMPLETE)
Nontermination proof succeeded
Found this recurrent set for cutpoint 8: oldX0 == 2 and oldX1 == 2 and oldX6 == 0 and oldX7 == 1 and x0 == 2 and x1 == 2 and x2 == 0

----------------------------------------

(33)
NO

----------------------------------------

(34)
Obligation:
Lasso
----------------------------------------

(35) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 140 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 128 <= v11
f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: v50 + v13 = 128 && v50 <= 127
f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_374(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) :|: TRUE
f_374(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) -> f_476(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) :|: TRUE
f_476(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) -> f_570(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 64, 4) :|: TRUE
f_570(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1497, v1498, v1499, 1, v1501, v1502, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1533 = v1501 / 2
f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1502 < v1533
f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: TRUE
f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) :|: 0 = 0
f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) -> f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1559 = 2 * v1501 && 256 <= v1559
f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_591(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1493 < v1559
f_591(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_593(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_593(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_595(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_595(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_597(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_597(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_599(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_599(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_601(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_601(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_643(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v2146:0 + v13:0, v13:0, v15:0, 0, v2146:0, 128, 64, 1, 256, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v2146:0 + v13:0 > 127 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v50:0 < 128 && v50:0 + v13:0 = 128 && v2146:0 + v13:0 < 256 && v50:0 < 64
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_172 -> f_611(v2146:0 + v13:0, v13:0, v2146:0, 128, 64, 256) :|: v13:0 > 0 && v2146:0 + v13:0 < 256 && v2146:0 + v13:0 > 127
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(36)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_172 -> f_611(v2146:0 + v13:0, v13:0, v2146:0, 128, 64, 256) :|: v13:0 > 0 && v2146:0 + v13:0 < 256 && v2146:0 + v13:0 > 127
f_731(x64, x65, x66, x67, x68, x69) -> f_611(x70 + x65, x65, x70, x67, x68, x69) :|: x69 > x70 + x65 && x69 > 1 && x67 > 0 && x70 + x65 > 0 && x64 = x70 + x65
Start term: f_172

----------------------------------------

(37) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_731'_6,4)
   (f_172_6,5)

----------------------------------------

(38)
Obligation:
START: 5;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 4;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 < 256 && oldX6 + oldX7 > 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 128;
x4 := 64;
x5 := 256;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(39)
Obligation:
Lasso
----------------------------------------

(40) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 121 rulesP rules:
f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_612(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1747, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1794 = v1741 / 2
f_613(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1750 < v1794
f_614(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_616(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_618(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1746, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_620(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 = 2 * v1741 && 0 <= v1849
f_622(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_624(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_626(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_627(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_628(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_629(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1741 < v1849 && 2 <= v1849 && 1 <= v1741
f_630(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: v1849 <= v1741
f_631(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_633(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_635(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_638(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_640(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_642(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_643(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1741, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_643(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_645(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: 0 = 0
f_647(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: v2146 + v2075 = v2074
f_649(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_651(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_653(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) -> f_610(v2069, v2070, v2071, v2072, v2073, v2074, v2075, v2076, 0, v2078, v2079, v2080, 1, v2082, v2146, v2083, v2084, v2085, v2086, v2087, 3, 2, 31, 4) :|: TRUE
f_610(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1745, v1746, v1747, 1, v1749, v1750, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_611(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1746, v1747, 1, v1749, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_632(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: 0 = 0
f_634(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_636(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) -> f_637(v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, 0, v1750, v1794, 1, v1849, v1751, v1752, v1753, v1754, v1755, 3, 2, 31, 4) :|: TRUE
f_637(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) -> f_674(v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, 0, v1961, v1957, v1962, 1, v1964, v1965, v1966, v1967, v1968, v1969, 3, 2, 31, 4) :|: TRUE
f_674(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) -> f_706(v2400, v2401, v2402, v2403, v2404, v2405, v2406, v2407, 0, v2409, v2410, v2411, 1, v2413, v2414, v2415, v2416, v2417, v2418, 3, 2, 31, 4) :|: TRUE
f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_707(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_708(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 + v2649 = v2656
f_709(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_710(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_711(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2652, v2653, v2654, 1, v2656, v2662, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_712(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2653, v2654, 1, v2656, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_713(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2654, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2684 = v2656 / 2
f_714(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2662 < v2684
f_715(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_717(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_719(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2653, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_721(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 = 2 * v2656 && 0 <= v2727
f_723(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_725(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_727(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_728(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_729(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_730(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2648 < v2727 && 2 <= v2727 && 1 <= v2656 && 1 <= v2648
f_731(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: v2727 <= v2648
f_732(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_734(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_736(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_738(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_739(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_740(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_643(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_733(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: 0 = 0
f_735(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_737(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) -> f_706(v2643, v2644, v2645, v2646, v2647, v2648, v2649, v2650, 0, v2662, v2656, v2684, 1, v2727, v2657, v2658, v2659, v2660, v2661, 3, 2, 31, 4) :|: TRUE
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: v11 < 128
f_247(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_253(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_256(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_259(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: TRUE
f_262(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_265(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) :|: 0 = 0
f_269(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 127, 31) -> f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: v57 + v13 = v11 && v57 <= 126
f_273(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) :|: TRUE
f_281(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 4, 127, 31, 126) -> f_399(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v57, v2, v4, v6, v8, v10, 3, 2, 127, 31, 126, 254, 4) :|: TRUE
f_399(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 127, 31, 126, 254, 4) -> f_610(v588, v589, v590, v591, v592, v593, v594, v595, 0, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, 3, 2, 31, 4) :|: TRUE
Combined rules. Obtained 5 rulesP rules:
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v2146:0 + v1742:0, v1742:0, v1743:0, 0, v2146:0, v2146:0 + v1742:0, v1794:0, 1, 2 * (v2146:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: 2 * (v2146:0 + v1742:0) > 1 && (v2146:0 + v1742:0) / 2 = v1794:0 && v1794:0 > v1750:0 && v2146:0 + v1742:0 > 0 && v2146:0 + v1742:0 < 2 * (v2146:0 + v1742:0)
f_611(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v1750:0, v1746:0, v1747:0, 1, v1749:0, v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) -> f_731(v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, 0, v2662:0, v2662:0 + v1742:0, v2684:0, 1, 2 * (v2662:0 + v1742:0), v1751:0, v1752:0, v1753:0, v1754:0, v1755:0, 3, 2, 31, 4) :|: v1794:0 = v1741:0 / 2 && v1794:0 > v1750:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && v2684:0 = (v2662:0 + v1742:0) / 2 && 2 * (v2662:0 + v1742:0) > -1 && v2684:0 > v2662:0
f_172 -> f_611(v1:0, v3:0, v5:0, v7:0, v9:0, v57:0 + v13:0, v13:0, v15:0, 0, v57:0, 64, 32, 1, 128, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 4) :|: v57:0 + v13:0 > -1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v57:0 < 127 && v57:0 + v13:0 < 128
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2662:1 + v2649:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2648:0, v2649:0, v2650:0, 0, v2662:1, v2662:1 + v2649:0, v2684:1, 1, 2 * (v2662:1 + v2649:0), v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2684:1 = (v2662:1 + v2649:0) / 2 && v2684:1 > v2662:1 && v2662:1 + v2649:0 <= v2648:0 && 2 * (v2662:1 + v2649:0) > -1
f_731(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2662:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) -> f_611(v2643:0, v2644:0, v2645:0, v2646:0, v2647:0, v2146:0 + v2649:0, v2649:0, v2650:0, 0, v2146:0, v2656:0, v2684:0, 1, v2727:0, v2657:0, v2658:0, v2659:0, v2660:0, v2661:0, 3, 2, 31, 4) :|: v2727:0 > 1 && v2727:0 > v2146:0 + v2649:0 && v2146:0 + v2649:0 > 0 && v2656:0 > 0
Filtered unneeded arguments:
   f_611(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_611(x6, x7, x10, x11, x12, x14)
   f_731(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_731(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 10 rules.P rules:
f_611(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v2146:0 + v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 > 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611'(sum~v2146:0~v1742:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611(v2146:0 + v1742:0, v1742:0, v2146:0, v2146:0 + v1742:0, div, 2 * v2146:0 + 2 * v1742:0) :|: v2146:0 + v1742:0 > 0 && 2 * v2146:0 + 2 * v1742:0 > 1 && v1750:0 < div && v2146:0 + v1742:0 < 2 * v2146:0 + 2 * v1742:0 && v2146:0 + v1742:0 - 2 * div < 2 && v2146:0 + v1742:0 - 2 * div >= 0 && sum~v2146:0~v1742:0 = v2146:0 + v1742:0
f_611(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && v2662:0 < div && 2 * v2662:0 + 2 * v1742:0 > -1
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 > -1 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 < 0 && v2662:0 + v1742:0 - 2 * div <= 0 && v2662:0 + v1742:0 - 2 * div > -2
f_611'(v1741:0, v1742:0, v1750:0, v1746:0, v1747:0, v1749:0) -> f_731(v1741:0, v1742:0, v2662:0, v2662:0 + v1742:0, div, 2 * v2662:0 + 2 * v1742:0) :|: v2662:0 + v1742:0 >= 0 && v2662:0 + v1742:0 = 2 * v1741:0 && v2662:0 + v1742:0 <= v1741:0 && 2 * v2662:0 + 2 * v1742:0 > -1 && v2662:0 < div && v2662:0 + v1742:0 - 2 * div < 2 && v2662:0 + v1742:0 - 2 * div >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, v2662:1 + v2649:0) :|: v2662:1 < div && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 <= v2648:0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 < 0 && v2662:1 + v2649:0 - 2 * div <= 0 && v2662:1 + v2649:0 - 2 * div > -2 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731'(v2648:0, v2649:0, v2662:0, v2656:0, v2684:0, sum~v2662:1~v2649:0) -> f_731(v2648:0, v2649:0, v2662:1, v2662:1 + v2649:0, div, 2 * v2662:1 + 2 * v2649:0) :|: v2662:1 < div && v2662:1 + v2649:0 <= v2648:0 && 2 * v2662:1 + 2 * v2649:0 > -1 && v2662:1 + v2649:0 >= 0 && v2662:1 + v2649:0 - 2 * div < 2 && v2662:1 + v2649:0 - 2 * div >= 0 && sum~v2662:1~v2649:0 = v2662:1 + v2649:0
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0

----------------------------------------

(41)
Obligation:
Rules:
f_611(x, x1, x2, x3, x4, x5) -> f_611'(x6 + x1, x1, x2, x3, x4, x5) :|: 2 * x6 + 2 * x1 > 1 && x2 < x7 && x6 + x1 < 2 * x6 + 2 * x1 && x6 + x1 > 0 && x = x6 + x1
f_611'(x8, x9, x10, x11, x12, x13) -> f_611(x14 + x9, x9, x14, x14 + x9, x15, 2 * x14 + 2 * x9) :|: x14 + x9 > 0 && 2 * x14 + 2 * x9 > 1 && x10 < x15 && x14 + x9 < 2 * x14 + 2 * x9 && x14 + x9 - 2 * x15 < 2 && x14 + x9 - 2 * x15 >= 0 && x8 = x14 + x9
f_611(x16, x17, x18, x19, x20, x21) -> f_611'(x16, x17, x18, x19, x20, x21) :|: x22 + x17 = 2 * x16 && x22 + x17 > -1 && x22 + x17 <= x16 && x22 < x23 && 2 * x22 + 2 * x17 > -1
f_611'(x24, x25, x26, x27, x28, x29) -> f_731(x24, x25, x30, x30 + x25, x31, 2 * x30 + 2 * x25) :|: x30 + x25 = 2 * x24 && x30 + x25 > -1 && x30 + x25 <= x24 && 2 * x30 + 2 * x25 > -1 && x30 < x31 && x30 + x25 < 0 && x30 + x25 - 2 * x31 <= 0 && x30 + x25 - 2 * x31 > -2
f_611'(x32, x33, x34, x35, x36, x37) -> f_731(x32, x33, x38, x38 + x33, x39, 2 * x38 + 2 * x33) :|: x38 + x33 >= 0 && x38 + x33 = 2 * x32 && x38 + x33 <= x32 && 2 * x38 + 2 * x33 > -1 && x38 < x39 && x38 + x33 - 2 * x39 < 2 && x38 + x33 - 2 * x39 >= 0
f_172 -> f_611(v57:0 + v13:0, v13:0, v57:0, 64, 32, 128) :|: v13:0 > 0 && v57:0 + v13:0 > -1 && v57:0 + v13:0 < 128 && v57:0 < 127
f_731(x40, x41, x42, x43, x44, x45) -> f_731'(x40, x41, x42, x43, x44, x46 + x41) :|: x46 < x47 && 2 * x46 + 2 * x41 > -1 && x46 + x41 <= x40 && x45 = x46 + x41
f_731'(x48, x49, x50, x51, x52, x53) -> f_731(x48, x49, x54, x54 + x49, x55, 2 * x54 + 2 * x49) :|: x54 < x55 && x54 + x49 <= x48 && 2 * x54 + 2 * x49 > -1 && x54 + x49 < 0 && x54 + x49 - 2 * x55 <= 0 && x54 + x49 - 2 * x55 > -2 && x53 = x54 + x49
f_731'(x56, x57, x58, x59, x60, x61) -> f_731(x56, x57, x62, x62 + x57, x63, 2 * x62 + 2 * x57) :|: x62 < x63 && x62 + x57 <= x56 && 2 * x62 + 2 * x57 > -1 && x62 + x57 >= 0 && x62 + x57 - 2 * x63 < 2 && x62 + x57 - 2 * x63 >= 0 && x61 = x62 + x57
f_731(sum~v2146:0~v2649:0, v2649:0, v2662:0, v2656:0, v2684:0, v2727:0) -> f_611(v2146:0 + v2649:0, v2649:0, v2146:0, v2656:0, v2684:0, v2727:0) :|: v2727:0 > v2146:0 + v2649:0 && v2727:0 > 1 && v2656:0 > 0 && v2146:0 + v2649:0 > 0 && sum~v2146:0~v2649:0 = v2146:0 + v2649:0
Start term: f_172

----------------------------------------

(42) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_611_6,1)
   (f_611'_6,2)
   (f_731_6,3)
   (f_172_6,4)
   (f_731'_6,5)

----------------------------------------

(43)
Obligation:
START: 4;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
oldX7 := nondet();
assume(oldX6 + oldX1 > 0 && 2 * oldX6 + 2 * oldX1 > 1 && oldX2 < oldX7 && oldX6 + oldX1 < 2 * oldX6 + 2 * oldX1 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 > -1 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX6 + oldX1 >= 0 && oldX6 + oldX1 = 2 * oldX0 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 < oldX7 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 4;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX7 > 0 && oldX6 + oldX7 > -1 && oldX6 + oldX7 < 128 && oldX6 < 127);
x0 := oldX6 + oldX7;
x1 := oldX7;
x2 := oldX6;
x3 := 64;
x4 := 32;
x5 := 128;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 <= oldX0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX6 + oldX1;
TO: 5;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 < 0 && oldX6 + oldX1 - 2 * oldX7 <= 0 && oldX6 + oldX1 - 2 * oldX7 > -2 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 5;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX5 - oldX1;
oldX7 := nondet();
assume(oldX6 < oldX7 && oldX6 + oldX1 <= oldX0 && 2 * oldX6 + 2 * oldX1 > -1 && oldX6 + oldX1 >= 0 && oldX6 + oldX1 - 2 * oldX7 < 2 && oldX6 + oldX1 - 2 * oldX7 >= 0 && oldX5 = oldX6 + oldX1);
x0 := oldX0;
x1 := oldX1;
x2 := oldX5 - oldX1;
x3 := oldX6 + oldX1;
x4 := oldX7;
x5 := 2 * oldX6 + 2 * oldX1;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := oldX0 - oldX1;
assume(oldX5 > oldX6 + oldX1 && oldX5 > 1 && oldX3 > 0 && oldX6 + oldX1 > 0 && oldX0 = oldX6 + oldX1);
x0 := oldX6 + oldX1;
x1 := oldX1;
x2 := oldX0 - oldX1;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 1;


----------------------------------------

(44)
Obligation:
Lasso
----------------------------------------

(45) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 79 rulesP rules:
f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_572(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1499, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1533 = v1501 / 2
f_573(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: v1502 < v1533
f_574(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_576(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: TRUE
f_578(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1498, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) :|: 0 = 0
f_580(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4) -> f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: v1559 = 2 * v1501 && 256 <= v1559
f_582(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_584(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_586(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_587(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: TRUE
f_588(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_589(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) :|: 0 = 0
f_590(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 4, 256) -> f_592(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: v1559 <= v1493 && 256 <= v1493
f_592(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_594(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: 0 = 0
f_594(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_596(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: TRUE
f_596(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_598(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: 0 = 0
f_598(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_600(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: 0 = 0
f_600(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_602(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: v1670 + v1494 = v1559
f_602(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_604(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: TRUE
f_604(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_606(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) :|: TRUE
f_606(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 256, 31, 128, 4) -> f_570(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1501, v1533, 1, v1559, v1670, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: TRUE
f_570(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1497, v1498, v1499, 1, v1501, v1502, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) -> f_571(v1488, v1489, v1490, v1491, v1492, v1493, v1494, v1495, 0, v1502, v1498, v1499, 1, v1501, v1503, v1504, v1505, v1506, v1507, 3, 2, 128, 31, 64, 4) :|: 0 = 0
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 < 1 + v11 && 0 <= v11
f_237(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_241(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_243(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_245(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 128 <= v11
f_248(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_251(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_254(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_257(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_260(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: v50 + v13 = 128 && v50 <= 127
f_263(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_266(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_270(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_374(v1, v3, v5, v7, v9, v11, v13, v15, 0, v15, 64, 32, 1, 128, v50, v2, v4, v6, v8, v10, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) :|: TRUE
f_374(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 63, 64, 32, 256, 191, 4) -> f_476(v430, v431, v432, v433, v434, v435, v436, v437, 0, v439, v440, v441, 1, v443, v444, v445, v446, v447, v448, v449, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) :|: TRUE
f_476(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 191, 64, 256, 512, 511, 4) -> f_570(v880, v881, v882, v883, v884, v885, v886, v887, 0, v889, v890, v891, 1, v893, v894, v895, v896, v897, v898, v899, 3, 2, 128, 31, 64, 4) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_571(v1488:0, v1489:0, v1490:0, v1491:0, v1492:0, v1493:0, v1494:0, v1495:0, 0, v1502:0, v1498:0, v1499:0, 1, v1501:0, v1503:0, v1504:0, v1505:0, v1506:0, v1507:0, 3, 2, 128, 31, 64, 4) -> f_571(v1488:0, v1489:0, v1490:0, v1491:0, v1492:0, v1493:0, v1494:0, v1495:0, 0, v1670:0, v1501:0, v1533:0, 1, v1670:0 + v1494:0, v1503:0, v1504:0, v1505:0, v1506:0, v1507:0, 3, 2, 128, 31, 64, 4) :|: v1533:0 = v1501:0 / 2 && v1533:0 > v1502:0 && v1670:0 + v1494:0 > 255 && v1670:0 + v1494:0 = 2 * v1501:0 && v1670:0 + v1494:0 <= v1493:0 && v1493:0 > 255
f_172 -> f_571(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, v15:0, 0, v50:0, 64, 32, 1, 128, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 128, 31, 64, 4) :|: v11:0 > 127 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v50:0 + v13:0 = 128 && v50:0 < 128
Filtered unneeded arguments:
   f_571(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_571(x6, x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_571(v1493:0, v1494:0, v1502:0, v1498:0, v1499:0, v1501:0) -> f_571'(v1493:0, v1494:0, v1502:0, v1498:0, v1499:0, v1501:0) :|: v1502:0 < div && v1670:0 + v1494:0 > 255 && v1670:0 + v1494:0 = 2 * v1501:0 && v1493:0 > 255 && v1670:0 + v1494:0 <= v1493:0
f_571'(v1493:0, v1494:0, v1502:0, v1498:0, v1499:0, v1501:0) -> f_571(v1493:0, v1494:0, v1670:0, v1501:0, div, v1670:0 + v1494:0) :|: v1502:0 < div && v1670:0 + v1494:0 > 255 && v1670:0 + v1494:0 = 2 * v1501:0 && v1670:0 + v1494:0 <= v1493:0 && v1501:0 < 0 && v1493:0 > 255 && v1501:0 - 2 * div <= 0 && v1501:0 - 2 * div > -2
f_571'(v1493:0, v1494:0, v1502:0, v1498:0, v1499:0, v1501:0) -> f_571(v1493:0, v1494:0, v1670:0, v1501:0, div, v1670:0 + v1494:0) :|: v1502:0 < div && v1670:0 + v1494:0 > 255 && v1670:0 + v1494:0 = 2 * v1501:0 && v1670:0 + v1494:0 <= v1493:0 && v1501:0 > -1 && v1493:0 > 255 && v1501:0 - 2 * div < 2 && v1501:0 - 2 * div >= 0
f_172 -> f_571(v11:0, v13:0, v50:0, 64, 32, 128) :|: v13:0 > 0 && v11:0 > 127 && v50:0 < 128 && v50:0 + v13:0 = 128

----------------------------------------

(46)
Obligation:
Rules:
f_571(x, x1, x2, x3, x4, x5) -> f_571'(x, x1, x2, x3, x4, x5) :|: x2 < x6 && x7 + x1 > 255 && x7 + x1 = 2 * x5 && x > 255 && x7 + x1 <= x
f_571'(x8, x9, x10, x11, x12, x13) -> f_571(x8, x9, x14, x13, x15, x14 + x9) :|: x10 < x15 && x14 + x9 > 255 && x14 + x9 = 2 * x13 && x14 + x9 <= x8 && x13 < 0 && x8 > 255 && x13 - 2 * x15 <= 0 && x13 - 2 * x15 > -2
f_571'(x16, x17, x18, x19, x20, x21) -> f_571(x16, x17, x22, x21, x23, x22 + x17) :|: x18 < x23 && x22 + x17 > 255 && x22 + x17 = 2 * x21 && x22 + x17 <= x16 && x21 > -1 && x16 > 255 && x21 - 2 * x23 < 2 && x21 - 2 * x23 >= 0
f_172 -> f_571(v11:0, v13:0, v50:0, 64, 32, 128) :|: v13:0 > 0 && v11:0 > 127 && v50:0 < 128 && v50:0 + v13:0 = 128
Start term: f_172

----------------------------------------

(47) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_571_6,1)
   (f_571'_6,2)
   (f_172_6,3)

----------------------------------------

(48)
Obligation:
START: 3;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX2 < oldX6 && oldX7 + oldX1 > 255 && oldX7 + oldX1 = 2 * oldX5 && oldX0 > 255 && oldX7 + oldX1 <= oldX0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
x5 := oldX5;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX2 < oldX7 && oldX6 + oldX1 > 255 && oldX6 + oldX1 = 2 * oldX5 && oldX6 + oldX1 <= oldX0 && oldX5 < 0 && oldX0 > 255 && oldX5 - 2 * oldX7 <= 0 && oldX5 - 2 * oldX7 > -2);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX5;
x4 := oldX7;
x5 := oldX6 + oldX1;
TO: 1;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
assume(oldX2 < oldX7 && oldX6 + oldX1 > 255 && oldX6 + oldX1 = 2 * oldX5 && oldX6 + oldX1 <= oldX0 && oldX5 > -1 && oldX0 > 255 && oldX5 - 2 * oldX7 < 2 && oldX5 - 2 * oldX7 >= 0);
x0 := oldX0;
x1 := oldX1;
x2 := oldX6;
x3 := oldX5;
x4 := oldX7;
x5 := oldX6 + oldX1;
TO: 1;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := nondet();
oldX7 := nondet();
oldX8 := nondet();
assume(oldX7 > 0 && oldX6 > 127 && oldX8 < 128 && oldX8 + oldX7 = 128);
x0 := oldX6;
x1 := oldX7;
x2 := oldX8;
x3 := 64;
x4 := 32;
x5 := 128;
TO: 1;


----------------------------------------

(49) T2 (EQUIVALENT)
Termination proof succeeded
Initially, performed program simplifications using lexicographic rank functions:
 * Removed transitions 3, 5, 6, 11, 12 using the following rank functions:
    - Rank function 1:
      RF for loc. 6: 255+x0+x1-2*x5
      RF for loc. 7: x0+x1-2*x5
      RF for loc. 8: 1+x0+x1-2*x5
      Bound for (chained) transitions 6: 2
      Bound for (chained) transitions 11: 259
      Bound for (chained) transitions 12: 1
    - Rank function 2:
      RF for loc. 6: 0
      RF for loc. 7: -2
      RF for loc. 8: -1
      Bound for (chained) transitions 3: 0
    - Rank function 3:
      RF for loc. 7: -1
      RF for loc. 8: 0
      Bound for (chained) transitions 5: 0

----------------------------------------

(50)
YES

----------------------------------------

(51)
Obligation:
Lasso
----------------------------------------

(52) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 69 rulesP rules:
f_490(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v973, v974, 1, v976, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_495(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v974, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: 0 = 0
f_495(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v974, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_500(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: v1020 = v976 / 2
f_500(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_505(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: v977 < v1020
f_505(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_511(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: 0 = 0
f_511(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_517(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: TRUE
f_517(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v973, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_523(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4) :|: 0 = 0
f_523(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4) -> f_527(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: v1158 = 2 * v976 && 256 <= v1158
f_527(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_531(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: TRUE
f_531(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_535(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: 0 = 0
f_535(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_538(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: 0 = 0
f_538(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_541(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: TRUE
f_541(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_545(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: 0 = 0
f_545(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_549(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: 0 = 0
f_549(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_553(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: v1319 + v969 = v1158
f_553(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_557(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: TRUE
f_557(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_561(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) :|: TRUE
f_561(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 128, 4, 256) -> f_486(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v976, v1020, 1, v1158, v1319, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: TRUE
f_486(v963, v964, v965, v966, v967, -1, v969, v970, 0, v972, v973, v974, 1, v976, v977, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) -> f_490(v963, v964, v965, v966, v967, -1, v969, v970, 0, v977, v973, v974, 1, v976, v978, v979, v980, v981, v982, 3, 2, 31, 64, 128, 4) :|: 0 = 0
f_172 -> f_173(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_173(v1, v2, 3, 1, 4) -> f_174(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_174(v1, v3, v2, v4, 3, 1, 4) -> f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_175(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_176(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) :|: 1 <= v9 && v10 = 3 + v9 && 4 <= v10
f_177(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 1, 4) -> f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_178(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_179(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_180(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_183(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_185(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_186(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: TRUE
f_187(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 = 0
f_188(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) :|: 0 <= 1 + v11
f_190(v1, v3, v5, v7, v9, v11, v13, v15, v2, v4, v6, v8, v10, 0, 3, 1, 4) -> f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_192(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_196(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 < v13
f_199(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_202(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 <= v15
f_209(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) :|: TRUE
f_216(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 3, 1, 4) -> f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_218(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, v15, 0, v2, v4, v6, v8, v10, 64, 3, 1, 4) -> f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_222(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, v2, v4, v6, v8, v10, 3, 1, 4) -> f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) :|: 0 = 0
f_223(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4) -> f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) :|: v15 < 32
f_224(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, v2, v4, v6, v8, v10, 3, 1, 4, 31) -> f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_226(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, v2, v4, v6, v8, v10, 3, 4, 31) -> f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_232(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_234(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_238(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 1 + v11 = 0 && 0 = 0
f_238(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_240(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_240(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_242(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: TRUE
f_242(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_244(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_244(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_246(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) :|: 0 = 0
f_246(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v2, v4, v6, v8, v10, 3, 4, 31) -> f_249(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: v42 + v13 = 128 && v42 <= 127
f_249(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_252(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_252(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_255(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 4, 31, 127) :|: TRUE
f_255(v1, v3, v5, v7, v9, -1, v13, v15, 0, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 4, 31, 127) -> f_325(v1, v3, v5, v7, v9, -1, v13, v15, 0, v15, 64, 32, 1, 128, v42, v2, v4, v6, v8, v10, 3, 2, 31, 63, 64, 128, 32, 256, 191, 4) :|: TRUE
f_325(v189, v190, v191, v192, v193, -1, v195, v196, 0, v198, v199, v200, 1, v202, v203, v204, v205, v206, v207, v208, 3, 2, 31, 63, 64, 128, 32, 256, 191, 4) -> f_407(v189, v190, v191, v192, v193, -1, v195, v196, 0, v198, v199, v200, 1, v202, v203, v204, v205, v206, v207, v208, 3, 2, 31, 191, 64, 256, 128, 512, 511, 4) :|: TRUE
f_407(v658, v659, v660, v661, v662, -1, v664, v665, 0, v667, v668, v669, 1, v671, v672, v673, v674, v675, v676, v677, 3, 2, 31, 191, 64, 256, 128, 512, 511, 4) -> f_486(v658, v659, v660, v661, v662, -1, v664, v665, 0, v667, v668, v669, 1, v671, v672, v673, v674, v675, v676, v677, 3, 2, 31, 64, 128, 4) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_172 -> f_490(v1:0, v3:0, v5:0, v7:0, v9:0, -1, v13:0, v15:0, 0, v42:0, 64, 32, 1, 128, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3 + v9:0, 3, 2, 31, 64, 128, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v15:0 > -1 && v15:0 < 32 && v42:0 + v13:0 = 128 && v42:0 < 128
f_490(v963:0, v964:0, v965:0, v966:0, v967:0, -1, v969:0, v970:0, 0, v977:0, v973:0, v974:0, 1, v976:0, v978:0, v979:0, v980:0, v981:0, v982:0, 3, 2, 31, 64, 128, 4) -> f_490(v963:0, v964:0, v965:0, v966:0, v967:0, -1, v969:0, v970:0, 0, v1319:0, v976:0, v1020:0, 1, v1319:0 + v969:0, v978:0, v979:0, v980:0, v981:0, v982:0, 3, 2, 31, 64, 128, 4) :|: v976:0 / 2 = v1020:0 && v977:0 < v1020:0 && v1319:0 + v969:0 = 2 * v976:0 && v1319:0 + v969:0 > 255
Filtered unneeded arguments:
   f_490(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_490(x7, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_172 -> f_490(v13:0, v42:0, 64, 32, 128) :|: v42:0 + v13:0 = 128 && v42:0 < 128 && v13:0 > 0
f_490(v969:0, v977:0, v973:0, v974:0, v976:0) -> f_490'(v969:0, v977:0, v973:0, v974:0, v976:0) :|: v977:0 < div && v1319:0 + v969:0 > 255 && v1319:0 + v969:0 = 2 * v976:0
f_490'(v969:0, v977:0, v973:0, v974:0, v976:0) -> f_490(v969:0, v1319:0, v976:0, div, v1319:0 + v969:0) :|: v977:0 < div && v1319:0 + v969:0 = 2 * v976:0 && v976:0 < 0 && v1319:0 + v969:0 > 255 && v976:0 - 2 * div <= 0 && v976:0 - 2 * div > -2
f_490'(v969:0, v977:0, v973:0, v974:0, v976:0) -> f_490(v969:0, v1319:0, v976:0, div, v1319:0 + v969:0) :|: v977:0 < div && v1319:0 + v969:0 = 2 * v976:0 && v976:0 > -1 && v1319:0 + v969:0 > 255 && v976:0 - 2 * div < 2 && v976:0 - 2 * div >= 0

----------------------------------------

(53)
Obligation:
Rules:
f_172 -> f_490(v13:0, v42:0, 64, 32, 128) :|: v42:0 + v13:0 = 128 && v42:0 < 128 && v13:0 > 0
f_490(x, x1, x2, x3, x4) -> f_490'(x, x1, x2, x3, x4) :|: x1 < x5 && x6 + x > 255 && x6 + x = 2 * x4
f_490'(x7, x8, x9, x10, x11) -> f_490(x7, x12, x11, x13, x12 + x7) :|: x8 < x13 && x12 + x7 = 2 * x11 && x11 < 0 && x12 + x7 > 255 && x11 - 2 * x13 <= 0 && x11 - 2 * x13 > -2
f_490'(x14, x15, x16, x17, x18) -> f_490(x14, x19, x18, x20, x19 + x14) :|: x15 < x20 && x19 + x14 = 2 * x18 && x18 > -1 && x19 + x14 > 255 && x18 - 2 * x20 < 2 && x18 - 2 * x20 >= 0
Start term: f_172

----------------------------------------

(54) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_172_5,1)
   (f_490_5,2)
   (f_490'_5,3)

----------------------------------------

(55)
Obligation:
START: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := nondet();
oldX6 := nondet();
assume(oldX6 + oldX5 = 128 && oldX6 < 128 && oldX5 > 0);
x0 := oldX5;
x1 := oldX6;
x2 := 64;
x3 := 32;
x4 := 128;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := nondet();
oldX6 := nondet();
assume(oldX1 < oldX5 && oldX6 + oldX0 > 255 && oldX6 + oldX0 = 2 * oldX4);
x0 := oldX0;
x1 := oldX1;
x2 := oldX2;
x3 := oldX3;
x4 := oldX4;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := nondet();
oldX6 := nondet();
assume(oldX1 < oldX6 && oldX5 + oldX0 = 2 * oldX4 && oldX4 < 0 && oldX5 + oldX0 > 255 && oldX4 - 2 * oldX6 <= 0 && oldX4 - 2 * oldX6 > -2);
x0 := oldX0;
x1 := oldX5;
x2 := oldX4;
x3 := oldX6;
x4 := oldX5 + oldX0;
TO: 2;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := nondet();
oldX6 := nondet();
assume(oldX1 < oldX6 && oldX5 + oldX0 = 2 * oldX4 && oldX4 > -1 && oldX5 + oldX0 > 255 && oldX4 - 2 * oldX6 < 2 && oldX4 - 2 * oldX6 >= 0);
x0 := oldX0;
x1 := oldX5;
x2 := oldX4;
x3 := oldX6;
x4 := oldX5 + oldX0;
TO: 2;

/home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Update_for_Loop_Iterator_1_NT.c:9:24: warning: implicit declaration of function '__VERIFIER_nondet_int' is invalid in C99 [-Wimplicit-function-declaration]
    int max_msg_size = __VERIFIER_nondet_int();
                       ^
1 warning generated.

line 94:18 mismatched input 'nofree' expecting CLOSEC
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.003s
 
