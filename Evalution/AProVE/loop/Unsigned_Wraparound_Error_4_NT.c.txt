timeout 900 ./AProVE.sh -m wst --bit-width 64 Unsigned_Wraparound_Error_4_NT.c
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Unsigned_Wraparound_Error_4_NT.c
NO
proof of /home/ubuntu/tool/FSE_benchmark/loop/Unsigned_Wraparound_Error_4_NT.c
# AProVE Commit ID: 249ab60e2b58fea5661f104665226199f0baff7b jera 20211103 unpublished


Termination of the given C Problem could be disproven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 0 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 795 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToLassoProof [COMPLETE, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution Lasso
        (8) Lasso2IRS [EQUIVALENT, 91 ms]
        (9) IntTRS
        (10) IRS2T2 [EQUIVALENT, 0 ms]
        (11) T2IntSys
    (12) LLVM Symbolic Execution Lasso
        (13) Lasso2IRS [EQUIVALENT, 109 ms]
        (14) IntTRS
        (15) IRS2T2 [EQUIVALENT, 0 ms]
        (16) T2IntSys
    (17) LLVM Symbolic Execution Lasso
        (18) Lasso2IRS [EQUIVALENT, 130 ms]
        (19) IntTRS
        (20) IRS2T2 [EQUIVALENT, 0 ms]
        (21) T2IntSys
        (22) T2 [COMPLETE, 611 ms]
        (23) NO
    (24) LLVM Symbolic Execution Lasso
        (25) Lasso2IRS [EQUIVALENT, 105 ms]
        (26) IntTRS
        (27) IRS2T2 [EQUIVALENT, 0 ms]
        (28) T2IntSys


----------------------------------------

(0)
Obligation:
c file /home/ubuntu/tool/FSE_benchmark/loop/Unsigned_Wraparound_Error_4_NT.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /home/ubuntu/tool/FSE_benchmark/loop/Unsigned_Wraparound_Error_4_NT.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-unknown-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_uint" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 9
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 (...)* @__VERIFIER_nondet_uint()
		store %4, %2
		br %5
	5:
		%6 = load %2
		%7 = icmp ugt %6 0
		br %7, %8, %16
	8:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%9 = load %2
		store %9, %3
		%10 = load %3
		%11 = icmp ugt %10 16
		br %11, %12, %13
	12:
		store 16, %3
		br %13
	13:
		%14 = load %2
		%15 = sub i32 %14, 16
		store %15, %2
		br %5
	16:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToLassoProof (COMPLETE)
Converted SEGraph to 4 dependent lassos.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Lasso
----------------------------------------

(8) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 86 rulesP rules:
f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) -> f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 1 + v261 <= 0 && v258 <= 15
f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) -> f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: 0 = 0
f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: TRUE
f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) :|: 0 = 0
f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) -> f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: 16 + v345 = v261 && 0 <= 32 + v345 && 17 + v345 <= 0
f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_253(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 31, 47, 4) :|: TRUE
f_253(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 31, 47, 4) -> f_313(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 4) :|: TRUE
f_313(v408, v409, v410, v411, v412, 1, v414, v415, v416, v417, 0, 16, 3, 4) -> f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 <= v414 && 16 <= v412
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 1 + v414 <= 0 && v412 <= 15
f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 < v414 && 17 <= v412
f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: TRUE
f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: 0 = 0
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 16 < v414 && 33 <= v412
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) :|: v414 <= 16 && v412 <= 32
f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 0 = 0
f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: TRUE
f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) -> f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: 16 + v489 = v414 && 1 <= v489
f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_313(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) -> f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: 0 = 0
f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: TRUE
f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) :|: 0 = 0
f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) -> f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: 16 + v485 = v414 && 0 <= 15 + v485 && v485 <= 0
f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_248(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4) :|: TRUE
f_248(v254, v255, v256, v257, v258, 1, 0, v261, v262, v263, v264, 3, 16, 4) -> f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) :|: 0 = 0
f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) -> f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: 16 + v486 = v414 && 17 + v486 <= 0
f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_313(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_76 -> f_77(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_77(v1, v2, 3, 1, 4) -> f_78(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_78(v1, v3, v2, v4, 3, 1, 4) -> f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 <= v7
f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 = 0
f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 < v7
f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_97(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 16) :|: v7 <= 16
f_97(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 16) -> f_99(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) :|: 0 = 0
f_99(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) -> f_101(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) :|: TRUE
f_101(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) -> f_103(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) :|: 0 = 0
f_103(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) -> f_105(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) :|: 16 + v10 = v7 && 0 <= 15 + v10 && v10 <= 0
f_105(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) -> f_107(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) :|: TRUE
f_107(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) -> f_109(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) :|: TRUE
f_109(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) -> f_150(v1, v3, v5, v7, v7, 1, 0, v10, v2, v4, v6, 3, 16, 32, 15, 4) :|: TRUE
f_150(v63, v64, v65, v66, v67, 1, 0, v70, v71, v72, v73, 3, 16, 32, 15, 4) -> f_248(v63, v64, v65, v66, v67, 1, 0, v70, v71, v72, v73, 3, 16, 4) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_76 -> f_314(v1:0, v3:0, v5:0, 16 + (16 + v345:0), v345:0, 1, 16 + v345:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 0, 16, 3, 4) :|: v345:0 > -32 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v345:0 < -16 && v345:0 < -15
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v486:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v486:0, 1, 16 + v486:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 < 16 && v486:0 < -16
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v489:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v489:0, 1, 16 + v489:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 > 32 && v489:0 > 0
f_314(v408:0, v409:0, v410:0, v411:0, 16 + (16 + v345:0), 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v345:0, 1, 16 + v345:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v345:0 > -32 && v412:0 > 16 && v345:0 < -16 && v412:0 < 33 && v345:0 < -15
Filtered unneeded arguments:
   f_314(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_314(x5, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_76 -> f_314(v345:0, 16 + v345:0) :|: v345:0 < -16 && v345:0 < -15 && v345:0 > -32
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(sum~cons_16~v489:0, v412:0) -> f_314(v489:0, 16 + v489:0) :|: v412:0 > 32 && v489:0 > 0 && sum~cons_16~v489:0 = 16 + v489:0
f_314(sum~cons_16~sum~cons_16~v345:0, v412:0) -> f_314(v345:0, 16 + v345:0) :|: v412:0 > 16 && v345:0 > -32 && v345:0 < -16 && v345:0 < -15 && v412:0 < 33 && sum~cons_16~sum~cons_16~v345:0 = 16 + (16 + v345:0)

----------------------------------------

(9)
Obligation:
Rules:
f_76 -> f_314(v345:0, 16 + v345:0) :|: v345:0 < -16 && v345:0 < -15 && v345:0 > -32
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(x, x1) -> f_314(x2, 16 + x2) :|: x1 > 32 && x2 > 0 && x = 16 + x2
f_314(x3, x4) -> f_314(x5, 16 + x5) :|: x4 > 16 && x5 > -32 && x5 < -16 && x5 < -15 && x4 < 33 && x3 = 16 + (16 + x5)
Start term: f_76

----------------------------------------

(10) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_76_2,1)
   (f_314_2,2)

----------------------------------------

(11)
Obligation:
START: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := nondet();
assume(oldX2 < -16 && oldX2 < -15 && oldX2 > -32);
x0 := oldX2;
x1 := 16 + oldX2;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 < 16 && oldX2 < -16 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 > 32 && oldX2 > 0 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 32;
assume(oldX1 > 16 && oldX2 > -32 && oldX2 < -16 && oldX2 < -15 && oldX1 < 33 && oldX0 = 16 + (16 + oldX2));
x0 := oldX0 - 32;
x1 := 16 + oldX2;
TO: 2;


----------------------------------------

(12)
Obligation:
Lasso
----------------------------------------

(13) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 89 rulesP rules:
f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) -> f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 1 + v261 <= 0 && v258 <= 15
f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) -> f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: 0 = 0
f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: TRUE
f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) :|: 0 = 0
f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) -> f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: 16 + v345 = v261 && 0 <= 32 + v345 && 17 + v345 <= 0
f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_253(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 31, 47, 4) :|: TRUE
f_253(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 31, 47, 4) -> f_313(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 4) :|: TRUE
f_313(v408, v409, v410, v411, v412, 1, v414, v415, v416, v417, 0, 16, 3, 4) -> f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 <= v414 && 16 <= v412
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 1 + v414 <= 0 && v412 <= 15
f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 < v414 && 17 <= v412
f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: TRUE
f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: 0 = 0
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 16 < v414 && 33 <= v412
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) :|: v414 <= 16 && v412 <= 32
f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 0 = 0
f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: TRUE
f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) -> f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: 16 + v489 = v414 && 1 <= v489
f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_313(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) -> f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: 0 = 0
f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: TRUE
f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) :|: 0 = 0
f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) -> f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: 16 + v485 = v414 && 0 <= 15 + v485 && v485 <= 0
f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_248(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4) :|: TRUE
f_248(v254, v255, v256, v257, v258, 1, 0, v261, v262, v263, v264, 3, 16, 4) -> f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) :|: 0 = 0
f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) -> f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: 16 + v486 = v414 && 17 + v486 <= 0
f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_313(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_76 -> f_77(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_77(v1, v2, 3, 1, 4) -> f_78(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_78(v1, v3, v2, v4, 3, 1, 4) -> f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 <= v7
f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 = 0
f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 < v7
f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_96(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) :|: 16 < v7
f_96(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) -> f_98(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) :|: 0 = 0
f_98(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) -> f_100(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) :|: TRUE
f_100(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) -> f_102(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_102(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) -> f_104(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_104(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) -> f_106(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) :|: 0 = 0
f_106(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) -> f_108(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) :|: 16 + v12 = v7 && 1 <= v12
f_108(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) -> f_110(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_110(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) -> f_112(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_112(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) -> f_154(v1, v3, v5, v7, v7, 1, v12, v2, v4, v6, 0, 16, 3, 15, 31, 4) :|: TRUE
f_154(v81, v82, v83, v84, v85, 1, v87, v88, v89, v90, 0, 16, 3, 15, 31, 4) -> f_208(v81, v82, v83, v84, v85, 1, v87, v88, v89, v90, 0, 16, 3, 15, 31, 4) :|: TRUE
f_208(v172, v173, v174, v175, v176, 1, v178, v179, v180, v181, 0, 16, 3, 15, 31, 4) -> f_253(v172, v173, v174, v175, v176, 1, v178, v179, v180, v181, 0, 16, 3, 31, 47, 4) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v486:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v486:0, 1, 16 + v486:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 < 16 && v486:0 < -16
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v489:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v489:0, 1, 16 + v489:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 > 32 && v489:0 > 0
f_76 -> f_314(v1:0, v3:0, v5:0, 16 + v12:0, v12:0, 1, 16 + v12:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 0, 16, 3, 4) :|: v12:0 > 0 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_314(v408:0, v409:0, v410:0, v411:0, 16 + (16 + v345:0), 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v345:0, 1, 16 + v345:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v345:0 > -32 && v412:0 > 16 && v345:0 < -16 && v412:0 < 33 && v345:0 < -15
Filtered unneeded arguments:
   f_314(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_314(x5, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(sum~cons_16~v489:0, v412:0) -> f_314(v489:0, 16 + v489:0) :|: v412:0 > 32 && v489:0 > 0 && sum~cons_16~v489:0 = 16 + v489:0
f_76 -> f_314(v12:0, 16 + v12:0) :|: v12:0 > 0
f_314(sum~cons_16~sum~cons_16~v345:0, v412:0) -> f_314(v345:0, 16 + v345:0) :|: v412:0 > 16 && v345:0 > -32 && v345:0 < -16 && v345:0 < -15 && v412:0 < 33 && sum~cons_16~sum~cons_16~v345:0 = 16 + (16 + v345:0)

----------------------------------------

(14)
Obligation:
Rules:
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(x, x1) -> f_314(x2, 16 + x2) :|: x1 > 32 && x2 > 0 && x = 16 + x2
f_76 -> f_314(v12:0, 16 + v12:0) :|: v12:0 > 0
f_314(x3, x4) -> f_314(x5, 16 + x5) :|: x4 > 16 && x5 > -32 && x5 < -16 && x5 < -15 && x4 < 33 && x3 = 16 + (16 + x5)
Start term: f_76

----------------------------------------

(15) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_314_2,1)
   (f_76_2,2)

----------------------------------------

(16)
Obligation:
START: 2;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 < 16 && oldX2 < -16 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 > 32 && oldX2 > 0 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 1;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := nondet();
assume(oldX2 > 0);
x0 := oldX2;
x1 := 16 + oldX2;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 32;
assume(oldX1 > 16 && oldX2 > -32 && oldX2 < -16 && oldX2 < -15 && oldX1 < 33 && oldX0 = 16 + (16 + oldX2));
x0 := oldX0 - 32;
x1 := 16 + oldX2;
TO: 1;


----------------------------------------

(17)
Obligation:
Lasso
----------------------------------------

(18) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 86 rulesP rules:
f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) -> f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 1 + v261 <= 0 && v258 <= 15
f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) -> f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: 0 = 0
f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: TRUE
f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) :|: 0 = 0
f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) -> f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: 16 + v345 = v261 && 0 <= 32 + v345 && 17 + v345 <= 0
f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_253(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 31, 47, 4) :|: TRUE
f_253(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 31, 47, 4) -> f_313(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 4) :|: TRUE
f_313(v408, v409, v410, v411, v412, 1, v414, v415, v416, v417, 0, 16, 3, 4) -> f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 <= v414 && 16 <= v412
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 1 + v414 <= 0 && v412 <= 15
f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 < v414 && 17 <= v412
f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: TRUE
f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: 0 = 0
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 16 < v414 && 33 <= v412
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) :|: v414 <= 16 && v412 <= 32
f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 0 = 0
f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: TRUE
f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) -> f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: 16 + v489 = v414 && 1 <= v489
f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_313(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) -> f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: 0 = 0
f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: TRUE
f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) :|: 0 = 0
f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) -> f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: 16 + v485 = v414 && 0 <= 15 + v485 && v485 <= 0
f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_248(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4) :|: TRUE
f_248(v254, v255, v256, v257, v258, 1, 0, v261, v262, v263, v264, 3, 16, 4) -> f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) :|: 0 = 0
f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) -> f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: 16 + v486 = v414 && 17 + v486 <= 0
f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_313(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_76 -> f_77(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_77(v1, v2, 3, 1, 4) -> f_78(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_78(v1, v3, v2, v4, 3, 1, 4) -> f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 <= v7
f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 = 0
f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 < v7
f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_97(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 16) :|: v7 <= 16
f_97(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 16) -> f_99(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) :|: 0 = 0
f_99(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) -> f_101(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) :|: TRUE
f_101(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) -> f_103(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) :|: 0 = 0
f_103(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 4, 16) -> f_105(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) :|: 16 + v10 = v7 && 0 <= 15 + v10 && v10 <= 0
f_105(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) -> f_107(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) :|: TRUE
f_107(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) -> f_109(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) :|: TRUE
f_109(v1, v3, v5, v7, 1, 0, v10, v2, v4, v6, 3, 16, 4, 15) -> f_150(v1, v3, v5, v7, v7, 1, 0, v10, v2, v4, v6, 3, 16, 32, 15, 4) :|: TRUE
f_150(v63, v64, v65, v66, v67, 1, 0, v70, v71, v72, v73, 3, 16, 32, 15, 4) -> f_248(v63, v64, v65, v66, v67, 1, 0, v70, v71, v72, v73, 3, 16, 4) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_76 -> f_314(v1:0, v3:0, v5:0, 16 + (16 + v345:0), v345:0, 1, 16 + v345:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 0, 16, 3, 4) :|: v345:0 > -32 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v345:0 < -16 && v345:0 < -15
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v486:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v486:0, 1, 16 + v486:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 < 16 && v486:0 < -16
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v489:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v489:0, 1, 16 + v489:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 > 32 && v489:0 > 0
f_314(v408:0, v409:0, v410:0, v411:0, 16 + (16 + v345:0), 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v345:0, 1, 16 + v345:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v345:0 > -32 && v412:0 > 16 && v345:0 < -16 && v412:0 < 33 && v345:0 < -15
Filtered unneeded arguments:
   f_314(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_314(x5, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_76 -> f_314(v345:0, 16 + v345:0) :|: v345:0 < -16 && v345:0 < -15 && v345:0 > -32
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(sum~cons_16~v489:0, v412:0) -> f_314(v489:0, 16 + v489:0) :|: v412:0 > 32 && v489:0 > 0 && sum~cons_16~v489:0 = 16 + v489:0
f_314(sum~cons_16~sum~cons_16~v345:0, v412:0) -> f_314(v345:0, 16 + v345:0) :|: v412:0 > 16 && v345:0 > -32 && v345:0 < -16 && v345:0 < -15 && v412:0 < 33 && sum~cons_16~sum~cons_16~v345:0 = 16 + (16 + v345:0)

----------------------------------------

(19)
Obligation:
Rules:
f_76 -> f_314(v345:0, 16 + v345:0) :|: v345:0 < -16 && v345:0 < -15 && v345:0 > -32
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(x, x1) -> f_314(x2, 16 + x2) :|: x1 > 32 && x2 > 0 && x = 16 + x2
f_314(x3, x4) -> f_314(x5, 16 + x5) :|: x4 > 16 && x5 > -32 && x5 < -16 && x5 < -15 && x4 < 33 && x3 = 16 + (16 + x5)
Start term: f_76

----------------------------------------

(20) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_76_2,1)
   (f_314_2,2)

----------------------------------------

(21)
Obligation:
START: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := nondet();
assume(oldX2 < -16 && oldX2 < -15 && oldX2 > -32);
x0 := oldX2;
x1 := 16 + oldX2;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 < 16 && oldX2 < -16 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 > 32 && oldX2 > 0 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 2;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 32;
assume(oldX1 > 16 && oldX2 > -32 && oldX2 < -16 && oldX2 < -15 && oldX1 < 33 && oldX0 = 16 + (16 + oldX2));
x0 := oldX0 - 32;
x1 := 16 + oldX2;
TO: 2;


----------------------------------------

(22) T2 (COMPLETE)
Nontermination proof succeeded
Found this recurrent set for cutpoint 5: oldX2 <= -17 and x0 <= -17 and x1 <= -1 and oldX2-x0 <= 0 and x0-oldX2 <= 0 and oldX2+x0 <= -34 and oldX2-x1 <= -16 and x1-oldX2 <= 16 and oldX2+x1 <= -18 and x0-x1 <= -16 and x1-x0 <= 16 and x0+x1 <= -18 and x1+-15 <= 0 and x0+1 <= 0

----------------------------------------

(23)
NO

----------------------------------------

(24)
Obligation:
Lasso
----------------------------------------

(25) Lasso2IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 89 rulesP rules:
f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) -> f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 1 + v261 <= 0 && v258 <= 15
f_255(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_258(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_262(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_266(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_270(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) :|: TRUE
f_274(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 15, 4) -> f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) :|: 0 = 0
f_277(v254, v255, v256, v257, v261, 1, 0, v258, v262, v263, v264, 3, 16, 15, 4) -> f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: 0 = 0
f_280(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) :|: TRUE
f_283(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 3, 16, 15, 4) -> f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_286(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) :|: TRUE
f_290(v254, v255, v256, v257, v261, 1, v258, v262, v263, v264, 0, 16, 3, 15, 4) -> f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) :|: 0 = 0
f_294(v254, v255, v256, v257, v261, 1, v262, v263, v264, 0, 16, 3, 4) -> f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: 16 + v345 = v261 && 0 <= 32 + v345 && 17 + v345 <= 0
f_298(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_302(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) :|: TRUE
f_306(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 4, 32, 17) -> f_253(v254, v255, v256, v257, v261, 1, v345, v262, v263, v264, 0, 16, 3, 31, 47, 4) :|: TRUE
f_253(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 31, 47, 4) -> f_313(v273, v274, v275, v276, v277, 1, v279, v280, v281, v282, 0, 16, 3, 4) :|: TRUE
f_313(v408, v409, v410, v411, v412, 1, v414, v415, v416, v417, 0, 16, 3, 4) -> f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) :|: 0 <= v414 && 16 <= v412
f_314(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 1 + v414 <= 0 && v412 <= 15
f_315(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 4) -> f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 < v414 && 17 <= v412
f_317(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_320(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_323(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_326(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_328(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 17, 4) -> f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: TRUE
f_330(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) :|: 0 = 0
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 16 < v414 && 33 <= v412
f_332(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 4) -> f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) :|: v414 <= 16 && v412 <= 32
f_334(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: 0 = 0
f_337(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) :|: TRUE
f_340(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 33, 17, 4) -> f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_343(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) :|: TRUE
f_346(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 33, 17, 4) -> f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) :|: 0 = 0
f_349(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 17, 4) -> f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: 16 + v489 = v414 && 1 <= v489
f_352(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_355(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) :|: TRUE
f_356(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 17, 4) -> f_313(v408, v409, v410, v411, v414, 1, v489, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_335(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 17, 32, 4) -> f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: 0 = 0
f_338(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) :|: TRUE
f_341(v408, v409, v410, v411, v414, 1, 0, v412, v415, v416, v417, 3, 16, 17, 32, 4) -> f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) :|: 0 = 0
f_344(v408, v409, v410, v411, v414, 1, 0, v415, v416, v417, 3, 16, 4) -> f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: 16 + v485 = v414 && 0 <= 15 + v485 && v485 <= 0
f_347(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_350(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) :|: TRUE
f_353(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4, 15) -> f_248(v408, v409, v410, v411, v414, 1, 0, v485, v415, v416, v417, 3, 16, 4) :|: TRUE
f_248(v254, v255, v256, v257, v258, 1, 0, v261, v262, v263, v264, 3, 16, 4) -> f_251(v254, v255, v256, v257, v261, 1, v258, 0, v262, v263, v264, 3, 16, 4) :|: 0 = 0
f_316(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_319(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_322(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_325(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: 0 = 0
f_327(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_329(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_331(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: 0 = 0
f_333(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) :|: TRUE
f_336(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 3, 16, 15, 4) -> f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_339(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) :|: TRUE
f_342(v408, v409, v410, v411, v414, 1, v412, v415, v416, v417, 0, 16, 3, 15, 4) -> f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) :|: 0 = 0
f_345(v408, v409, v410, v411, v414, 1, v415, v416, v417, 0, 16, 3, 4) -> f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: 16 + v486 = v414 && 17 + v486 <= 0
f_348(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_351(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) :|: TRUE
f_354(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4, 17) -> f_313(v408, v409, v410, v411, v414, 1, v486, v415, v416, v417, 0, 16, 3, 4) :|: TRUE
f_76 -> f_77(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_77(v1, v2, 3, 1, 4) -> f_78(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_78(v1, v3, v2, v4, 3, 1, 4) -> f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_79(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_80(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_81(v1, v3, v5, v2, v4, v6, 0, 3, 1, 4) -> f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 <= v7
f_82(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_83(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: TRUE
f_84(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 = 0
f_85(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) :|: 0 < v7
f_86(v1, v3, v5, v7, v2, v4, v6, 0, 3, 1, 4) -> f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_88(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_90(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_92(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_93(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: TRUE
f_94(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) :|: 0 = 0
f_95(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4) -> f_96(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) :|: 16 < v7
f_96(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) -> f_98(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) :|: 0 = 0
f_98(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) -> f_100(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) :|: TRUE
f_100(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 4, 17) -> f_102(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_102(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) -> f_104(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_104(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) -> f_106(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) :|: 0 = 0
f_106(v1, v3, v5, v7, 1, v2, v4, v6, 0, 16, 3, 4, 17) -> f_108(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) :|: 16 + v12 = v7 && 1 <= v12
f_108(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) -> f_110(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_110(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) -> f_112(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) :|: TRUE
f_112(v1, v3, v5, v7, 1, v12, v2, v4, v6, 0, 16, 3, 4, 17) -> f_154(v1, v3, v5, v7, v7, 1, v12, v2, v4, v6, 0, 16, 3, 15, 31, 4) :|: TRUE
f_154(v81, v82, v83, v84, v85, 1, v87, v88, v89, v90, 0, 16, 3, 15, 31, 4) -> f_208(v81, v82, v83, v84, v85, 1, v87, v88, v89, v90, 0, 16, 3, 15, 31, 4) :|: TRUE
f_208(v172, v173, v174, v175, v176, 1, v178, v179, v180, v181, 0, 16, 3, 15, 31, 4) -> f_253(v172, v173, v174, v175, v176, 1, v178, v179, v180, v181, 0, 16, 3, 31, 47, 4) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v486:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v486:0, 1, 16 + v486:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 < 16 && v486:0 < -16
f_314(v408:0, v409:0, v410:0, v411:0, 16 + v489:0, 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v489:0, 1, 16 + v489:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v412:0 > 32 && v489:0 > 0
f_76 -> f_314(v1:0, v3:0, v5:0, 16 + v12:0, v12:0, 1, 16 + v12:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 0, 16, 3, 4) :|: v12:0 > 0 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_314(v408:0, v409:0, v410:0, v411:0, 16 + (16 + v345:0), 1, v412:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) -> f_314(v408:0, v409:0, v410:0, v411:0, v345:0, 1, 16 + v345:0, v415:0, v416:0, v417:0, 0, 16, 3, 4) :|: v345:0 > -32 && v412:0 > 16 && v345:0 < -16 && v412:0 < 33 && v345:0 < -15
Filtered unneeded arguments:
   f_314(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_314(x5, x7)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(sum~cons_16~v489:0, v412:0) -> f_314(v489:0, 16 + v489:0) :|: v412:0 > 32 && v489:0 > 0 && sum~cons_16~v489:0 = 16 + v489:0
f_76 -> f_314(v12:0, 16 + v12:0) :|: v12:0 > 0
f_314(sum~cons_16~sum~cons_16~v345:0, v412:0) -> f_314(v345:0, 16 + v345:0) :|: v412:0 > 16 && v345:0 > -32 && v345:0 < -16 && v345:0 < -15 && v412:0 < 33 && sum~cons_16~sum~cons_16~v345:0 = 16 + (16 + v345:0)

----------------------------------------

(26)
Obligation:
Rules:
f_314(sum~cons_16~v486:0, v412:0) -> f_314(v486:0, 16 + v486:0) :|: v412:0 < 16 && v486:0 < -16 && sum~cons_16~v486:0 = 16 + v486:0
f_314(x, x1) -> f_314(x2, 16 + x2) :|: x1 > 32 && x2 > 0 && x = 16 + x2
f_76 -> f_314(v12:0, 16 + v12:0) :|: v12:0 > 0
f_314(x3, x4) -> f_314(x5, 16 + x5) :|: x4 > 16 && x5 > -32 && x5 < -16 && x5 < -15 && x4 < 33 && x3 = 16 + (16 + x5)
Start term: f_76

----------------------------------------

(27) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_314_2,1)
   (f_76_2,2)

----------------------------------------

(28)
Obligation:
START: 2;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 < 16 && oldX2 < -16 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 16;
assume(oldX1 > 32 && oldX2 > 0 && oldX0 = 16 + oldX2);
x0 := oldX0 - 16;
x1 := 16 + oldX2;
TO: 1;

FROM: 2;
oldX0 := x0;
oldX1 := x1;
oldX2 := nondet();
assume(oldX2 > 0);
x0 := oldX2;
x1 := 16 + oldX2;
TO: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := oldX0 - 32;
assume(oldX1 > 16 && oldX2 > -32 && oldX2 < -16 && oldX2 < -15 && oldX1 < 33 && oldX0 = 16 + (16 + oldX2));
x0 := oldX0 - 32;
x1 := 16 + oldX2;
TO: 1;

/home/ubuntu/tool/FSE_benchmark/loop/Unsigned_Wraparound_Error_4_NT.c:9:22: warning: implicit declaration of function '__VERIFIER_nondet_uint' is invalid in C99 [-Wimplicit-function-declaration]
    unsigned int n = __VERIFIER_nondet_uint();
                     ^
1 warning generated.

line 50:18 mismatched input 'nofree' expecting CLOSEC
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
 
