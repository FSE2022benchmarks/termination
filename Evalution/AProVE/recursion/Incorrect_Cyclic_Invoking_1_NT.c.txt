timeout 900 ./AProVE.sh -m wst --bit-width 64 Incorrect_Cyclic_Invoking_1_NT.c
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Incorrect_Cyclic_Invoking_1_NT.c
MAYBE
proof of /home/ubuntu/tool/FSE_benchmark/recursion/Incorrect_Cyclic_Invoking_1_NT.c
# AProVE Commit ID: 249ab60e2b58fea5661f104665226199f0baff7b jera 20211103 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 74 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1338 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 174 ms]
    (8) IntTRS
        (9) IntTRSPeriodicNontermProof [COMPLETE, 0 ms]
        (10) NO
    (11) SCC2IRS [SOUND, 6 ms]
    (12) IntTRS
        (13) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (14) IntTRS
        (15) IntTRSPeriodicNontermProof [COMPLETE, 15 ms]
        (16) NO
(17) SymbolicExecutionGraphToLassoProof [EQUIVALENT, 0 ms]
(18) LLVM Symbolic Execution Lasso
    (19) Lasso2IRS [SOUND, 155 ms]
    (20) IntTRS
    (21) IRS2T2 [EQUIVALENT, 0 ms]
    (22) T2IntSys
    (23) T2 [COMPLETE, 437 ms]
    (24) NO
(25) SEGraph to IRS [SOUND, 169 ms]
(26) IntTRS
    (27) IRS2T2 [EQUIVALENT, 0 ms]
    (28) T2IntSys
    (29) T2 [COMPLETE, 826 ms]
    (30) NO


----------------------------------------

(0)
Obligation:
c file /home/ubuntu/tool/FSE_benchmark/recursion/Incorrect_Cyclic_Invoking_1_NT.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /home/ubuntu/tool/FSE_benchmark/recursion/Incorrect_Cyclic_Invoking_1_NT.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-unknown-linux-gnu"

Type definitions:

struct.cifsTconInfo --> BasicStructureType(elementType: i32)

Global variables:

Name: cifsTconInfo initVal: {0} type: BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) addrSpace: null alignment: 4 threadLocal: false constant: false linkageType: null section: null

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "CIFSSMBQFSUnixInfo" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32)) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 17
	0:
		%3 = alloca i32, align 4
		%4 = alloca *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), align 8
		%5 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 0, %5
		%6 = load %4
		%7 = call i32 @smb_init(i32 15, *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %6)
		store %7, %5
		%8 = load %5
		ret %8

*BasicFunctionTypename: "smb_init" linkageType: INTERNAL returnParam: i32 parameters: (0 i32, 1 *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32)) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 33
	0:
		%3 = alloca i32, align 4
		%4 = alloca *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), align 8
		%5 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 0, %5
		%6 = load %4
		%7 = load %3
		%8 = call i32 @cifs_reconnect_tcon(*BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %6, i32 %7)
		store %8, %5
		%9 = load %5
		ret %9

*BasicFunctionTypename: "reset_cifs_unix_caps" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32, 1 *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32)) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 48
	0:
		%3 = alloca i32, align 4
		%4 = alloca *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), align 8
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %4)
		%5 = load %3
		%6 = load %4
		%7 = call i32 @CIFSSMBQFSUnixInfo(i32 %5, *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %6)
		%8 = icmp ne %7 0
		br %8, %10, %9
	9:
		br %10
	10:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 63
	0:
		%1 = alloca i32, align 4
		%2 = alloca BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), align 4
		%3 = alloca *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), align 8
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %3)
		store %2, %3
		%6 = call i32 (...)* @__VERIFIER_nondet_int()
		%7 = load %3
		%8 = getelementptr %7, 0, 0
		store %6, %8
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%9 = call i32 (...)* @__VERIFIER_nondet_int()
		store %9, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%10 = load %4
		%11 = load %3
		%12 = call i32 @smb_init(i32 %10, *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %11)
		store %12, %5
		ret 0

*BasicFunctionTypename: "cifs_reconnect_tcon" linkageType: INTERNAL returnParam: i32 parameters: (0 *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 83
	0:
		%3 = alloca i32, align 4
		%4 = alloca *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32), align 8
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%7 = load %4
		%8 = icmp ne %7 null
		br %8, %10, %9
	9:
		store 0, %3
		br %19
	10:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		%11 = load %4
		%12 = getelementptr %11, 0, 0
		%13 = load %12
		store %13, %6
		%14 = load %6
		%15 = icmp ne %14 0
		br %15, %16, %18
	16:
		%17 = load %4
		Unnamed Call-Instruction = call BasicVoidType @reset_cifs_unix_caps(i32 0, *BasicTypeName typeName: struct.cifsTconInfoBasicStructureType(elementType: i32) %17)
		br %18
	18:
		store 1, %3
		br %19
	19:
		%20 = load %3
		ret %20


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 59 rulesP rules:
f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) -> f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v109 && v110 = 7 + v109 && 8 <= v110
f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) -> f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v115 && v116 = 3 + v115 && 4 <= v116
f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) -> f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v117 && v118 = 7 + v117 && 8 <= v118
f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) -> f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v119 && v120 = 3 + v119 && 4 <= v120
f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) -> f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v121 && v122 = 3 + v121 && 4 <= v122
f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: v104 != 0
f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) :|: 0 = 0
f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) -> f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) -> f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v152 && v153 = 3 + v152 && 4 <= v153
f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) -> f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v154 && v155 = 7 + v154 && 8 <= v155
f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) -> f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v177 && v178 = 7 + v177 && 8 <= v178
f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) -> f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v179 && v180 = 3 + v179 && 4 <= v180
f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_377(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_377(v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) -> f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
Combined rules. Obtained 2 rulesP rules:
f_378(v93:0, v94:0, v107:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_378(15, v94:0, v107:1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, 3 + v107:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v111:0 > 0 && v109:0 > 0 && v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 < 0 && v152:0 > 0 && v154:0 > 0 && v175:0 > 0 && v177:0 > 0 && v179:0 > 0 && v107:1 > 0
f_378(v93:0, v94:0, v107:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_378(15, v94:0, v107:1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, 3 + v107:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v111:0 > 0 && v109:0 > 0 && v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 > 0 && v152:0 > 0 && v154:0 > 0 && v175:0 > 0 && v177:0 > 0 && v179:0 > 0 && v107:1 > 0
Filtered unneeded arguments:
   f_378(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_378(x14)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_378(v104:0) -> f_378(v104:0) :|: v104:0 < 0
f_378(v104:0) -> f_378(v104:0) :|: v104:0 > 0

----------------------------------------

(8)
Obligation:
Rules:
f_378(v104:0) -> f_378(v104:0) :|: v104:0 < 0
f_378(x) -> f_378(x) :|: x > 0

----------------------------------------

(9) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v104:0) -> f(1, v104:0) :|: pc = 1 && v104:0 < 0
f(pc, x) -> f(1, x) :|: pc = 1 && x > 0
Witness term starting non-terminating reduction: f(1, -8)
----------------------------------------

(10)
NO

----------------------------------------

(11) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 59 rulesP rules:
f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) -> f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v109 && v110 = 7 + v109 && 8 <= v110
f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) -> f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v115 && v116 = 3 + v115 && 4 <= v116
f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) -> f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v117 && v118 = 7 + v117 && 8 <= v118
f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) -> f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v119 && v120 = 3 + v119 && 4 <= v120
f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) -> f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v121 && v122 = 3 + v121 && 4 <= v122
f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: v104 != 0
f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) :|: 0 = 0
f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) -> f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) -> f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v152 && v153 = 3 + v152 && 4 <= v153
f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) -> f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v154 && v155 = 7 + v154 && 8 <= v155
f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) -> f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v177 && v178 = 7 + v177 && 8 <= v178
f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) -> f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v179 && v180 = 3 + v179 && 4 <= v180
f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_377(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v94 && 8 <= v95 && 1 <= v96 && 4 <= v97 && 1 <= v98 && 8 <= v99 && 1 <= v100 && 4 <= v101 && 1 <= v102 && 4 <= v103 && v94 <= v95 && v96 <= v97 && v98 <= v99 && v100 <= v101 && v102 <= v103
f_377(v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) -> f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
Combined rules. Obtained 2 rulesP rules:
f_378(v93:0, v94:0, v107:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_378(15, v94:0, v107:1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, 3 + v107:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v111:0 > 0 && v109:0 > 0 && v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 < 0 && v152:0 > 0 && v154:0 > 0 && v95:0 > 7 && v94:0 > 0 && v175:0 > 0 && v96:0 > 0 && v177:0 > 0 && v97:0 > 3 && v179:0 > 0 && v98:0 > 0 && v99:0 > 7 && v100:0 > 0 && v101:0 > 3 && v102:0 > 0 && v103:0 > 3 && v95:0 >= v94:0 && v97:0 >= v96:0 && v99:0 >= v98:0 && v101:0 >= v100:0 && v107:1 > 0 && v103:0 >= v102:0
f_378(v93:0, v94:0, v107:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_378(15, v94:0, v107:1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, 3 + v107:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v111:0 > 0 && v109:0 > 0 && v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 > 0 && v152:0 > 0 && v154:0 > 0 && v95:0 > 7 && v94:0 > 0 && v175:0 > 0 && v96:0 > 0 && v177:0 > 0 && v97:0 > 3 && v179:0 > 0 && v98:0 > 0 && v99:0 > 7 && v100:0 > 0 && v101:0 > 3 && v102:0 > 0 && v103:0 > 3 && v95:0 >= v94:0 && v97:0 >= v96:0 && v99:0 >= v98:0 && v101:0 >= v100:0 && v107:1 > 0 && v103:0 >= v102:0
Filtered unneeded arguments:
   f_378(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_378(x2, x4, x5, x6, x7, x8, x9, x10, x11, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_378(v94:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_378(v94:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v95:0 > 7 && v104:0 < 0 && v94:0 > 0 && v96:0 > 0 && v97:0 > 3 && v98:0 > 0 && v99:0 > 7 && v100:0 > 0 && v101:0 > 3 && v102:0 > 0 && v103:0 > 3 && v95:0 >= v94:0 && v97:0 >= v96:0 && v99:0 >= v98:0 && v103:0 >= v102:0 && v101:0 >= v100:0
f_378(v94:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_378(v94:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v95:0 > 7 && v104:0 > 0 && v94:0 > 0 && v96:0 > 0 && v97:0 > 3 && v98:0 > 0 && v99:0 > 7 && v100:0 > 0 && v101:0 > 3 && v102:0 > 0 && v103:0 > 3 && v95:0 >= v94:0 && v97:0 >= v96:0 && v99:0 >= v98:0 && v103:0 >= v102:0 && v101:0 >= v100:0

----------------------------------------

(12)
Obligation:
Rules:
f_378(v94:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) -> f_378(v94:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v104:0) :|: v95:0 > 7 && v104:0 < 0 && v94:0 > 0 && v96:0 > 0 && v97:0 > 3 && v98:0 > 0 && v99:0 > 7 && v100:0 > 0 && v101:0 > 3 && v102:0 > 0 && v103:0 > 3 && v95:0 >= v94:0 && v97:0 >= v96:0 && v99:0 >= v98:0 && v103:0 >= v102:0 && v101:0 >= v100:0
f_378(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_378(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) :|: x1 > 7 && x10 > 0 && x > 0 && x2 > 0 && x3 > 3 && x4 > 0 && x5 > 7 && x6 > 0 && x7 > 3 && x8 > 0 && x9 > 3 && x1 >= x && x3 >= x2 && x5 >= x4 && x9 >= x8 && x7 >= x6

----------------------------------------

(13) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(14)
Obligation:
Rules:
f_378(v94:0:0, v95:0:0, v96:0:0, v97:0:0, v98:0:0, v99:0:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) -> f_378(v94:0:0, v95:0:0, v96:0:0, v97:0:0, v98:0:0, v99:0:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) :|: v103:0:0 >= v102:0:0 && v101:0:0 >= v100:0:0 && v99:0:0 >= v98:0:0 && v97:0:0 >= v96:0:0 && v95:0:0 >= v94:0:0 && v103:0:0 > 3 && v102:0:0 > 0 && v101:0:0 > 3 && v100:0:0 > 0 && v99:0:0 > 7 && v98:0:0 > 0 && v97:0:0 > 3 && v96:0:0 > 0 && v94:0:0 > 0 && v104:0:0 < 0 && v95:0:0 > 7
f_378(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) -> f_378(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) :|: x9:0 >= x8:0 && x7:0 >= x6:0 && x5:0 >= x4:0 && x3:0 >= x2:0 && x:0 <= x1:0 && x9:0 > 3 && x8:0 > 0 && x7:0 > 3 && x6:0 > 0 && x5:0 > 7 && x4:0 > 0 && x3:0 > 3 && x2:0 > 0 && x:0 > 0 && x10:0 > 0 && x1:0 > 7

----------------------------------------

(15) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v94:0:0, v95:0:0, v96:0:0, v97:0:0, v98:0:0, v99:0:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) -> f(1, v94:0:0, v95:0:0, v96:0:0, v97:0:0, v98:0:0, v99:0:0, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0) :|: pc = 1 && (v103:0:0 >= v102:0:0 && v101:0:0 >= v100:0:0 && v99:0:0 >= v98:0:0 && v97:0:0 >= v96:0:0 && v95:0:0 >= v94:0:0 && v103:0:0 > 3 && v102:0:0 > 0 && v101:0:0 > 3 && v100:0:0 > 0 && v99:0:0 > 7 && v98:0:0 > 0 && v97:0:0 > 3 && v96:0:0 > 0 && v94:0:0 > 0 && v104:0:0 < 0 && v95:0:0 > 7)
f(pc, x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) -> f(1, x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x10:0) :|: pc = 1 && (x9:0 >= x8:0 && x7:0 >= x6:0 && x5:0 >= x4:0 && x3:0 >= x2:0 && x:0 <= x1:0 && x9:0 > 3 && x8:0 > 0 && x7:0 > 3 && x6:0 > 0 && x5:0 > 7 && x4:0 > 0 && x3:0 > 3 && x2:0 > 0 && x:0 > 0 && x10:0 > 0 && x1:0 > 7)
Witness term starting non-terminating reduction: f(1, 1, 8, 1, 4, 1, 8, 1, 4, 1, 4, 1)
----------------------------------------

(16)
NO

----------------------------------------

(17) SymbolicExecutionGraphToLassoProof (EQUIVALENT)
Converted SEGraph to 1 independent lasso.
----------------------------------------

(18)
Obligation:
Lasso
----------------------------------------

(19) Lasso2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 81 rulesP rules:
f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) -> f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v109 && v110 = 7 + v109 && 8 <= v110
f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) -> f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v115 && v116 = 3 + v115 && 4 <= v116
f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) -> f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v117 && v118 = 7 + v117 && 8 <= v118
f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) -> f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v119 && v120 = 3 + v119 && 4 <= v120
f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) -> f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v121 && v122 = 3 + v121 && 4 <= v122
f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: v104 != 0
f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) :|: 0 = 0
f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) -> f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) -> f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v152 && v153 = 3 + v152 && 4 <= v153
f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) -> f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v154 && v155 = 7 + v154 && 8 <= v155
f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) -> f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v177 && v178 = 7 + v177 && 8 <= v178
f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) -> f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v179 && v180 = 3 + v179 && 4 <= v180
f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_377(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_377(v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) -> f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
f_284 -> f_285(v5, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_285(v5, v6, 3, 1, 4) -> f_286(v5, v7, v6, v8, 3, 7, 1, 4, 8) :|: 1 <= v7 && v8 = 7 + v7 && 8 <= v8
f_286(v5, v7, v6, v8, 3, 7, 1, 4, 8) -> f_287(v5, v7, v9, v6, v8, v10, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 7 + v9 && 8 <= v10
f_287(v5, v7, v9, v6, v8, v10, 3, 7, 1, 4, 8) -> f_288(v5, v7, v9, v11, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 3 + v11 && 4 <= v12
f_288(v5, v7, v9, v11, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_289(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 3, 7, 1, 4, 8) :|: 1 <= v13 && v14 = 3 + v13 && 4 <= v14
f_289(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 3, 7, 1, 4, 8) -> f_290(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_290(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_291(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_291(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_292(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_292(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_293(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_293(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_294(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_294(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_295(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_295(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_296(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_296(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_297(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_297(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_298(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_298(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_299(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_299(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_300(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_300(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_301(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_301(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_302(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_302(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_303(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_303(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_304(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_304(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) -> f_305(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) :|: TRUE
f_305(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) -> f_377(v18, v7, v8, v5, v6, v9, v10, v11, v12, v13, v14, v16, 0, v18, 3, 7, 1, 8, 4) :|: TRUE
Combined rules. Obtained 3 rulesP rules:
f_378(v93:0, v94:0, v107:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_378(15, v94:0, v107:1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, 3 + v107:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v111:0 > 0 && v109:0 > 0 && v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 < 0 && v152:0 > 0 && v154:0 > 0 && v175:0 > 0 && v177:0 > 0 && v179:0 > 0 && v107:1 > 0
f_378(v93:0, v94:0, v107:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_378(15, v94:0, v107:1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, 3 + v107:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v111:0 > 0 && v109:0 > 0 && v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 > 0 && v152:0 > 0 && v154:0 > 0 && v175:0 > 0 && v177:0 > 0 && v179:0 > 0 && v107:1 > 0
f_284 -> f_378(v18:0, v7:0, v107:0, 7 + v7:0, v5:0, 3 + v5:0, v9:0, 7 + v9:0, v11:0, 3 + v11:0, v13:0, 3 + v13:0, 3 + v107:0, v16:0, 0, v18:0, 3, 7, 1, 8, 4) :|: v7:0 > 0 && v5:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v107:0 > 0
Filtered unneeded arguments:
   f_378(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_378(x14)
Removed division, modulo operations, cleaned up constraints. Obtained 3 rules.P rules:
f_378(v104:0) -> f_378(v104:0) :|: v104:0 < 0
f_378(v104:0) -> f_378(v104:0) :|: v104:0 > 0
f_284 -> f_378(v16:0) :|: TRUE

----------------------------------------

(20)
Obligation:
Rules:
f_378(v104:0) -> f_378(v104:0) :|: v104:0 < 0
f_378(x) -> f_378(x) :|: x > 0
f_284 -> f_378(v16:0) :|: TRUE
Start term: f_284

----------------------------------------

(21) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_378_1,1)
   (f_284_1,2)

----------------------------------------

(22)
Obligation:
START: 2;

FROM: 1;
oldX0 := x0;
assume(oldX0 < 0);
x0 := oldX0;
TO: 1;

FROM: 1;
oldX0 := x0;
assume(oldX0 > 0);
x0 := oldX0;
TO: 1;

FROM: 2;
oldX0 := x0;
oldX1 := nondet();
assume(0 = 0);
x0 := oldX1;
TO: 1;


----------------------------------------

(23) T2 (COMPLETE)
Nontermination proof succeeded
Found this recurrent set for cutpoint 5: oldX1 == -1 and x0 == -1

----------------------------------------

(24)
NO

----------------------------------------

(25) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 95 rulesP rules:
f_284 -> f_285(v5, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_285(v5, v6, 3, 1, 4) -> f_286(v5, v7, v6, v8, 3, 7, 1, 4, 8) :|: 1 <= v7 && v8 = 7 + v7 && 8 <= v8
f_286(v5, v7, v6, v8, 3, 7, 1, 4, 8) -> f_287(v5, v7, v9, v6, v8, v10, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 7 + v9 && 8 <= v10
f_287(v5, v7, v9, v6, v8, v10, 3, 7, 1, 4, 8) -> f_288(v5, v7, v9, v11, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 3 + v11 && 4 <= v12
f_288(v5, v7, v9, v11, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_289(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 3, 7, 1, 4, 8) :|: 1 <= v13 && v14 = 3 + v13 && 4 <= v14
f_289(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 3, 7, 1, 4, 8) -> f_290(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_290(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_291(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_291(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_292(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_292(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_293(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_293(v5, v7, v9, v11, v13, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_294(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_294(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_295(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_295(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_296(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_296(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_297(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_297(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_298(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_298(v5, v7, v9, v11, v13, v16, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_299(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_299(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_300(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_300(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_301(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: TRUE
f_301(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_302(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_302(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_303(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_303(v5, v7, v9, v11, v13, v16, v18, v6, v8, v10, v12, v14, 0, 3, 7, 1, 4, 8) -> f_304(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_304(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) -> f_305(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) :|: TRUE
f_304(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) -> f_428(v18, v7, 1, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, 3, 7, 4, 8) :|: TRUE
f_305(v18, v7, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, v16, 3, 7, 1, 4, 8) -> f_377(v18, v7, v8, v5, v6, v9, v10, v11, v12, v13, v14, v16, 0, v18, 3, 7, 1, 8, 4) :|: TRUE
f_377(v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) -> f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v107 && v108 = 3 + v107 && 4 <= v108
f_378(v93, v94, v107, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v104, 0, v106, 3, 7, 1, 8, 4) -> f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v109 && v110 = 7 + v109 && 8 <= v110
f_379(v93, v94, v107, v109, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v104, 0, v106, 3, 7, 1, 8, 4) -> f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v111 && v112 = 3 + v111 && 4 <= v112
f_380(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_381(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_382(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_383(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_384(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_385(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_386(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_387(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_388(v93, v94, v107, v109, v111, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_389(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_420(v94, v93, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, 0, v106, 3, 7, 8, 4) :|: TRUE
f_390(v94, v93, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v104, 0, v106, 3, 7, 1, 8, 4) -> f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v115 && v116 = 3 + v115 && 4 <= v116
f_391(v94, v93, v115, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v104, 0, v106, 3, 7, 1, 8, 4) -> f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v117 && v118 = 7 + v117 && 8 <= v118
f_392(v94, v93, v115, v117, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v104, 0, v106, 3, 7, 1, 8, 4) -> f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v119 && v120 = 3 + v119 && 4 <= v120
f_393(v94, v93, v115, v117, v119, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v104, 0, v106, 3, 7, 1, 8, 4) -> f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 1 <= v121 && v122 = 3 + v121 && 4 <= v122
f_394(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_395(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_396(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_397(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
f_398(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) :|: 0 = 0
f_399(v94, v93, v115, v117, v119, v121, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 1, 8, 4) -> f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_400(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_401(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: TRUE
f_402(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_403(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_404(v94, v93, v115, v117, v119, v121, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v104, 0, v106, 3, 7, 8, 4) -> f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_405(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_406(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: v104 != 0
f_407(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_409(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) :|: v104 = 0
f_408(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_409(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) -> f_411(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) :|: 0 = 0
f_410(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: TRUE
f_411(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) -> f_413(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) :|: TRUE
f_412(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_413(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) -> f_415(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) :|: TRUE
f_414(v94, v93, v115, v117, v119, v121, 1, v104, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, 0, v106, 3, 7, 8, 4) -> f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) :|: 0 = 0
f_415(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) -> f_417(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) :|: TRUE
f_416(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 1, 3, 7, 8, 4) -> f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_417(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) -> f_419(v94, v93, v115, v117, v119, v121, 1, 0, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v116, v118, v120, v122, v106, 3, 7, 8, 4) :|: 0 = 0
f_418(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v104, v106, v93, 3, 7, 1, 8, 4) -> f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v152 && v153 = 3 + v152 && 4 <= v153
f_420(v94, v93, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, 0, v106, 3, 7, 8, 4) -> f_422(v93, v94, v107, v109, v111, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_421(0, v94, v152, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v104, v106, v93, 3, 7, 1, 8, 4) -> f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v154 && v155 = 7 + v154 && 8 <= v155
f_422(v93, v94, v107, v109, v111, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, 0, v106, 3, 7, 8, 4) -> f_424(v93, v94, v107, v109, v111, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, 0, v106, 3, 7, 8, 4) :|: TRUE
f_423(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_424(v93, v94, v107, v109, v111, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, 0, v106, 3, 7, 8, 4) -> f_426(v93, v94, v107, v109, v111, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, 0, v106, 3, 7, 8, 4) :|: 0 = 0
f_425(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_427(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_428(v18, v7, 1, v5, v6, v8, v9, v10, v11, v12, v13, v14, 0, 3, 7, 4, 8) -> f_430(v5, v7, v9, v11, v13, 0, v18, 1, v6, v8, v10, v12, v14, 3, 7, 4, 8) :|: 0 = 0
f_429(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_430(v5, v7, v9, v11, v13, 0, v18, 1, v6, v8, v10, v12, v14, 3, 7, 4, 8) -> f_432(v5, v7, v9, v11, v13, 0, v18, 1, v6, v8, v10, v12, v14, 3, 7, 4, 8) :|: TRUE
f_431(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_433(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_434(0, v94, v152, v154, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v153, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_435(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_436(0, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v104, v106, v93, 3, 7, 1, 8, 4) -> f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_437(0, v94, v175, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v104, v106, v93, 3, 7, 1, 8, 4) -> f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v177 && v178 = 7 + v177 && 8 <= v178
f_438(0, v94, v175, v177, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v104, v106, v93, 3, 7, 1, 8, 4) -> f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 1 <= v179 && v180 = 3 + v179 && 4 <= v180
f_439(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_440(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_441(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_442(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_443(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_444(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_445(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_446(0, v94, v175, v177, v179, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v176, v178, v180, v104, v106, v93, 3, 7, 1, 8, 4) -> f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: 0 = 0
f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) :|: TRUE
f_447(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_449(v93, v94, v107, v109, v111, 1, v95, v96, v97, v98, v99, v100, v101, v102, v103, v108, v110, v112, 0, v106, 3, 7, 8, 4) :|: TRUE
f_448(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v111, v112, v115, v116, v117, v118, v119, v120, v121, v122, v152, v153, v154, v155, v175, v176, v177, v178, v179, v180, v104, 0, v106, v93, 3, 7, 1, 8, 4) -> f_377(15, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, 0, v106, 3, 7, 1, 8, 4) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_284 -> f_432(v5:0, v7:0, v9:0, v11:0, v13:0, 0, v18:0, 1, 3 + v5:0, 7 + v7:0, 7 + v9:0, 3 + v11:0, 3 + v13:0, 3, 7, 4, 8) :|: v7:0 > 0 && v5:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0
f_284 -> f_389(v7:0, v18:0, 7 + v7:0, v5:0, 3 + v5:0, v9:0, 7 + v9:0, v11:0, 3 + v11:0, v13:0, 3 + v13:0, v107:0, 3 + v107:0, v109:0, 7 + v109:0, v111:0, 3 + v111:0, v16:0, 0, v18:0, 3, 7, 1, 8, 4) :|: v7:0 > 0 && v5:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v107:0 > 0 && v109:0 > 0 && v111:0 > 0
f_389(v94:0, v93:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, 0, 0, v106:0, 3, 7, 1, 8, 4) -> f_419(v94:0, v93:0, v115:0, v117:0, v119:0, v121:0, 1, 0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, 3 + v115:0, 7 + v117:0, 3 + v119:0, 3 + v121:0, v106:0, 3, 7, 8, 4) :|: v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0
f_389(v94:0, v93:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_449(v93:0, v94:0, v107:0, v109:0, v111:0, 1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v110:0, v112:0, 0, v106:0, 3, 7, 8, 4) :|: v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 < 0 && v152:0 > 0 && v154:0 > 0 && v175:0 > 0 && v177:0 > 0 && v179:0 > 0
f_389(v94:0, v93:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_449(v93:0, v94:0, v107:0, v109:0, v111:0, 1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v110:0, v112:0, 0, v106:0, 3, 7, 8, 4) :|: v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 > 0 && v152:0 > 0 && v154:0 > 0 && v175:0 > 0 && v177:0 > 0 && v179:0 > 0
f_389(v94:0, v93:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_389(v94:0, 15, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:1, 3 + v107:1, v109:1, 7 + v109:1, v111:1, 3 + v111:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 < 0 && v152:0 > 0 && v154:0 > 0 && v107:1 > 0 && v175:0 > 0 && v109:1 > 0 && v177:0 > 0 && v111:1 > 0 && v179:0 > 0
f_389(v94:0, v93:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_389(v94:0, 15, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:1, 3 + v107:1, v109:1, 7 + v109:1, v111:1, 3 + v111:1, v104:0, 0, v106:0, 3, 7, 1, 8, 4) :|: v115:0 > 0 && v117:0 > 0 && v119:0 > 0 && v121:0 > 0 && v104:0 > 0 && v152:0 > 0 && v154:0 > 0 && v107:1 > 0 && v175:0 > 0 && v109:1 > 0 && v177:0 > 0 && v111:1 > 0 && v179:0 > 0
f_389(v94:0, v93:0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, v104:0, 0, v106:0, 3, 7, 1, 8, 4) -> f_426(v93:0, v94:0, v107:0, v109:0, v111:0, 1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v110:0, v112:0, 0, v106:0, 3, 7, 8, 4) :|: TRUE
Filtered unneeded arguments:
   f_389(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_389(x18)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_284 -> f_432(v5:0, v7:0, v9:0, v11:0, v13:0, 0, v18:0, 1, 3 + v5:0, 7 + v7:0, 7 + v9:0, 3 + v11:0, 3 + v13:0, 3, 7, 4, 8) :|: v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v11:0 > 0
f_284 -> f_389(v16:0) :|: TRUE
f_389(cons_0) -> f_419(v94:0, v93:0, v115:0, v117:0, v119:0, v121:0, 1, 0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, 3 + v115:0, 7 + v117:0, 3 + v119:0, 3 + v121:0, v106:0, 3, 7, 8, 4) :|: v117:0 > 0 && v115:0 > 0 && v121:0 > 0 && v119:0 > 0 && cons_0 = 0
f_389(v104:0) -> f_449(v93:0, v94:0, v107:0, v109:0, v111:0, 1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v110:0, v112:0, 0, v106:0, 3, 7, 8, 4) :|: v104:0 < 0
f_389(v104:0) -> f_449(v93:0, v94:0, v107:0, v109:0, v111:0, 1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v110:0, v112:0, 0, v106:0, 3, 7, 8, 4) :|: v104:0 > 0
f_389(v104:0) -> f_389(v104:0) :|: v104:0 < 0
f_389(v104:0) -> f_389(v104:0) :|: v104:0 > 0
f_389(v104:0) -> f_426(v93:0, v94:0, v107:0, v109:0, v111:0, 1, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v108:0, v110:0, v112:0, 0, v106:0, 3, 7, 8, 4) :|: TRUE

----------------------------------------

(26)
Obligation:
Rules:
f_284 -> f_432(v5:0, v7:0, v9:0, v11:0, v13:0, 0, v18:0, 1, 3 + v5:0, 7 + v7:0, 7 + v9:0, 3 + v11:0, 3 + v13:0, 3, 7, 4, 8) :|: v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v13:0 > 0 && v11:0 > 0
f_284 -> f_389(v16:0) :|: TRUE
f_389(cons_0) -> f_419(v94:0, v93:0, v115:0, v117:0, v119:0, v121:0, 1, 0, v95:0, v96:0, v97:0, v98:0, v99:0, v100:0, v101:0, v102:0, v103:0, v107:0, v108:0, v109:0, v110:0, v111:0, v112:0, 3 + v115:0, 7 + v117:0, 3 + v119:0, 3 + v121:0, v106:0, 3, 7, 8, 4) :|: v117:0 > 0 && v115:0 > 0 && v121:0 > 0 && v119:0 > 0 && cons_0 = 0
f_389(x) -> f_449(x1, x2, x3, x4, x5, 1, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, 0, x18, 3, 7, 8, 4) :|: x < 0
f_389(x19) -> f_449(x20, x21, x22, x23, x24, 1, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, 0, x37, 3, 7, 8, 4) :|: x19 > 0
f_389(v104:0) -> f_389(v104:0) :|: v104:0 < 0
f_389(x38) -> f_389(x38) :|: x38 > 0
f_389(x39) -> f_426(x40, x41, x42, x43, x44, 1, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, 0, x57, 3, 7, 8, 4) :|: TRUE
Start term: f_284

----------------------------------------

(27) IRS2T2 (EQUIVALENT)
Transformed input IRS into an integer transition system.Used the following mapping from defined symbols to location IDs:

   (f_284_32,1)
   (f_432_32,2)
   (f_389_32,3)
   (f_419_32,4)
   (f_449_32,5)
   (f_426_32,6)

----------------------------------------

(28)
Obligation:
START: 1;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
assume(oldX32 > 0 && oldX33 > 0 && oldX34 > 0 && oldX36 > 0 && oldX35 > 0);
x0 := oldX32;
x1 := oldX33;
x2 := oldX34;
x3 := oldX35;
x4 := oldX36;
x5 := 0;
x6 := oldX37;
x7 := 1;
x8 := 3 + oldX32;
x9 := 7 + oldX33;
x10 := 7 + oldX34;
x11 := 3 + oldX35;
x12 := 3 + oldX36;
x13 := 3;
x14 := 7;
x15 := 4;
x16 := 8;
x17 := oldX38;
x18 := oldX39;
x19 := oldX40;
x20 := oldX41;
x21 := oldX42;
x22 := oldX43;
x23 := oldX44;
x24 := oldX45;
x25 := oldX46;
x26 := oldX47;
x27 := oldX48;
x28 := oldX49;
x29 := oldX50;
x30 := oldX51;
x31 := oldX52;
TO: 2;

FROM: 1;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
oldX54 := nondet();
oldX55 := nondet();
oldX56 := nondet();
oldX57 := nondet();
oldX58 := nondet();
oldX59 := nondet();
oldX60 := nondet();
oldX61 := nondet();
oldX62 := nondet();
oldX63 := nondet();
assume(0 = 0);
x0 := oldX32;
x1 := oldX33;
x2 := oldX34;
x3 := oldX35;
x4 := oldX36;
x5 := oldX37;
x6 := oldX38;
x7 := oldX39;
x8 := oldX40;
x9 := oldX41;
x10 := oldX42;
x11 := oldX43;
x12 := oldX44;
x13 := oldX45;
x14 := oldX46;
x15 := oldX47;
x16 := oldX48;
x17 := oldX49;
x18 := oldX50;
x19 := oldX51;
x20 := oldX52;
x21 := oldX53;
x22 := oldX54;
x23 := oldX55;
x24 := oldX56;
x25 := oldX57;
x26 := oldX58;
x27 := oldX59;
x28 := oldX60;
x29 := oldX61;
x30 := oldX62;
x31 := oldX63;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
assume(oldX35 > 0 && oldX34 > 0 && oldX37 > 0 && oldX36 > 0 && oldX0 = 0);
x0 := oldX32;
x1 := oldX33;
x2 := oldX34;
x3 := oldX35;
x4 := oldX36;
x5 := oldX37;
x6 := 1;
x7 := 0;
x8 := oldX38;
x9 := oldX39;
x10 := oldX40;
x11 := oldX41;
x12 := oldX42;
x13 := oldX43;
x14 := oldX44;
x15 := oldX45;
x16 := oldX46;
x17 := oldX47;
x18 := oldX48;
x19 := oldX49;
x20 := oldX50;
x21 := oldX51;
x22 := oldX52;
x23 := 3 + oldX34;
x24 := 7 + oldX35;
x25 := 3 + oldX36;
x26 := 3 + oldX37;
x27 := oldX53;
x28 := 3;
x29 := 7;
x30 := 8;
x31 := 4;
TO: 4;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
oldX54 := nondet();
oldX55 := nondet();
oldX56 := nondet();
oldX57 := nondet();
assume(oldX0 < 0);
x0 := oldX32;
x1 := oldX33;
x2 := oldX34;
x3 := oldX35;
x4 := oldX36;
x5 := 1;
x6 := oldX37;
x7 := oldX38;
x8 := oldX39;
x9 := oldX40;
x10 := oldX41;
x11 := oldX42;
x12 := oldX43;
x13 := oldX44;
x14 := oldX45;
x15 := oldX46;
x16 := oldX47;
x17 := oldX48;
x18 := 0;
x19 := oldX49;
x20 := 3;
x21 := 7;
x22 := 8;
x23 := 4;
x24 := oldX50;
x25 := oldX51;
x26 := oldX52;
x27 := oldX53;
x28 := oldX54;
x29 := oldX55;
x30 := oldX56;
x31 := oldX57;
TO: 5;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
oldX54 := nondet();
oldX55 := nondet();
oldX56 := nondet();
oldX57 := nondet();
assume(oldX0 > 0);
x0 := oldX32;
x1 := oldX33;
x2 := oldX34;
x3 := oldX35;
x4 := oldX36;
x5 := 1;
x6 := oldX37;
x7 := oldX38;
x8 := oldX39;
x9 := oldX40;
x10 := oldX41;
x11 := oldX42;
x12 := oldX43;
x13 := oldX44;
x14 := oldX45;
x15 := oldX46;
x16 := oldX47;
x17 := oldX48;
x18 := 0;
x19 := oldX49;
x20 := 3;
x21 := 7;
x22 := 8;
x23 := 4;
x24 := oldX50;
x25 := oldX51;
x26 := oldX52;
x27 := oldX53;
x28 := oldX54;
x29 := oldX55;
x30 := oldX56;
x31 := oldX57;
TO: 5;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
oldX54 := nondet();
oldX55 := nondet();
oldX56 := nondet();
oldX57 := nondet();
oldX58 := nondet();
oldX59 := nondet();
oldX60 := nondet();
oldX61 := nondet();
oldX62 := nondet();
assume(oldX0 < 0);
x0 := oldX0;
x1 := oldX32;
x2 := oldX33;
x3 := oldX34;
x4 := oldX35;
x5 := oldX36;
x6 := oldX37;
x7 := oldX38;
x8 := oldX39;
x9 := oldX40;
x10 := oldX41;
x11 := oldX42;
x12 := oldX43;
x13 := oldX44;
x14 := oldX45;
x15 := oldX46;
x16 := oldX47;
x17 := oldX48;
x18 := oldX49;
x19 := oldX50;
x20 := oldX51;
x21 := oldX52;
x22 := oldX53;
x23 := oldX54;
x24 := oldX55;
x25 := oldX56;
x26 := oldX57;
x27 := oldX58;
x28 := oldX59;
x29 := oldX60;
x30 := oldX61;
x31 := oldX62;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
oldX54 := nondet();
oldX55 := nondet();
oldX56 := nondet();
oldX57 := nondet();
oldX58 := nondet();
oldX59 := nondet();
oldX60 := nondet();
oldX61 := nondet();
oldX62 := nondet();
assume(oldX0 > 0);
x0 := oldX0;
x1 := oldX32;
x2 := oldX33;
x3 := oldX34;
x4 := oldX35;
x5 := oldX36;
x6 := oldX37;
x7 := oldX38;
x8 := oldX39;
x9 := oldX40;
x10 := oldX41;
x11 := oldX42;
x12 := oldX43;
x13 := oldX44;
x14 := oldX45;
x15 := oldX46;
x16 := oldX47;
x17 := oldX48;
x18 := oldX49;
x19 := oldX50;
x20 := oldX51;
x21 := oldX52;
x22 := oldX53;
x23 := oldX54;
x24 := oldX55;
x25 := oldX56;
x26 := oldX57;
x27 := oldX58;
x28 := oldX59;
x29 := oldX60;
x30 := oldX61;
x31 := oldX62;
TO: 3;

FROM: 3;
oldX0 := x0;
oldX1 := x1;
oldX2 := x2;
oldX3 := x3;
oldX4 := x4;
oldX5 := x5;
oldX6 := x6;
oldX7 := x7;
oldX8 := x8;
oldX9 := x9;
oldX10 := x10;
oldX11 := x11;
oldX12 := x12;
oldX13 := x13;
oldX14 := x14;
oldX15 := x15;
oldX16 := x16;
oldX17 := x17;
oldX18 := x18;
oldX19 := x19;
oldX20 := x20;
oldX21 := x21;
oldX22 := x22;
oldX23 := x23;
oldX24 := x24;
oldX25 := x25;
oldX26 := x26;
oldX27 := x27;
oldX28 := x28;
oldX29 := x29;
oldX30 := x30;
oldX31 := x31;
oldX32 := nondet();
oldX33 := nondet();
oldX34 := nondet();
oldX35 := nondet();
oldX36 := nondet();
oldX37 := nondet();
oldX38 := nondet();
oldX39 := nondet();
oldX40 := nondet();
oldX41 := nondet();
oldX42 := nondet();
oldX43 := nondet();
oldX44 := nondet();
oldX45 := nondet();
oldX46 := nondet();
oldX47 := nondet();
oldX48 := nondet();
oldX49 := nondet();
oldX50 := nondet();
oldX51 := nondet();
oldX52 := nondet();
oldX53 := nondet();
oldX54 := nondet();
oldX55 := nondet();
oldX56 := nondet();
oldX57 := nondet();
assume(0 = 0);
x0 := oldX32;
x1 := oldX33;
x2 := oldX34;
x3 := oldX35;
x4 := oldX36;
x5 := 1;
x6 := oldX37;
x7 := oldX38;
x8 := oldX39;
x9 := oldX40;
x10 := oldX41;
x11 := oldX42;
x12 := oldX43;
x13 := oldX44;
x14 := oldX45;
x15 := oldX46;
x16 := oldX47;
x17 := oldX48;
x18 := 0;
x19 := oldX49;
x20 := 3;
x21 := 7;
x22 := 8;
x23 := 4;
x24 := oldX50;
x25 := oldX51;
x26 := oldX52;
x27 := oldX53;
x28 := oldX54;
x29 := oldX55;
x30 := oldX56;
x31 := oldX57;
TO: 6;


----------------------------------------

(29) T2 (COMPLETE)
Nontermination proof succeeded
Found this recurrent set for cutpoint 9: oldX32 == 1 and x0 == 1

----------------------------------------

(30)
NO
/home/ubuntu/tool/FSE_benchmark/recursion/Incorrect_Cyclic_Invoking_1_NT.c:42:15: warning: implicit declaration of function '__VERIFIER_nondet_int' is invalid in C99 [-Wimplicit-function-declaration]
        tcon->ses =  __VERIFIER_nondet_int();
                     ^
1 warning generated.

line 142:18 mismatched input 'nofree' expecting CLOSEC
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.002s
 
