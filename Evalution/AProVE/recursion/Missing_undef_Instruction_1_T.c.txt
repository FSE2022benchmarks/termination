timeout 900 ./AProVE.sh -m wst --bit-width 64 Missing_undef_Instruction_1_T.c
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Missing_undef_Instruction_1_T.c
YES
proof of /home/ubuntu/tool/FSE_benchmark/recursion/Missing_undef_Instruction_1_T.c
# AProVE Commit ID: 249ab60e2b58fea5661f104665226199f0baff7b jera 20211103 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 76 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 285 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) TRUE


----------------------------------------

(0)
Obligation:
c file /home/ubuntu/tool/FSE_benchmark/recursion/Missing_undef_Instruction_1_T.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /home/ubuntu/tool/FSE_benchmark/recursion/Missing_undef_Instruction_1_T.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-unknown-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "pthread_mutex_trylock" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 *i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 9
	0:
		%2 = alloca *i32, align 8
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %2)
		ret 0

*BasicFunctionTypename: "my_pthread_mutex_trylock" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 *i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 18
	0:
		%2 = alloca i32, align 4
		%3 = alloca *i32, align 8
		%4 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%5 = load %3
		%6 = call i32 @pthread_mutex_trylock(*i32 %5)
		store %6, %4
		%7 = load %4
		%8 = icmp eq %7 1
		br %8, %9, %10
	9:
		store 0, %2
		br %12
	10:
		%11 = load %4
		store %11, %2
		br %12
	12:
		%13 = load %2
		ret %13

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 33
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca *i32, align 8
		%4 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		store 2, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		store %2, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%5 = load %3
		%6 = call i32 @my_pthread_mutex_trylock(*i32 %5)
		store %6, %4
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Proven termination by absence of SCCs
----------------------------------------

(6)
TRUE
line 65:18 mismatched input 'nofree' expecting CLOSEC
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
 
