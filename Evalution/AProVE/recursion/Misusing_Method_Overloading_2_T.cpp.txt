timeout 900 ./AProVE.sh -m wst --bit-width 64 Misusing_Method_Overloading_2_T.cpp
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Misusing_Method_Overloading_2_T.cpp
MAYBE
proof of /home/ubuntu/tool/FSE_benchmark/recursion/Misusing_Method_Overloading_2_T.cpp
# AProVE Commit ID: 249ab60e2b58fea5661f104665226199f0baff7b jera 20211103 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 0 ms]
(2) LLVM problem


----------------------------------------

(0)
Obligation:
c file /home/ubuntu/tool/FSE_benchmark/recursion/Misusing_Method_Overloading_2_T.cpp
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /home/ubuntu/tool/FSE_benchmark/recursion/Misusing_Method_Overloading_2_T.cpp to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-unknown-linux-gnu"

Type definitions:

class.resolver_query_base --> BasicStructureType(elementType: i8)

Global variables:

Function declarations and definitions:



Analyze Termination of all function calls matching the pattern:
main()line 8:0 missing EOF at '$_ZN19resolver_query_base6induceEv'
Aborted 1652295182Exec. 4, LLVMToSEGraph with some error. Reason: java.lang.IllegalArgumentException: Cannot analyze a function without its definition!.
            aprove.InputModules.Programs.llvm.states.LLVMAbstractStateFactory.createBeginState(LLVMAbstractStateFactory.java:586)
            aprove.InputModules.Programs.llvm.segraph.graphConstructionSteps.LLVMRootStateCreationStep.perform(LLVMRootStateCreationStep.java:25)
            aprove.InputModules.Programs.llvm.segraph.LLVMSEGraph.executeStepAndPutSucessorStepsInQueue(LLVMSEGraph.java:1089)
            aprove.InputModules.Programs.llvm.segraph.LLVMSEGraph.buildFullGraph(LLVMSEGraph.java:243)
            aprove.InputModules.Programs.llvm.segraph.LLVMSEGraph.buildFullGraph(LLVMSEGraph.java:216)
            aprove.InputModules.Programs.llvm.segraph.LLVMGraphBuilder.buildGraph(LLVMGraphBuilder.java:84)
            aprove.InputModules.Programs.llvm.processors.LLVMToSEGraphProcessor.process(LLVMToSEGraphProcessor.java:110)
            aprove.Strategies.ExecutableStrategies.Executor.execute(Executor.java:326)
 
