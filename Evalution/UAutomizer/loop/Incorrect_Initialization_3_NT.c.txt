timeout 900 ./Ultimate.py --spec termination.prp --file Incorrect_Initialization_3_NT.c --architecture 64bit
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Incorrect_Initialization_3_NT.c
Checking for termination
Using default analysis
Version 839c364b
Calling Ultimate with: /usr/bin/java -Dosgi.configuration.area=/home/ubuntu/tool/uautomizer/UAutomizer-linux/data/config -Xmx15G -Xms4m -jar /home/ubuntu/tool/uautomizer/UAutomizer-linux/plugins/org.eclipse.equinox.launcher_1.5.800.v20200727-1323.jar -data @noDefault -ultimatedata /home/ubuntu/tool/uautomizer/UAutomizer-linux/data -tc /home/ubuntu/tool/uautomizer/UAutomizer-linux/config/AutomizerTermination.xml -i /home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Initialization_3_NT.c -s /home/ubuntu/tool/uautomizer/UAutomizer-linux/config/svcomp-Termination-64bit-Automizer_Default.epf --cacsl2boogietranslator.entry.function main --witnessprinter.witness.directory /home/ubuntu/tool/uautomizer/UAutomizer-linux --witnessprinter.witness.filename witness.graphml --witnessprinter.write.witness.besides.input.file false --witnessprinter.graph.data.specification CHECK( init(main()), LTL(F end) )

 --witnessprinter.graph.data.producer Automizer --witnessprinter.graph.data.architecture 64bit --witnessprinter.graph.data.programhash 57ee8e87129db4f98332f5be0a058f28fbfec8d38aa1361e89a6fae0fcdb4129
--- Real Ultimate output ---
This is Ultimate 0.2.2-hotfix-svcomp22-839c364
[2022-05-11 16:57:24,615 INFO  L177        SettingsManager]: Resetting all preferences to default values...
[2022-05-11 16:57:24,617 INFO  L181        SettingsManager]: Resetting UltimateCore preferences to default values
[2022-05-11 16:57:24,635 INFO  L184        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2022-05-11 16:57:24,636 INFO  L181        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2022-05-11 16:57:24,636 INFO  L181        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2022-05-11 16:57:24,637 INFO  L181        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2022-05-11 16:57:24,638 INFO  L181        SettingsManager]: Resetting LassoRanker preferences to default values
[2022-05-11 16:57:24,639 INFO  L181        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2022-05-11 16:57:24,640 INFO  L181        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2022-05-11 16:57:24,640 INFO  L181        SettingsManager]: Resetting Sifa preferences to default values
[2022-05-11 16:57:24,641 INFO  L184        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2022-05-11 16:57:24,641 INFO  L181        SettingsManager]: Resetting LTL2Aut preferences to default values
[2022-05-11 16:57:24,642 INFO  L181        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2022-05-11 16:57:24,642 INFO  L181        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2022-05-11 16:57:24,643 INFO  L181        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2022-05-11 16:57:24,644 INFO  L181        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2022-05-11 16:57:24,644 INFO  L181        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2022-05-11 16:57:24,645 INFO  L181        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2022-05-11 16:57:24,646 INFO  L181        SettingsManager]: Resetting CodeCheck preferences to default values
[2022-05-11 16:57:24,647 INFO  L181        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2022-05-11 16:57:24,648 INFO  L181        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2022-05-11 16:57:24,649 INFO  L181        SettingsManager]: Resetting Referee preferences to default values
[2022-05-11 16:57:24,650 INFO  L181        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2022-05-11 16:57:24,651 INFO  L184        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2022-05-11 16:57:24,652 INFO  L184        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2022-05-11 16:57:24,652 INFO  L181        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2022-05-11 16:57:24,652 INFO  L181        SettingsManager]: Resetting IcfgToChc preferences to default values
[2022-05-11 16:57:24,653 INFO  L181        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2022-05-11 16:57:24,653 INFO  L184        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2022-05-11 16:57:24,653 INFO  L181        SettingsManager]: Resetting Boogie Printer preferences to default values
[2022-05-11 16:57:24,654 INFO  L181        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2022-05-11 16:57:24,654 INFO  L181        SettingsManager]: Resetting ReqPrinter preferences to default values
[2022-05-11 16:57:24,655 INFO  L181        SettingsManager]: Resetting Witness Printer preferences to default values
[2022-05-11 16:57:24,655 INFO  L184        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2022-05-11 16:57:24,655 INFO  L181        SettingsManager]: Resetting CDTParser preferences to default values
[2022-05-11 16:57:24,656 INFO  L184        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2022-05-11 16:57:24,656 INFO  L184        SettingsManager]: ReqParser provides no preferences, ignoring...
[2022-05-11 16:57:24,656 INFO  L181        SettingsManager]: Resetting SmtParser preferences to default values
[2022-05-11 16:57:24,657 INFO  L181        SettingsManager]: Resetting Witness Parser preferences to default values
[2022-05-11 16:57:24,657 INFO  L188        SettingsManager]: Finished resetting all preferences to default values...
[2022-05-11 16:57:24,657 INFO  L101        SettingsManager]: Beginning loading settings from /home/ubuntu/tool/uautomizer/UAutomizer-linux/config/svcomp-Termination-64bit-Automizer_Default.epf
[2022-05-11 16:57:24,673 INFO  L113        SettingsManager]: Loading preferences was successful
[2022-05-11 16:57:24,673 INFO  L115        SettingsManager]: Preferences different from defaults after loading the file:
[2022-05-11 16:57:24,673 INFO  L136        SettingsManager]: Preferences of UltimateCore differ from their defaults:
[2022-05-11 16:57:24,673 INFO  L138        SettingsManager]:  * Log level for class=de.uni_freiburg.informatik.ultimate.lib.smtlibutils.quantifier.QuantifierPusher=ERROR;
[2022-05-11 16:57:24,674 INFO  L136        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2022-05-11 16:57:24,674 INFO  L138        SettingsManager]:  * Create parallel compositions if possible=false
[2022-05-11 16:57:24,674 INFO  L138        SettingsManager]:  * Use SBE=true
[2022-05-11 16:57:24,674 INFO  L136        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2022-05-11 16:57:24,674 INFO  L138        SettingsManager]:  * NCSB implementation=INTSET_LAZY3
[2022-05-11 16:57:24,674 INFO  L138        SettingsManager]:  * Use old map elimination=false
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Use external solver (rank synthesis)=false
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Use only trivial implications for array writes=true
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Rank analysis=LINEAR_WITH_GUESSES
[2022-05-11 16:57:24,675 INFO  L136        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Overapproximate operations on floating types=true
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Check division by zero=IGNORE
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2022-05-11 16:57:24,675 INFO  L138        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Check if freed pointer was valid=false
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Assume nondeterminstic values are in range=false
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Use constant arrays=true
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2022-05-11 16:57:24,676 INFO  L136        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Size of a code block=SequenceOfStatements
[2022-05-11 16:57:24,676 INFO  L136        SettingsManager]: Preferences of TraceAbstraction differ from their defaults:
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Trace refinement strategy=CAMEL
[2022-05-11 16:57:24,676 INFO  L138        SettingsManager]:  * Trace refinement exception blacklist=NONE
[2022-05-11 16:57:24,677 INFO  L136        SettingsManager]: Preferences of IcfgTransformer differ from their defaults:
[2022-05-11 16:57:24,677 INFO  L138        SettingsManager]:  * TransformationType=MODULO_NEIGHBOR
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1 (file:/home/ubuntu/tool/uautomizer/UAutomizer-linux/plugins/com.sun.xml.bind_2.2.0.v201505121915.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Applying setting for plugin de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator: Entry function -> main
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Witness directory -> /home/ubuntu/tool/uautomizer/UAutomizer-linux
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Witness filename -> witness.graphml
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Write witness besides input file -> false
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data specification -> CHECK( init(main()), LTL(F end) )


Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data producer -> Automizer
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data architecture -> 64bit
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data programhash -> 57ee8e87129db4f98332f5be0a058f28fbfec8d38aa1361e89a6fae0fcdb4129
[2022-05-11 16:57:24,860 INFO  L75    nceAwareModelManager]: Repository-Root is: /tmp
[2022-05-11 16:57:24,873 INFO  L261   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2022-05-11 16:57:24,875 INFO  L217   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2022-05-11 16:57:24,876 INFO  L271        PluginConnector]: Initializing CDTParser...
[2022-05-11 16:57:24,876 INFO  L275        PluginConnector]: CDTParser initialized
[2022-05-11 16:57:24,877 INFO  L432   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Initialization_3_NT.c
[2022-05-11 16:57:24,914 INFO  L220              CDTParser]: Created temporary CDT project at /home/ubuntu/tool/uautomizer/UAutomizer-linux/data/e21d61640/2eeacb3d13d84ac08fedcd345dc337d4/FLAG4882ec99b
[2022-05-11 16:57:25,224 INFO  L306              CDTParser]: Found 1 translation units.
[2022-05-11 16:57:25,224 INFO  L160              CDTParser]: Scanning /home/ubuntu/tool/FSE_benchmark/loop/Incorrect_Initialization_3_NT.c
[2022-05-11 16:57:25,229 INFO  L349              CDTParser]: About to delete temporary CDT project at /home/ubuntu/tool/uautomizer/UAutomizer-linux/data/e21d61640/2eeacb3d13d84ac08fedcd345dc337d4/FLAG4882ec99b
[2022-05-11 16:57:25,238 INFO  L357              CDTParser]: Successfully deleted /home/ubuntu/tool/uautomizer/UAutomizer-linux/data/e21d61640/2eeacb3d13d84ac08fedcd345dc337d4
[2022-05-11 16:57:25,239 INFO  L299   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2022-05-11 16:57:25,240 INFO  L131        ToolchainWalker]: Walking toolchain with 6 elements.
[2022-05-11 16:57:25,241 INFO  L113        PluginConnector]: ------------------------CACSL2BoogieTranslator----------------------------
[2022-05-11 16:57:25,241 INFO  L271        PluginConnector]: Initializing CACSL2BoogieTranslator...
[2022-05-11 16:57:25,244 INFO  L275        PluginConnector]: CACSL2BoogieTranslator initialized
[2022-05-11 16:57:25,244 INFO  L185        PluginConnector]: Executing the observer ACSLObjectContainerObserver from plugin CACSL2BoogieTranslator for "CDTParser AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,245 INFO  L205        PluginConnector]: Invalid model from CACSL2BoogieTranslator for observer de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator.ACSLObjectContainerObserver@20117eaf and model type de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25, skipping insertion in model container
[2022-05-11 16:57:25,245 INFO  L185        PluginConnector]: Executing the observer CACSL2BoogieTranslatorObserver from plugin CACSL2BoogieTranslator for "CDTParser AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,248 INFO  L145         MainTranslator]: Starting translation in SV-COMP mode 
[2022-05-11 16:57:25,256 INFO  L178         MainTranslator]: Built tables and reachable declarations
[2022-05-11 16:57:25,340 INFO  L209          PostProcessor]: Analyzing one entry point: main
[2022-05-11 16:57:25,344 INFO  L203         MainTranslator]: Completed pre-run
[2022-05-11 16:57:25,358 INFO  L209          PostProcessor]: Analyzing one entry point: main
[2022-05-11 16:57:25,373 INFO  L208         MainTranslator]: Completed translation
[2022-05-11 16:57:25,373 INFO  L202        PluginConnector]: Adding new model de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25 WrapperNode
[2022-05-11 16:57:25,373 INFO  L132        PluginConnector]: ------------------------ END CACSL2BoogieTranslator----------------------------
[2022-05-11 16:57:25,374 INFO  L113        PluginConnector]: ------------------------Boogie Procedure Inliner----------------------------
[2022-05-11 16:57:25,374 INFO  L271        PluginConnector]: Initializing Boogie Procedure Inliner...
[2022-05-11 16:57:25,374 INFO  L275        PluginConnector]: Boogie Procedure Inliner initialized
[2022-05-11 16:57:25,378 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Procedure Inliner for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,382 INFO  L185        PluginConnector]: Executing the observer Inliner from plugin Boogie Procedure Inliner for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,394 INFO  L137                Inliner]: procedures = 8, calls = 11, calls flagged for inlining = 3, calls inlined = 3, statements flattened = 56
[2022-05-11 16:57:25,394 INFO  L132        PluginConnector]: ------------------------ END Boogie Procedure Inliner----------------------------
[2022-05-11 16:57:25,395 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2022-05-11 16:57:25,395 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2022-05-11 16:57:25,395 INFO  L275        PluginConnector]: Boogie Preprocessor initialized
[2022-05-11 16:57:25,401 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,401 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,402 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,403 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,406 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,409 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,410 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,411 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2022-05-11 16:57:25,412 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2022-05-11 16:57:25,412 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2022-05-11 16:57:25,412 INFO  L275        PluginConnector]: RCFGBuilder initialized
[2022-05-11 16:57:25,412 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (1/1) ...
[2022-05-11 16:57:25,418 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:25,426 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:25,434 INFO  L229       MonitoredProcess]: Starting monitored process 1 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:25,436 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (1)] Waiting until timeout for monitored process
[2022-05-11 16:57:25,458 INFO  L130     BoogieDeclarations]: Found specification of procedure write~int
[2022-05-11 16:57:25,458 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2022-05-11 16:57:25,459 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2022-05-11 16:57:25,459 INFO  L130     BoogieDeclarations]: Found specification of procedure read~int
[2022-05-11 16:57:25,459 INFO  L130     BoogieDeclarations]: Found specification of procedure #Ultimate.allocOnStack
[2022-05-11 16:57:25,459 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.dealloc
[2022-05-11 16:57:25,503 INFO  L236             CfgBuilder]: Building ICFG
[2022-05-11 16:57:25,504 INFO  L262             CfgBuilder]: Building CFG for each procedure with an implementation
[2022-05-11 16:57:25,590 INFO  L277             CfgBuilder]: Performing block encoding
[2022-05-11 16:57:25,594 INFO  L296             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2022-05-11 16:57:25,594 INFO  L301             CfgBuilder]: Removed 3 assume(true) statements.
[2022-05-11 16:57:25,596 INFO  L202        PluginConnector]: Adding new model de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 11.05 04:57:25 BoogieIcfgContainer
[2022-05-11 16:57:25,596 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2022-05-11 16:57:25,596 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2022-05-11 16:57:25,596 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2022-05-11 16:57:25,598 INFO  L275        PluginConnector]: BuchiAutomizer initialized
[2022-05-11 16:57:25,598 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2022-05-11 16:57:25,599 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CDTParser AST 11.05 04:57:25" (1/3) ...
[2022-05-11 16:57:25,599 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56457487 and model type de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 11.05 04:57:25, skipping insertion in model container
[2022-05-11 16:57:25,599 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2022-05-11 16:57:25,599 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 04:57:25" (2/3) ...
[2022-05-11 16:57:25,600 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56457487 and model type de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 11.05 04:57:25, skipping insertion in model container
[2022-05-11 16:57:25,600 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2022-05-11 16:57:25,600 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 11.05 04:57:25" (3/3) ...
[2022-05-11 16:57:25,601 INFO  L388   chiAutomizerObserver]: Analyzing ICFG Incorrect_Initialization_3_NT.c
[2022-05-11 16:57:25,632 INFO  L359         BuchiCegarLoop]: Interprodecural is true
[2022-05-11 16:57:25,633 INFO  L360         BuchiCegarLoop]: Hoare is false
[2022-05-11 16:57:25,633 INFO  L361         BuchiCegarLoop]: Compute interpolants for ForwardPredicates
[2022-05-11 16:57:25,633 INFO  L362         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2022-05-11 16:57:25,633 INFO  L363         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2022-05-11 16:57:25,633 INFO  L364         BuchiCegarLoop]: Difference is false
[2022-05-11 16:57:25,633 INFO  L365         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2022-05-11 16:57:25,633 INFO  L368         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2022-05-11 16:57:25,643 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 19 states, 18 states have (on average 1.4444444444444444) internal successors, (26), 18 states have internal predecessors, (26), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:25,655 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2022-05-11 16:57:25,655 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:25,655 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:25,659 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1]
[2022-05-11 16:57:25,659 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1]
[2022-05-11 16:57:25,660 INFO  L425         BuchiCegarLoop]: ======== Iteration 1============
[2022-05-11 16:57:25,660 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 19 states, 18 states have (on average 1.4444444444444444) internal successors, (26), 18 states have internal predecessors, (26), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:25,661 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2022-05-11 16:57:25,661 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:25,661 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:25,661 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1]
[2022-05-11 16:57:25,661 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1]
[2022-05-11 16:57:25,667 INFO  L791   eck$LassoCheckResult]: Stem: 5#ULTIMATE.startENTRYtrue assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 10#L-1true assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 20#L19-3true 
[2022-05-11 16:57:25,667 INFO  L793   eck$LassoCheckResult]: Loop: 20#L19-3true assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 3#L19-2true main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 20#L19-3true 
[2022-05-11 16:57:25,672 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:25,672 INFO  L85        PathProgramCache]: Analyzing trace with hash 963, now seen corresponding path program 1 times
[2022-05-11 16:57:25,679 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:25,679 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1071246101]
[2022-05-11 16:57:25,680 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:25,680 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:25,734 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:25,734 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:25,743 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:25,755 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:25,757 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:25,757 INFO  L85        PathProgramCache]: Analyzing trace with hash 1283, now seen corresponding path program 1 times
[2022-05-11 16:57:25,757 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:25,757 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1497178299]
[2022-05-11 16:57:25,757 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:25,757 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:25,764 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:25,764 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:25,769 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:25,770 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:25,771 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:25,771 INFO  L85        PathProgramCache]: Analyzing trace with hash 925765, now seen corresponding path program 1 times
[2022-05-11 16:57:25,772 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:25,772 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [56964632]
[2022-05-11 16:57:25,772 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:25,772 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:25,785 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:25,785 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:25,793 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:25,796 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:25,978 INFO  L210          LassoAnalysis]: Preferences:
[2022-05-11 16:57:25,978 INFO  L126   ssoRankerPreferences]: Compute integeral hull: false
[2022-05-11 16:57:25,978 INFO  L127   ssoRankerPreferences]: Enable LassoPartitioneer: true
[2022-05-11 16:57:25,978 INFO  L128   ssoRankerPreferences]: Term annotations enabled: false
[2022-05-11 16:57:25,978 INFO  L129   ssoRankerPreferences]: Use exernal solver: false
[2022-05-11 16:57:25,979 INFO  L130   ssoRankerPreferences]: SMT solver command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:25,979 INFO  L131   ssoRankerPreferences]: Dump SMT script to file: false
[2022-05-11 16:57:25,979 INFO  L132   ssoRankerPreferences]: Path of dumped script: 
[2022-05-11 16:57:25,979 INFO  L133   ssoRankerPreferences]: Filename of dumped script: Incorrect_Initialization_3_NT.c_Iteration1_Lasso
[2022-05-11 16:57:25,979 INFO  L134   ssoRankerPreferences]: MapElimAlgo: Frank
[2022-05-11 16:57:25,979 INFO  L276          LassoAnalysis]: Starting lasso preprocessing...
[2022-05-11 16:57:25,990 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,030 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,033 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,035 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,037 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,039 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,043 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,046 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,048 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,052 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,055 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,057 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 16:57:26,201 INFO  L294          LassoAnalysis]: Preprocessing complete.
[2022-05-11 16:57:26,203 INFO  L490          LassoAnalysis]: Using template 'affine'.
[2022-05-11 16:57:26,204 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:26,207 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,208 INFO  L229       MonitoredProcess]: Starting monitored process 2 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,210 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (2)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,211 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 16:57:26,217 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 16:57:26,217 INFO  L351   nArgumentSynthesizer]: There is no stem transition; disabling supporting invariant generation.
[2022-05-11 16:57:26,218 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 16:57:26,218 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 16:57:26,218 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 16:57:26,219 INFO  L401   nArgumentSynthesizer]: We have 2 Motzkin's Theorem applications.
[2022-05-11 16:57:26,219 INFO  L402   nArgumentSynthesizer]: A total of 0 supporting invariants were added.
[2022-05-11 16:57:26,221 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 16:57:26,224 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (2)] Forceful destruction successful, exit code 0
[2022-05-11 16:57:26,224 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:26,230 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,231 INFO  L229       MonitoredProcess]: Starting monitored process 3 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,232 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (3)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,232 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 16:57:26,237 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 16:57:26,238 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 16:57:26,238 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 16:57:26,238 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 16:57:26,241 INFO  L401   nArgumentSynthesizer]: We have 6 Motzkin's Theorem applications.
[2022-05-11 16:57:26,241 INFO  L402   nArgumentSynthesizer]: A total of 2 supporting invariants were added.
[2022-05-11 16:57:26,244 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 16:57:26,246 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (3)] Ended with exit code 0
[2022-05-11 16:57:26,247 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:26,249 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,249 INFO  L229       MonitoredProcess]: Starting monitored process 4 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,250 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (4)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,251 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 16:57:26,255 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 16:57:26,255 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 16:57:26,255 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 16:57:26,255 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 16:57:26,258 INFO  L401   nArgumentSynthesizer]: We have 6 Motzkin's Theorem applications.
[2022-05-11 16:57:26,258 INFO  L402   nArgumentSynthesizer]: A total of 2 supporting invariants were added.
[2022-05-11 16:57:26,264 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 16:57:26,266 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (4)] Ended with exit code 0
[2022-05-11 16:57:26,267 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:26,269 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,270 INFO  L229       MonitoredProcess]: Starting monitored process 5 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,272 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (5)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,273 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 16:57:26,277 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 16:57:26,277 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 16:57:26,277 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 16:57:26,277 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 16:57:26,280 INFO  L401   nArgumentSynthesizer]: We have 6 Motzkin's Theorem applications.
[2022-05-11 16:57:26,280 INFO  L402   nArgumentSynthesizer]: A total of 2 supporting invariants were added.
[2022-05-11 16:57:26,283 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 16:57:26,285 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (5)] Forceful destruction successful, exit code 0
[2022-05-11 16:57:26,286 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:26,288 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,288 INFO  L229       MonitoredProcess]: Starting monitored process 6 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,289 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (6)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,290 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 16:57:26,294 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 16:57:26,294 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 16:57:26,294 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 16:57:26,295 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 16:57:26,300 INFO  L401   nArgumentSynthesizer]: We have 6 Motzkin's Theorem applications.
[2022-05-11 16:57:26,300 INFO  L402   nArgumentSynthesizer]: A total of 2 supporting invariants were added.
[2022-05-11 16:57:26,305 INFO  L420   nArgumentSynthesizer]: Found a termination argument, trying to simplify.
[2022-05-11 16:57:26,318 INFO  L443   ModelExtractionUtils]: Simplification made 7 calls to the SMT solver.
[2022-05-11 16:57:26,318 INFO  L444   ModelExtractionUtils]: 0 out of 13 variables were initially zero. Simplification set additionally 10 variables to zero.
[2022-05-11 16:57:26,319 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 16:57:26,322 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,322 INFO  L229       MonitoredProcess]: Starting monitored process 7 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,324 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (7)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,325 INFO  L435   nArgumentSynthesizer]: Simplifying supporting invariants...
[2022-05-11 16:57:26,330 INFO  L438   nArgumentSynthesizer]: Removed 2 redundant supporting invariants from a total of 2.
[2022-05-11 16:57:26,330 INFO  L513          LassoAnalysis]: Proved termination.
[2022-05-11 16:57:26,330 INFO  L515          LassoAnalysis]: Termination argument consisting of:
Ranking function f(ULTIMATE.start_main_~i~0#1) = -2*ULTIMATE.start_main_~i~0#1 + 197
Supporting invariants []
[2022-05-11 16:57:26,333 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (6)] Ended with exit code 0
[2022-05-11 16:57:26,337 INFO  L297   tatePredicateManager]: 1 out of 1 supporting invariants were superfluous and have been removed
[2022-05-11 16:57:26,356 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:26,367 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:26,369 INFO  L263         TraceCheckSpWp]: Trace formula consists of 23 conjuncts, 2 conjunts are in the unsatisfiable core
[2022-05-11 16:57:26,370 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:26,382 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:26,382 INFO  L263         TraceCheckSpWp]: Trace formula consists of 13 conjuncts, 4 conjunts are in the unsatisfiable core
[2022-05-11 16:57:26,383 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:26,403 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:26,423 INFO  L152   lantAutomatonBouncer]: Defining deterministic Buchi interpolant automaton with honda bouncer for stem and without honda bouncer for loop.1 stem predicates 2 loop predicates 
[2022-05-11 16:57:26,424 INFO  L71    iDifferenceNCSBLazy3]: Start buchiDifferenceNCSBLazy3. First operand  has 19 states, 18 states have (on average 1.4444444444444444) internal successors, (26), 18 states have internal predecessors, (26), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0) Second operand  has 3 states, 3 states have (on average 1.3333333333333333) internal successors, (4), 3 states have internal predecessors, (4), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,452 INFO  L75    iDifferenceNCSBLazy3]: Finished buchiDifferenceNCSBLazy3. First operand  has 19 states, 18 states have (on average 1.4444444444444444) internal successors, (26), 18 states have internal predecessors, (26), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0). Second operand  has 3 states, 3 states have (on average 1.3333333333333333) internal successors, (4), 3 states have internal predecessors, (4), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0) Result 51 states and 71 transitions. Complement of second has 7 states.
[2022-05-11 16:57:26,454 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: Buchi interpolant automaton has 5 states 1 stem states 2 non-accepting loop states 1 accepting loop states 
[2022-05-11 16:57:26,456 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 3 states, 3 states have (on average 1.3333333333333333) internal successors, (4), 3 states have internal predecessors, (4), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,457 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5 states to 5 states and 46 transitions.
[2022-05-11 16:57:26,458 INFO  L84            BuchiAccepts]: Start buchiAccepts Operand 5 states and 46 transitions. Stem has 2 letters. Loop has 2 letters.
[2022-05-11 16:57:26,458 INFO  L116           BuchiAccepts]: Finished buchiAccepts.
[2022-05-11 16:57:26,458 INFO  L84            BuchiAccepts]: Start buchiAccepts Operand 5 states and 46 transitions. Stem has 4 letters. Loop has 2 letters.
[2022-05-11 16:57:26,458 INFO  L116           BuchiAccepts]: Finished buchiAccepts.
[2022-05-11 16:57:26,458 INFO  L84            BuchiAccepts]: Start buchiAccepts Operand 5 states and 46 transitions. Stem has 2 letters. Loop has 4 letters.
[2022-05-11 16:57:26,458 INFO  L116           BuchiAccepts]: Finished buchiAccepts.
[2022-05-11 16:57:26,459 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 51 states and 71 transitions.
[2022-05-11 16:57:26,461 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:26,463 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 51 states to 16 states and 21 transitions.
[2022-05-11 16:57:26,463 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2022-05-11 16:57:26,463 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 14
[2022-05-11 16:57:26,464 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 16 states and 21 transitions.
[2022-05-11 16:57:26,464 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:26,464 INFO  L681         BuchiCegarLoop]: Abstraction has 16 states and 21 transitions.
[2022-05-11 16:57:26,473 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 16 states and 21 transitions.
[2022-05-11 16:57:26,477 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 16 to 16.
[2022-05-11 16:57:26,478 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 16 states, 16 states have (on average 1.3125) internal successors, (21), 15 states have internal predecessors, (21), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,478 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 16 states to 16 states and 21 transitions.
[2022-05-11 16:57:26,479 INFO  L704         BuchiCegarLoop]: Abstraction has 16 states and 21 transitions.
[2022-05-11 16:57:26,479 INFO  L587         BuchiCegarLoop]: Abstraction has 16 states and 21 transitions.
[2022-05-11 16:57:26,479 INFO  L425         BuchiCegarLoop]: ======== Iteration 2============
[2022-05-11 16:57:26,479 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 16 states and 21 transitions.
[2022-05-11 16:57:26,479 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:26,479 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:26,479 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:26,479 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1]
[2022-05-11 16:57:26,479 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:26,480 INFO  L791   eck$LassoCheckResult]: Stem: 115#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 116#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 122#L19-3 assume !(main_~i~0#1 < 99); 123#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 124#L23-3 
[2022-05-11 16:57:26,480 INFO  L793   eck$LassoCheckResult]: Loop: 124#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 121#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 117#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 118#L8-1 assume !(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1; 128#L8-5 strchr_#res#1.base, strchr_#res#1.offset := 0, 0; 126#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 119#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 120#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 124#L23-3 
[2022-05-11 16:57:26,480 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:26,480 INFO  L85        PathProgramCache]: Analyzing trace with hash 925707, now seen corresponding path program 1 times
[2022-05-11 16:57:26,480 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:26,480 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1326949056]
[2022-05-11 16:57:26,481 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:26,481 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:26,485 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:26,507 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:26,508 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:26,508 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1326949056]
[2022-05-11 16:57:26,508 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1326949056] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 16:57:26,508 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 16:57:26,508 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2022-05-11 16:57:26,509 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [2090892095]
[2022-05-11 16:57:26,509 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 16:57:26,510 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 16:57:26,510 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:26,510 INFO  L85        PathProgramCache]: Analyzing trace with hash -1372114993, now seen corresponding path program 1 times
[2022-05-11 16:57:26,511 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:26,511 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [273239140]
[2022-05-11 16:57:26,511 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:26,511 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:26,517 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:26,564 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:26,564 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:26,564 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [273239140]
[2022-05-11 16:57:26,564 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [273239140] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 16:57:26,564 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 16:57:26,564 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2022-05-11 16:57:26,565 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [2000461101]
[2022-05-11 16:57:26,565 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 16:57:26,565 INFO  L808   eck$LassoCheckResult]: loop already infeasible
[2022-05-11 16:57:26,565 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 16:57:26,566 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2022-05-11 16:57:26,567 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2022-05-11 16:57:26,567 INFO  L87              Difference]: Start difference. First operand 16 states and 21 transitions. cyclomatic complexity: 7 Second operand  has 3 states, 3 states have (on average 1.3333333333333333) internal successors, (4), 3 states have internal predecessors, (4), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,577 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 16:57:26,577 INFO  L93              Difference]: Finished difference Result 17 states and 21 transitions.
[2022-05-11 16:57:26,578 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2022-05-11 16:57:26,582 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 17 states and 21 transitions.
[2022-05-11 16:57:26,583 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (7)] Ended with exit code 0
[2022-05-11 16:57:26,583 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:26,584 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 17 states to 17 states and 21 transitions.
[2022-05-11 16:57:26,584 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 14
[2022-05-11 16:57:26,584 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 14
[2022-05-11 16:57:26,584 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 17 states and 21 transitions.
[2022-05-11 16:57:26,584 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:26,584 INFO  L681         BuchiCegarLoop]: Abstraction has 17 states and 21 transitions.
[2022-05-11 16:57:26,584 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 17 states and 21 transitions.
[2022-05-11 16:57:26,585 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 17 to 16.
[2022-05-11 16:57:26,585 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 16 states, 16 states have (on average 1.25) internal successors, (20), 15 states have internal predecessors, (20), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,585 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 16 states to 16 states and 20 transitions.
[2022-05-11 16:57:26,585 INFO  L704         BuchiCegarLoop]: Abstraction has 16 states and 20 transitions.
[2022-05-11 16:57:26,585 INFO  L587         BuchiCegarLoop]: Abstraction has 16 states and 20 transitions.
[2022-05-11 16:57:26,585 INFO  L425         BuchiCegarLoop]: ======== Iteration 3============
[2022-05-11 16:57:26,586 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 16 states and 20 transitions.
[2022-05-11 16:57:26,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:26,586 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:26,586 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:26,586 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:26,586 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:26,586 INFO  L791   eck$LassoCheckResult]: Stem: 157#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 158#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 163#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 155#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 156#L19-3 assume !(main_~i~0#1 < 99); 165#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 166#L23-3 
[2022-05-11 16:57:26,586 INFO  L793   eck$LassoCheckResult]: Loop: 166#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 164#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 159#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 160#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 167#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 168#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 161#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 162#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 166#L23-3 
[2022-05-11 16:57:26,587 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:26,587 INFO  L85        PathProgramCache]: Analyzing trace with hash 889660429, now seen corresponding path program 1 times
[2022-05-11 16:57:26,587 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:26,587 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1540642059]
[2022-05-11 16:57:26,587 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:26,587 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:26,594 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:26,613 INFO  L134       CoverageAnalysis]: Checked inductivity of 1 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:26,613 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:26,614 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1540642059]
[2022-05-11 16:57:26,614 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1540642059] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 16:57:26,614 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [1029705790]
[2022-05-11 16:57:26,614 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:26,614 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 16:57:26,617 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:26,617 INFO  L229       MonitoredProcess]: Starting monitored process 8 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 16:57:26,618 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (8)] Waiting until timeout for monitored process
[2022-05-11 16:57:26,650 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:26,651 INFO  L263         TraceCheckSpWp]: Trace formula consists of 47 conjuncts, 3 conjunts are in the unsatisfiable core
[2022-05-11 16:57:26,652 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:26,684 INFO  L134       CoverageAnalysis]: Checked inductivity of 1 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:26,684 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 16:57:26,713 INFO  L134       CoverageAnalysis]: Checked inductivity of 1 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:26,713 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [1029705790] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 16:57:26,713 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 16:57:26,714 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [4, 4, 4] total 7
[2022-05-11 16:57:26,714 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [861180397]
[2022-05-11 16:57:26,714 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 16:57:26,714 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 16:57:26,714 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:26,714 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 1 times
[2022-05-11 16:57:26,714 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:26,715 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [829711624]
[2022-05-11 16:57:26,715 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:26,715 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:26,720 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:26,721 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:26,725 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:26,727 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:26,946 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 16:57:26,946 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2022-05-11 16:57:26,946 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=21, Unknown=0, NotChecked=0, Total=42
[2022-05-11 16:57:26,946 INFO  L87              Difference]: Start difference. First operand 16 states and 20 transitions. cyclomatic complexity: 6 Second operand  has 7 states, 7 states have (on average 1.8571428571428572) internal successors, (13), 7 states have internal predecessors, (13), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,966 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 16:57:26,966 INFO  L93              Difference]: Finished difference Result 22 states and 26 transitions.
[2022-05-11 16:57:26,966 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2022-05-11 16:57:26,967 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 22 states and 26 transitions.
[2022-05-11 16:57:26,968 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:26,968 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 22 states to 22 states and 26 transitions.
[2022-05-11 16:57:26,968 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 14
[2022-05-11 16:57:26,968 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 14
[2022-05-11 16:57:26,968 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 22 states and 26 transitions.
[2022-05-11 16:57:26,969 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:26,969 INFO  L681         BuchiCegarLoop]: Abstraction has 22 states and 26 transitions.
[2022-05-11 16:57:26,969 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 22 states and 26 transitions.
[2022-05-11 16:57:26,970 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 22 to 22.
[2022-05-11 16:57:26,970 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 22 states, 22 states have (on average 1.1818181818181819) internal successors, (26), 21 states have internal predecessors, (26), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:26,970 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 22 states to 22 states and 26 transitions.
[2022-05-11 16:57:26,970 INFO  L704         BuchiCegarLoop]: Abstraction has 22 states and 26 transitions.
[2022-05-11 16:57:26,971 INFO  L587         BuchiCegarLoop]: Abstraction has 22 states and 26 transitions.
[2022-05-11 16:57:26,971 INFO  L425         BuchiCegarLoop]: ======== Iteration 4============
[2022-05-11 16:57:26,971 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 22 states and 26 transitions.
[2022-05-11 16:57:26,971 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:26,971 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:26,971 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:26,972 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 1, 1, 1, 1]
[2022-05-11 16:57:26,972 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:26,972 INFO  L791   eck$LassoCheckResult]: Stem: 235#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 236#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 242#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 249#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 250#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 233#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 234#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 254#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 253#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 252#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 251#L19-3 assume !(main_~i~0#1 < 99); 243#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 244#L23-3 
[2022-05-11 16:57:26,972 INFO  L793   eck$LassoCheckResult]: Loop: 244#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 241#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 237#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 238#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 245#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 246#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 239#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 240#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 244#L23-3 
[2022-05-11 16:57:26,973 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:26,973 INFO  L85        PathProgramCache]: Analyzing trace with hash 833936659, now seen corresponding path program 2 times
[2022-05-11 16:57:26,973 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:26,973 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1769293376]
[2022-05-11 16:57:26,973 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:26,973 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:26,983 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:27,032 INFO  L134       CoverageAnalysis]: Checked inductivity of 16 backedges. 0 proven. 16 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:27,033 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:27,033 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1769293376]
[2022-05-11 16:57:27,033 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1769293376] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 16:57:27,033 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [1530396091]
[2022-05-11 16:57:27,033 INFO  L93    rtionOrderModulation]: Changing assertion order to OUTSIDE_LOOP_FIRST1
[2022-05-11 16:57:27,033 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 16:57:27,035 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:27,036 INFO  L229       MonitoredProcess]: Starting monitored process 9 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 16:57:27,037 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (9)] Waiting until timeout for monitored process
[2022-05-11 16:57:27,074 INFO  L228   tOrderPrioritization]: Assert order OUTSIDE_LOOP_FIRST1 issued 2 check-sat command(s)
[2022-05-11 16:57:27,074 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 16:57:27,075 INFO  L263         TraceCheckSpWp]: Trace formula consists of 80 conjuncts, 6 conjunts are in the unsatisfiable core
[2022-05-11 16:57:27,076 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:27,112 INFO  L134       CoverageAnalysis]: Checked inductivity of 16 backedges. 0 proven. 16 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:27,112 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 16:57:27,192 INFO  L134       CoverageAnalysis]: Checked inductivity of 16 backedges. 0 proven. 16 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:27,192 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [1530396091] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 16:57:27,193 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 16:57:27,193 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [7, 7, 7] total 13
[2022-05-11 16:57:27,193 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [2008270135]
[2022-05-11 16:57:27,193 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 16:57:27,193 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 16:57:27,193 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:27,193 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 2 times
[2022-05-11 16:57:27,194 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:27,194 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1238958839]
[2022-05-11 16:57:27,194 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:27,194 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:27,199 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:27,199 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:27,202 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:27,204 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:27,424 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 16:57:27,425 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2022-05-11 16:57:27,425 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=78, Invalid=78, Unknown=0, NotChecked=0, Total=156
[2022-05-11 16:57:27,425 INFO  L87              Difference]: Start difference. First operand 22 states and 26 transitions. cyclomatic complexity: 6 Second operand  has 13 states, 13 states have (on average 1.9230769230769231) internal successors, (25), 13 states have internal predecessors, (25), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:27,461 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 16:57:27,461 INFO  L93              Difference]: Finished difference Result 34 states and 38 transitions.
[2022-05-11 16:57:27,462 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2022-05-11 16:57:27,462 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 34 states and 38 transitions.
[2022-05-11 16:57:27,463 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:27,463 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 34 states to 34 states and 38 transitions.
[2022-05-11 16:57:27,464 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 14
[2022-05-11 16:57:27,464 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 14
[2022-05-11 16:57:27,464 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 34 states and 38 transitions.
[2022-05-11 16:57:27,464 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:27,464 INFO  L681         BuchiCegarLoop]: Abstraction has 34 states and 38 transitions.
[2022-05-11 16:57:27,464 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 34 states and 38 transitions.
[2022-05-11 16:57:27,465 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 34 to 34.
[2022-05-11 16:57:27,465 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 34 states, 34 states have (on average 1.1176470588235294) internal successors, (38), 33 states have internal predecessors, (38), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:27,465 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 34 states to 34 states and 38 transitions.
[2022-05-11 16:57:27,466 INFO  L704         BuchiCegarLoop]: Abstraction has 34 states and 38 transitions.
[2022-05-11 16:57:27,466 INFO  L587         BuchiCegarLoop]: Abstraction has 34 states and 38 transitions.
[2022-05-11 16:57:27,466 INFO  L425         BuchiCegarLoop]: ======== Iteration 5============
[2022-05-11 16:57:27,466 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 34 states and 38 transitions.
[2022-05-11 16:57:27,466 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 10
[2022-05-11 16:57:27,466 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:27,466 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:27,467 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 1, 1, 1, 1]
[2022-05-11 16:57:27,467 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:27,467 INFO  L791   eck$LassoCheckResult]: Stem: 373#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 374#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 379#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 387#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 388#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 371#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 372#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 404#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 403#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 402#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 401#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 400#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 399#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 398#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 397#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 396#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 395#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 394#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 393#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 392#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 391#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 390#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 389#L19-3 assume !(main_~i~0#1 < 99); 381#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 382#L23-3 
[2022-05-11 16:57:27,467 INFO  L793   eck$LassoCheckResult]: Loop: 382#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 380#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 375#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 376#L8-1 assume !(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1; 386#L8-5 strchr_#res#1.base, strchr_#res#1.offset := 0, 0; 384#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 377#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 378#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 382#L23-3 
[2022-05-11 16:57:27,467 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:27,467 INFO  L85        PathProgramCache]: Analyzing trace with hash 2127272351, now seen corresponding path program 3 times
[2022-05-11 16:57:27,467 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:27,467 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [954221729]
[2022-05-11 16:57:27,468 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:27,468 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:27,484 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:27,600 INFO  L134       CoverageAnalysis]: Checked inductivity of 100 backedges. 0 proven. 100 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:27,600 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:27,600 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [954221729]
[2022-05-11 16:57:27,600 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [954221729] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 16:57:27,600 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [478181904]
[2022-05-11 16:57:27,600 INFO  L93    rtionOrderModulation]: Changing assertion order to OUTSIDE_LOOP_FIRST2
[2022-05-11 16:57:27,600 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 16:57:27,603 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:27,603 INFO  L229       MonitoredProcess]: Starting monitored process 10 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 16:57:27,604 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (10)] Waiting until timeout for monitored process
[2022-05-11 16:57:27,699 INFO  L228   tOrderPrioritization]: Assert order OUTSIDE_LOOP_FIRST2 issued 11 check-sat command(s)
[2022-05-11 16:57:27,699 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 16:57:27,700 INFO  L263         TraceCheckSpWp]: Trace formula consists of 146 conjuncts, 12 conjunts are in the unsatisfiable core
[2022-05-11 16:57:27,701 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:27,772 INFO  L134       CoverageAnalysis]: Checked inductivity of 100 backedges. 0 proven. 100 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:27,773 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 16:57:28,044 INFO  L134       CoverageAnalysis]: Checked inductivity of 100 backedges. 0 proven. 100 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:28,044 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [478181904] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 16:57:28,044 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 16:57:28,044 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [13, 13, 13] total 25
[2022-05-11 16:57:28,044 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1628933681]
[2022-05-11 16:57:28,044 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 16:57:28,044 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 16:57:28,045 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:28,045 INFO  L85        PathProgramCache]: Analyzing trace with hash -1372114993, now seen corresponding path program 2 times
[2022-05-11 16:57:28,045 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:28,045 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1718221737]
[2022-05-11 16:57:28,045 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:28,045 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:28,048 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:28,084 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:28,085 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:28,085 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1718221737]
[2022-05-11 16:57:28,085 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1718221737] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 16:57:28,085 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 16:57:28,085 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2022-05-11 16:57:28,085 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1824043518]
[2022-05-11 16:57:28,086 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 16:57:28,086 INFO  L808   eck$LassoCheckResult]: loop already infeasible
[2022-05-11 16:57:28,086 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 16:57:28,086 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2022-05-11 16:57:28,086 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2022-05-11 16:57:28,086 INFO  L87              Difference]: Start difference. First operand 34 states and 38 transitions. cyclomatic complexity: 6 Second operand  has 5 states, 5 states have (on average 1.6) internal successors, (8), 4 states have internal predecessors, (8), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:28,124 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 16:57:28,124 INFO  L93              Difference]: Finished difference Result 41 states and 47 transitions.
[2022-05-11 16:57:28,125 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2022-05-11 16:57:28,125 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 41 states and 47 transitions.
[2022-05-11 16:57:28,126 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 17
[2022-05-11 16:57:28,126 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 41 states to 41 states and 47 transitions.
[2022-05-11 16:57:28,126 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 21
[2022-05-11 16:57:28,126 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 21
[2022-05-11 16:57:28,126 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 41 states and 47 transitions.
[2022-05-11 16:57:28,126 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:28,126 INFO  L681         BuchiCegarLoop]: Abstraction has 41 states and 47 transitions.
[2022-05-11 16:57:28,127 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 41 states and 47 transitions.
[2022-05-11 16:57:28,128 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 41 to 36.
[2022-05-11 16:57:28,128 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 36 states, 36 states have (on average 1.1111111111111112) internal successors, (40), 35 states have internal predecessors, (40), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:28,128 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 36 states to 36 states and 40 transitions.
[2022-05-11 16:57:28,128 INFO  L704         BuchiCegarLoop]: Abstraction has 36 states and 40 transitions.
[2022-05-11 16:57:28,128 INFO  L587         BuchiCegarLoop]: Abstraction has 36 states and 40 transitions.
[2022-05-11 16:57:28,128 INFO  L425         BuchiCegarLoop]: ======== Iteration 6============
[2022-05-11 16:57:28,128 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 36 states and 40 transitions.
[2022-05-11 16:57:28,129 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 16:57:28,129 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:28,129 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:28,129 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 1, 1, 1, 1]
[2022-05-11 16:57:28,129 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:28,129 INFO  L791   eck$LassoCheckResult]: Stem: 619#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 620#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 626#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 617#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 618#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 634#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 652#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 651#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 650#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 649#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 648#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 647#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 646#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 645#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 644#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 643#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 642#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 641#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 640#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 639#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 638#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 637#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 636#L19-3 assume !(main_~i~0#1 < 99); 627#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 628#L23-3 
[2022-05-11 16:57:28,130 INFO  L793   eck$LassoCheckResult]: Loop: 628#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 625#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 621#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 622#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 629#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 630#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 623#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 624#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 628#L23-3 
[2022-05-11 16:57:28,130 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:28,130 INFO  L85        PathProgramCache]: Analyzing trace with hash 2127272351, now seen corresponding path program 4 times
[2022-05-11 16:57:28,130 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:28,130 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1470330726]
[2022-05-11 16:57:28,130 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:28,130 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:28,144 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:28,251 INFO  L134       CoverageAnalysis]: Checked inductivity of 100 backedges. 0 proven. 100 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:28,251 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:28,251 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1470330726]
[2022-05-11 16:57:28,251 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1470330726] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 16:57:28,251 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [860905131]
[2022-05-11 16:57:28,251 INFO  L93    rtionOrderModulation]: Changing assertion order to TERMS_WITH_SMALL_CONSTANTS_FIRST
[2022-05-11 16:57:28,251 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 16:57:28,254 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:28,254 INFO  L229       MonitoredProcess]: Starting monitored process 11 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 16:57:28,255 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (11)] Waiting until timeout for monitored process
[2022-05-11 16:57:28,308 INFO  L228   tOrderPrioritization]: Assert order TERMS_WITH_SMALL_CONSTANTS_FIRST issued 0 check-sat command(s)
[2022-05-11 16:57:28,309 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 16:57:28,309 INFO  L263         TraceCheckSpWp]: Trace formula consists of 146 conjuncts, 12 conjunts are in the unsatisfiable core
[2022-05-11 16:57:28,310 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:28,380 INFO  L134       CoverageAnalysis]: Checked inductivity of 100 backedges. 0 proven. 100 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:28,380 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 16:57:28,642 INFO  L134       CoverageAnalysis]: Checked inductivity of 100 backedges. 0 proven. 100 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:28,642 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [860905131] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 16:57:28,642 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 16:57:28,642 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [13, 13, 13] total 25
[2022-05-11 16:57:28,642 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1656760551]
[2022-05-11 16:57:28,642 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 16:57:28,643 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 16:57:28,643 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:28,643 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 3 times
[2022-05-11 16:57:28,643 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:28,643 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [216258601]
[2022-05-11 16:57:28,643 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:28,643 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:28,647 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:28,647 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:28,649 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:28,650 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:28,864 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 16:57:28,864 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 25 interpolants.
[2022-05-11 16:57:28,865 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=300, Invalid=300, Unknown=0, NotChecked=0, Total=600
[2022-05-11 16:57:28,865 INFO  L87              Difference]: Start difference. First operand 36 states and 40 transitions. cyclomatic complexity: 6 Second operand  has 25 states, 25 states have (on average 1.96) internal successors, (49), 25 states have internal predecessors, (49), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:28,937 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 16:57:28,937 INFO  L93              Difference]: Finished difference Result 60 states and 64 transitions.
[2022-05-11 16:57:28,937 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 24 states. 
[2022-05-11 16:57:28,938 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 60 states and 64 transitions.
[2022-05-11 16:57:28,939 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 16:57:28,939 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 60 states to 60 states and 64 transitions.
[2022-05-11 16:57:28,939 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2022-05-11 16:57:28,939 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 16
[2022-05-11 16:57:28,939 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 60 states and 64 transitions.
[2022-05-11 16:57:28,939 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:28,939 INFO  L681         BuchiCegarLoop]: Abstraction has 60 states and 64 transitions.
[2022-05-11 16:57:28,939 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 60 states and 64 transitions.
[2022-05-11 16:57:28,941 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 60 to 60.
[2022-05-11 16:57:28,941 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 60 states, 60 states have (on average 1.0666666666666667) internal successors, (64), 59 states have internal predecessors, (64), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:28,942 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 60 states to 60 states and 64 transitions.
[2022-05-11 16:57:28,942 INFO  L704         BuchiCegarLoop]: Abstraction has 60 states and 64 transitions.
[2022-05-11 16:57:28,942 INFO  L587         BuchiCegarLoop]: Abstraction has 60 states and 64 transitions.
[2022-05-11 16:57:28,942 INFO  L425         BuchiCegarLoop]: ======== Iteration 7============
[2022-05-11 16:57:28,942 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 60 states and 64 transitions.
[2022-05-11 16:57:28,942 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 16:57:28,942 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:28,942 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:28,943 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [22, 22, 1, 1, 1, 1]
[2022-05-11 16:57:28,943 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:28,943 INFO  L791   eck$LassoCheckResult]: Stem: 881#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 882#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 887#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 896#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 897#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 879#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 880#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 938#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 937#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 936#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 935#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 934#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 933#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 932#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 931#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 930#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 929#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 928#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 927#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 926#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 925#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 924#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 923#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 922#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 921#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 920#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 919#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 918#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 917#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 916#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 915#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 914#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 913#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 912#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 911#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 910#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 909#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 908#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 907#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 906#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 905#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 904#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 903#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 902#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 901#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 900#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 899#L19-3 assume !(main_~i~0#1 < 99); 889#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 890#L23-3 
[2022-05-11 16:57:28,943 INFO  L793   eck$LassoCheckResult]: Loop: 890#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 888#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 883#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 884#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 891#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 892#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 885#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 886#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 890#L23-3 
[2022-05-11 16:57:28,944 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:28,944 INFO  L85        PathProgramCache]: Analyzing trace with hash 828161207, now seen corresponding path program 5 times
[2022-05-11 16:57:28,944 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:28,944 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1192411253]
[2022-05-11 16:57:28,944 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:28,944 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:28,965 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:29,332 INFO  L134       CoverageAnalysis]: Checked inductivity of 484 backedges. 0 proven. 484 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:29,332 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:29,332 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1192411253]
[2022-05-11 16:57:29,332 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1192411253] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 16:57:29,332 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [236217722]
[2022-05-11 16:57:29,332 INFO  L93    rtionOrderModulation]: Changing assertion order to INSIDE_LOOP_FIRST1
[2022-05-11 16:57:29,332 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 16:57:29,334 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:29,335 INFO  L229       MonitoredProcess]: Starting monitored process 12 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 16:57:29,336 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (12)] Waiting until timeout for monitored process
[2022-05-11 16:57:29,728 INFO  L228   tOrderPrioritization]: Assert order INSIDE_LOOP_FIRST1 issued 23 check-sat command(s)
[2022-05-11 16:57:29,728 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 16:57:29,731 INFO  L263         TraceCheckSpWp]: Trace formula consists of 278 conjuncts, 24 conjunts are in the unsatisfiable core
[2022-05-11 16:57:29,732 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 16:57:29,865 INFO  L134       CoverageAnalysis]: Checked inductivity of 484 backedges. 0 proven. 484 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:29,865 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 16:57:30,805 INFO  L134       CoverageAnalysis]: Checked inductivity of 484 backedges. 0 proven. 484 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:30,805 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [236217722] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 16:57:30,806 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 16:57:30,806 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [25, 25, 25] total 49
[2022-05-11 16:57:30,806 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [426634270]
[2022-05-11 16:57:30,806 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 16:57:30,806 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 16:57:30,806 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:30,806 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 4 times
[2022-05-11 16:57:30,807 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:30,807 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1366335049]
[2022-05-11 16:57:30,807 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:30,807 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:30,810 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:30,810 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 16:57:30,812 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 16:57:30,814 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 16:57:31,034 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 16:57:31,035 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 49 interpolants.
[2022-05-11 16:57:31,036 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=1176, Invalid=1176, Unknown=0, NotChecked=0, Total=2352
[2022-05-11 16:57:31,036 INFO  L87              Difference]: Start difference. First operand 60 states and 64 transitions. cyclomatic complexity: 6 Second operand  has 49 states, 49 states have (on average 1.9795918367346939) internal successors, (97), 49 states have internal predecessors, (97), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:31,179 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 16:57:31,179 INFO  L93              Difference]: Finished difference Result 108 states and 112 transitions.
[2022-05-11 16:57:31,179 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 48 states. 
[2022-05-11 16:57:31,180 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 108 states and 112 transitions.
[2022-05-11 16:57:31,180 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 16:57:31,181 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 108 states to 108 states and 112 transitions.
[2022-05-11 16:57:31,181 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2022-05-11 16:57:31,181 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 16
[2022-05-11 16:57:31,181 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 108 states and 112 transitions.
[2022-05-11 16:57:31,182 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 16:57:31,182 INFO  L681         BuchiCegarLoop]: Abstraction has 108 states and 112 transitions.
[2022-05-11 16:57:31,182 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 108 states and 112 transitions.
[2022-05-11 16:57:31,184 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 108 to 108.
[2022-05-11 16:57:31,185 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 108 states, 108 states have (on average 1.037037037037037) internal successors, (112), 107 states have internal predecessors, (112), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 16:57:31,185 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 108 states to 108 states and 112 transitions.
[2022-05-11 16:57:31,185 INFO  L704         BuchiCegarLoop]: Abstraction has 108 states and 112 transitions.
[2022-05-11 16:57:31,185 INFO  L587         BuchiCegarLoop]: Abstraction has 108 states and 112 transitions.
[2022-05-11 16:57:31,185 INFO  L425         BuchiCegarLoop]: ======== Iteration 8============
[2022-05-11 16:57:31,186 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 108 states and 112 transitions.
[2022-05-11 16:57:31,186 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 16:57:31,186 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 16:57:31,186 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 16:57:31,188 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [46, 46, 1, 1, 1, 1]
[2022-05-11 16:57:31,188 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 16:57:31,188 INFO  L791   eck$LassoCheckResult]: Stem: 1383#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 1384#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 1390#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1398#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1399#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1381#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1382#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1488#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1487#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1486#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1485#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1484#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1483#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1482#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1481#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1480#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1479#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1478#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1477#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1476#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1475#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1474#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1473#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1472#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1471#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1470#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1469#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1468#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1467#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1466#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1465#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1464#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1463#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1462#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1461#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1460#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1459#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1458#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1457#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1456#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1455#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1454#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1453#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1452#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1451#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1450#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1449#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1448#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1447#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1446#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1445#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1444#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1443#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1442#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1441#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1440#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1439#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1438#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1437#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1436#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1435#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1434#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1433#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1432#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1431#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1430#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1429#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1428#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1427#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1426#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1425#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1424#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1423#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1422#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1421#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1420#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1419#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1418#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1417#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1416#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1415#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1414#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1413#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1412#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1411#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1410#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1409#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1408#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1407#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1406#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1405#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1404#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1403#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 1402#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 1401#L19-3 assume !(main_~i~0#1 < 99); 1391#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 1392#L23-3 
[2022-05-11 16:57:31,188 INFO  L793   eck$LassoCheckResult]: Loop: 1392#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 1389#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 1385#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 1386#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 1393#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 1394#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 1387#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 1388#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 1392#L23-3 
[2022-05-11 16:57:31,189 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 16:57:31,189 INFO  L85        PathProgramCache]: Analyzing trace with hash 830581479, now seen corresponding path program 6 times
[2022-05-11 16:57:31,189 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 16:57:31,189 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [363586418]
[2022-05-11 16:57:31,189 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 16:57:31,189 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 16:57:31,230 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 16:57:32,483 INFO  L134       CoverageAnalysis]: Checked inductivity of 2116 backedges. 0 proven. 2116 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 16:57:32,483 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 16:57:32,483 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [363586418]
[2022-05-11 16:57:32,483 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [363586418] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 16:57:32,483 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [1209587680]
[2022-05-11 16:57:32,483 INFO  L93    rtionOrderModulation]: Changing assertion order to MIX_INSIDE_OUTSIDE
[2022-05-11 16:57:32,483 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 16:57:32,485 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 16:57:32,504 INFO  L229       MonitoredProcess]: Starting monitored process 13 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 16:57:32,505 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (13)] Waiting until timeout for monitored process
[2022-05-11 17:01:57,439 INFO  L228   tOrderPrioritization]: Assert order MIX_INSIDE_OUTSIDE issued 47 check-sat command(s)
[2022-05-11 17:01:57,439 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 17:01:57,601 INFO  L263         TraceCheckSpWp]: Trace formula consists of 542 conjuncts, 48 conjunts are in the unsatisfiable core
[2022-05-11 17:01:57,604 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 17:01:57,864 INFO  L134       CoverageAnalysis]: Checked inductivity of 2116 backedges. 0 proven. 2116 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 17:01:57,864 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 17:02:01,337 INFO  L134       CoverageAnalysis]: Checked inductivity of 2116 backedges. 0 proven. 2116 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 17:02:01,338 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [1209587680] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 17:02:01,338 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 17:02:01,338 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [49, 49, 49] total 97
[2022-05-11 17:02:01,338 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1780004386]
[2022-05-11 17:02:01,338 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 17:02:01,338 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 17:02:01,339 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:01,339 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 5 times
[2022-05-11 17:02:01,339 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:01,339 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1660305986]
[2022-05-11 17:02:01,339 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:01,339 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:01,342 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:01,342 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:01,344 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:01,345 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 17:02:01,554 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 17:02:01,555 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 97 interpolants.
[2022-05-11 17:02:01,557 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=4656, Invalid=4656, Unknown=0, NotChecked=0, Total=9312
[2022-05-11 17:02:01,557 INFO  L87              Difference]: Start difference. First operand 108 states and 112 transitions. cyclomatic complexity: 6 Second operand  has 97 states, 97 states have (on average 1.9896907216494846) internal successors, (193), 97 states have internal predecessors, (193), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 17:02:01,849 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 17:02:01,849 INFO  L93              Difference]: Finished difference Result 204 states and 208 transitions.
[2022-05-11 17:02:01,849 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 96 states. 
[2022-05-11 17:02:01,850 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 204 states and 208 transitions.
[2022-05-11 17:02:01,851 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 17:02:01,852 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 204 states to 204 states and 208 transitions.
[2022-05-11 17:02:01,852 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2022-05-11 17:02:01,852 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 16
[2022-05-11 17:02:01,852 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 204 states and 208 transitions.
[2022-05-11 17:02:01,853 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 17:02:01,853 INFO  L681         BuchiCegarLoop]: Abstraction has 204 states and 208 transitions.
[2022-05-11 17:02:01,853 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 204 states and 208 transitions.
[2022-05-11 17:02:01,857 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 204 to 204.
[2022-05-11 17:02:01,857 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 204 states, 204 states have (on average 1.0196078431372548) internal successors, (208), 203 states have internal predecessors, (208), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 17:02:01,858 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 204 states to 204 states and 208 transitions.
[2022-05-11 17:02:01,858 INFO  L704         BuchiCegarLoop]: Abstraction has 204 states and 208 transitions.
[2022-05-11 17:02:01,858 INFO  L587         BuchiCegarLoop]: Abstraction has 204 states and 208 transitions.
[2022-05-11 17:02:01,858 INFO  L425         BuchiCegarLoop]: ======== Iteration 9============
[2022-05-11 17:02:01,858 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 204 states and 208 transitions.
[2022-05-11 17:02:01,859 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 17:02:01,859 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 17:02:01,859 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 17:02:01,860 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [94, 94, 1, 1, 1, 1]
[2022-05-11 17:02:01,861 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 17:02:01,861 INFO  L791   eck$LassoCheckResult]: Stem: 2365#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 2366#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 2371#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2380#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2381#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2363#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2364#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2566#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2565#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2564#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2563#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2562#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2561#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2560#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2559#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2558#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2557#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2556#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2555#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2554#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2553#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2552#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2551#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2550#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2549#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2548#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2547#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2546#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2545#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2544#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2543#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2542#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2541#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2540#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2539#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2538#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2537#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2536#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2535#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2534#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2533#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2532#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2531#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2530#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2529#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2528#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2527#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2526#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2525#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2524#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2523#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2522#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2521#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2520#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2519#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2518#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2517#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2516#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2515#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2514#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2513#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2512#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2511#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2510#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2509#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2508#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2507#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2506#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2505#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2504#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2503#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2502#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2501#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2500#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2499#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2498#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2497#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2496#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2495#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2494#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2493#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2492#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2491#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2490#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2489#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2488#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2487#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2486#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2485#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2484#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2483#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2482#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2481#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2480#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2479#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2478#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2477#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2476#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2475#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2474#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2473#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2472#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2471#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2470#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2469#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2468#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2467#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2466#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2465#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2464#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2463#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2462#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2461#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2460#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2459#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2458#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2457#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2456#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2455#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2454#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2453#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2452#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2451#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2450#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2449#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2448#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2447#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2446#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2445#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2444#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2443#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2442#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2441#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2440#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2439#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2438#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2437#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2436#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2435#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2434#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2433#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2432#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2431#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2430#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2429#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2428#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2427#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2426#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2425#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2424#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2423#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2422#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2421#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2420#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2419#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2418#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2417#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2416#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2415#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2414#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2413#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2412#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2411#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2410#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2409#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2408#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2407#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2406#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2405#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2404#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2403#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2402#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2401#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2400#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2399#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2398#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2397#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2396#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2395#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2394#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2393#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2392#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2391#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2390#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2389#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2388#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2387#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2386#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2385#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 2384#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 2383#L19-3 assume !(main_~i~0#1 < 99); 2373#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 2374#L23-3 
[2022-05-11 17:02:01,861 INFO  L793   eck$LassoCheckResult]: Loop: 2374#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 2372#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 2367#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 2368#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 2375#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 2376#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 2369#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 2370#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 2374#L23-3 
[2022-05-11 17:02:01,861 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:01,861 INFO  L85        PathProgramCache]: Analyzing trace with hash 1165371207, now seen corresponding path program 7 times
[2022-05-11 17:02:01,861 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:01,861 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [490516752]
[2022-05-11 17:02:01,861 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:01,861 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:01,946 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 17:02:06,549 INFO  L134       CoverageAnalysis]: Checked inductivity of 8836 backedges. 0 proven. 8836 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 17:02:06,549 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 17:02:06,549 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [490516752]
[2022-05-11 17:02:06,549 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [490516752] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 17:02:06,549 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [568402944]
[2022-05-11 17:02:06,549 INFO  L93    rtionOrderModulation]: Changing assertion order to NOT_INCREMENTALLY
[2022-05-11 17:02:06,549 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 17:02:06,552 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 17:02:06,552 INFO  L229       MonitoredProcess]: Starting monitored process 14 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 17:02:06,562 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (14)] Waiting until timeout for monitored process
[2022-05-11 17:02:06,808 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 17:02:06,812 INFO  L263         TraceCheckSpWp]: Trace formula consists of 1070 conjuncts, 96 conjunts are in the unsatisfiable core
[2022-05-11 17:02:06,815 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 17:02:07,329 INFO  L134       CoverageAnalysis]: Checked inductivity of 8836 backedges. 0 proven. 8836 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 17:02:07,330 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 17:02:08,266 INFO  L134       CoverageAnalysis]: Checked inductivity of 8836 backedges. 0 proven. 8836 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 17:02:08,266 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [568402944] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 17:02:08,266 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 17:02:08,266 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [97, 97, 97] total 102
[2022-05-11 17:02:08,266 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [18040383]
[2022-05-11 17:02:08,267 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 17:02:08,267 INFO  L796   eck$LassoCheckResult]: stem already infeasible
[2022-05-11 17:02:08,267 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:08,267 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 6 times
[2022-05-11 17:02:08,267 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:08,267 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1243698565]
[2022-05-11 17:02:08,267 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:08,267 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:08,270 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:08,273 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:08,275 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:08,277 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 17:02:08,485 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 17:02:08,486 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 102 interpolants.
[2022-05-11 17:02:08,487 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=5151, Invalid=5151, Unknown=0, NotChecked=0, Total=10302
[2022-05-11 17:02:08,488 INFO  L87              Difference]: Start difference. First operand 204 states and 208 transitions. cyclomatic complexity: 6 Second operand  has 102 states, 102 states have (on average 2.0098039215686274) internal successors, (205), 102 states have internal predecessors, (205), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 17:02:08,773 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 17:02:08,773 INFO  L93              Difference]: Finished difference Result 214 states and 218 transitions.
[2022-05-11 17:02:08,773 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 101 states. 
[2022-05-11 17:02:08,774 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 214 states and 218 transitions.
[2022-05-11 17:02:08,775 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 17:02:08,775 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 214 states to 214 states and 218 transitions.
[2022-05-11 17:02:08,775 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2022-05-11 17:02:08,776 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 16
[2022-05-11 17:02:08,776 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 214 states and 218 transitions.
[2022-05-11 17:02:08,776 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 17:02:08,776 INFO  L681         BuchiCegarLoop]: Abstraction has 214 states and 218 transitions.
[2022-05-11 17:02:08,776 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 214 states and 218 transitions.
[2022-05-11 17:02:08,780 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 214 to 214.
[2022-05-11 17:02:08,780 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 214 states, 214 states have (on average 1.0186915887850467) internal successors, (218), 213 states have internal predecessors, (218), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 17:02:08,781 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 214 states to 214 states and 218 transitions.
[2022-05-11 17:02:08,781 INFO  L704         BuchiCegarLoop]: Abstraction has 214 states and 218 transitions.
[2022-05-11 17:02:08,781 INFO  L587         BuchiCegarLoop]: Abstraction has 214 states and 218 transitions.
[2022-05-11 17:02:08,781 INFO  L425         BuchiCegarLoop]: ======== Iteration 10============
[2022-05-11 17:02:08,781 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 214 states and 218 transitions.
[2022-05-11 17:02:08,782 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2022-05-11 17:02:08,782 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 17:02:08,782 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 17:02:08,783 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [99, 99, 1, 1, 1, 1]
[2022-05-11 17:02:08,783 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 17:02:08,783 INFO  L791   eck$LassoCheckResult]: Stem: 4034#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 4035#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 4040#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4049#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4050#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4032#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4033#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4245#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4244#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4243#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4242#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4241#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4240#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4239#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4238#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4237#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4236#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4235#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4234#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4233#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4232#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4231#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4230#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4229#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4228#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4227#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4226#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4225#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4224#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4223#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4222#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4221#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4220#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4219#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4218#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4217#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4216#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4215#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4214#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4213#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4212#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4211#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4210#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4209#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4208#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4207#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4206#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4205#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4204#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4203#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4202#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4201#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4200#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4199#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4198#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4197#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4196#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4195#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4194#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4193#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4192#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4191#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4190#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4189#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4188#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4187#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4186#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4185#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4184#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4183#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4182#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4181#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4180#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4179#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4178#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4177#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4176#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4175#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4174#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4173#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4172#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4171#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4170#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4169#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4168#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4167#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4166#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4165#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4164#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4163#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4162#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4161#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4160#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4159#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4158#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4157#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4156#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4155#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4154#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4153#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4152#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4151#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4150#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4149#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4148#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4147#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4146#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4145#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4144#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4143#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4142#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4141#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4140#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4139#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4138#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4137#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4136#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4135#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4134#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4133#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4132#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4131#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4130#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4129#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4128#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4127#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4126#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4125#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4124#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4123#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4122#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4121#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4120#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4119#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4118#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4117#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4116#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4115#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4114#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4113#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4112#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4111#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4110#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4109#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4108#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4107#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4106#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4105#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4104#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4103#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4102#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4101#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4100#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4099#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4098#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4097#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4096#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4095#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4094#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4093#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4092#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4091#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4090#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4089#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4088#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4087#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4086#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4085#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4084#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4083#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4082#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4081#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4080#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4079#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4078#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4077#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4076#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4075#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4074#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4073#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4072#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4071#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4070#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4069#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4068#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4067#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4066#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4065#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4064#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4063#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4062#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4061#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4060#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4059#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4058#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4057#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4056#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4055#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4054#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4053#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4052#L19-3 assume !(main_~i~0#1 < 99); 4042#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 4043#L23-3 
[2022-05-11 17:02:08,783 INFO  L793   eck$LassoCheckResult]: Loop: 4043#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 4041#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 4036#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 4037#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 4044#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 4045#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 4038#L26 assume main_~n~0#1.base == 0 && main_~n~0#1.offset == 0;main_~n~0#1.base, main_~n~0#1.offset := main_~p~0#1.base, 99 + main_~p~0#1.offset; 4039#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 4043#L23-3 
[2022-05-11 17:02:08,783 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:08,784 INFO  L85        PathProgramCache]: Analyzing trace with hash 1641540433, now seen corresponding path program 8 times
[2022-05-11 17:02:08,784 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:08,784 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [157724302]
[2022-05-11 17:02:08,784 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:08,784 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:08,868 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:08,868 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:08,938 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:08,961 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 17:02:08,961 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:08,961 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506279, now seen corresponding path program 7 times
[2022-05-11 17:02:08,961 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:08,961 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [321741633]
[2022-05-11 17:02:08,962 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:08,962 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:08,984 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:08,984 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:08,986 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:08,987 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 17:02:08,987 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:08,987 INFO  L85        PathProgramCache]: Analyzing trace with hash 1886345001, now seen corresponding path program 1 times
[2022-05-11 17:02:08,987 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:08,988 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [2067522632]
[2022-05-11 17:02:08,988 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:08,988 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:09,032 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 17:02:09,112 INFO  L134       CoverageAnalysis]: Checked inductivity of 9801 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 9801 trivial. 0 not checked.
[2022-05-11 17:02:09,113 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 17:02:09,113 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [2067522632]
[2022-05-11 17:02:09,113 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [2067522632] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 17:02:09,113 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 17:02:09,113 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2022-05-11 17:02:09,113 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [20920444]
[2022-05-11 17:02:09,113 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 17:02:09,310 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 17:02:09,310 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2022-05-11 17:02:09,310 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2022-05-11 17:02:09,310 INFO  L87              Difference]: Start difference. First operand 214 states and 218 transitions. cyclomatic complexity: 6 Second operand  has 7 states, 7 states have (on average 2.0) internal successors, (14), 7 states have internal predecessors, (14), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 17:02:09,422 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 17:02:09,422 INFO  L93              Difference]: Finished difference Result 245 states and 254 transitions.
[2022-05-11 17:02:09,422 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2022-05-11 17:02:09,423 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 245 states and 254 transitions.
[2022-05-11 17:02:09,424 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 33
[2022-05-11 17:02:09,424 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 245 states to 245 states and 254 transitions.
[2022-05-11 17:02:09,424 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 47
[2022-05-11 17:02:09,424 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 47
[2022-05-11 17:02:09,425 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 245 states and 254 transitions.
[2022-05-11 17:02:09,425 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 17:02:09,425 INFO  L681         BuchiCegarLoop]: Abstraction has 245 states and 254 transitions.
[2022-05-11 17:02:09,425 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 245 states and 254 transitions.
[2022-05-11 17:02:09,428 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 245 to 228.
[2022-05-11 17:02:09,428 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 228 states, 228 states have (on average 1.030701754385965) internal successors, (235), 227 states have internal predecessors, (235), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 17:02:09,428 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 228 states to 228 states and 235 transitions.
[2022-05-11 17:02:09,428 INFO  L704         BuchiCegarLoop]: Abstraction has 228 states and 235 transitions.
[2022-05-11 17:02:09,428 INFO  L587         BuchiCegarLoop]: Abstraction has 228 states and 235 transitions.
[2022-05-11 17:02:09,428 INFO  L425         BuchiCegarLoop]: ======== Iteration 11============
[2022-05-11 17:02:09,429 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 228 states and 235 transitions.
[2022-05-11 17:02:09,429 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 26
[2022-05-11 17:02:09,429 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 17:02:09,429 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 17:02:09,430 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [99, 99, 1, 1, 1, 1]
[2022-05-11 17:02:09,430 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 17:02:09,431 INFO  L791   eck$LassoCheckResult]: Stem: 4517#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;#NULL.base, #NULL.offset := 0, 0;assume 0 == #valid[0];assume 0 < #StackHeapBarrier; 4518#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~post3#1, main_~i~0#1, main_#t~ret4#1.base, main_#t~ret4#1.offset, main_~n~0#1.base, main_~n~0#1.offset, main_#t~mem5#1, main_~#in~0#1.base, main_~#in~0#1.offset, main_~p~0#1.base, main_~p~0#1.offset;call main_~#in~0#1.base, main_~#in~0#1.offset := #Ultimate.allocOnStack(100);main_~i~0#1 := 0; 4523#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4515#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4516#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4536#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4731#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4730#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4729#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4728#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4727#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4726#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4725#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4724#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4723#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4722#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4721#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4720#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4719#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4718#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4717#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4716#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4715#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4714#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4713#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4712#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4711#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4710#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4709#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4708#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4707#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4706#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4705#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4704#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4703#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4702#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4701#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4700#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4699#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4698#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4697#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4696#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4695#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4694#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4693#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4692#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4691#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4690#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4689#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4688#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4687#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4686#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4685#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4684#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4683#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4682#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4681#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4680#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4679#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4678#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4677#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4676#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4675#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4674#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4673#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4672#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4671#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4670#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4669#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4668#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4667#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4666#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4665#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4664#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4663#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4662#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4661#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4660#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4659#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4658#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4657#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4656#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4655#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4654#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4653#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4652#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4651#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4650#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4649#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4648#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4647#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4646#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4645#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4644#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4643#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4642#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4641#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4640#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4639#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4638#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4637#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4636#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4635#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4634#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4633#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4632#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4631#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4630#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4629#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4628#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4627#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4626#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4625#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4624#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4623#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4622#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4621#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4620#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4619#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4618#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4617#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4616#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4615#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4614#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4613#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4612#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4611#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4610#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4609#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4608#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4607#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4606#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4605#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4604#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4603#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4602#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4601#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4600#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4599#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4598#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4597#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4596#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4595#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4594#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4593#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4592#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4591#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4590#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4589#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4588#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4587#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4586#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4585#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4584#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4583#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4582#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4581#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4580#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4579#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4578#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4577#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4576#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4575#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4574#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4573#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4572#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4571#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4570#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4569#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4568#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4567#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4566#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4565#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4564#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4563#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4562#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4561#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4560#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4559#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4558#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4557#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4556#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4555#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4554#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4553#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4552#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4551#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4550#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4549#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4548#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4547#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4546#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4545#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4544#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4543#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4542#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4541#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4540#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4539#L19-3 assume !!(main_~i~0#1 < 99);call write~int(10, main_~#in~0#1.base, main_~#in~0#1.offset + main_~i~0#1, 1); 4538#L19-2 main_#t~post3#1 := main_~i~0#1;main_~i~0#1 := 1 + main_#t~post3#1;havoc main_#t~post3#1; 4537#L19-3 assume !(main_~i~0#1 < 99); 4525#L19-4 main_~p~0#1.base, main_~p~0#1.offset := main_~#in~0#1.base, main_~#in~0#1.offset;call write~int(0, main_~#in~0#1.base, 99 + main_~#in~0#1.offset, 1); 4526#L23-3 
[2022-05-11 17:02:09,431 INFO  L793   eck$LassoCheckResult]: Loop: 4526#L23-3 call main_#t~mem5#1 := read~int(main_~p~0#1.base, main_~p~0#1.offset, 1); 4524#L23-1 assume !!(0 != main_#t~mem5#1);havoc main_#t~mem5#1;assume { :begin_inline_strchr } true;strchr_#in~str#1.base, strchr_#in~str#1.offset, strchr_#in~c#1 := main_~p~0#1.base, main_~p~0#1.offset, 10;havoc strchr_#res#1.base, strchr_#res#1.offset;havoc strchr_#t~mem2#1, strchr_#t~pre0#1.base, strchr_#t~pre0#1.offset, strchr_#t~mem1#1, strchr_~str#1.base, strchr_~str#1.offset, strchr_~c#1;strchr_~str#1.base, strchr_~str#1.offset := strchr_#in~str#1.base, strchr_#in~str#1.offset;strchr_~c#1 := strchr_#in~c#1; 4519#L8-4 call strchr_#t~mem1#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 4520#L8-1 assume !!(0 != strchr_#t~mem1#1);havoc strchr_#t~mem1#1;call strchr_#t~mem2#1 := read~int(strchr_~str#1.base, strchr_~str#1.offset, 1); 4533#L9 assume strchr_#t~mem2#1 == strchr_~c#1;havoc strchr_#t~mem2#1;strchr_#res#1.base, strchr_#res#1.offset := strchr_~str#1.base, strchr_~str#1.offset; 4735#L13 main_#t~ret4#1.base, main_#t~ret4#1.offset := strchr_#res#1.base, strchr_#res#1.offset;assume { :end_inline_strchr } true;main_~n~0#1.base, main_~n~0#1.offset := main_#t~ret4#1.base, main_#t~ret4#1.offset;havoc main_#t~ret4#1.base, main_#t~ret4#1.offset; 4521#L26 assume !(main_~n~0#1.base == 0 && main_~n~0#1.offset == 0); 4522#L26-2 main_~p~0#1.base, main_~p~0#1.offset := main_~n~0#1.base, main_~n~0#1.offset; 4526#L23-3 
[2022-05-11 17:02:09,431 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:09,431 INFO  L85        PathProgramCache]: Analyzing trace with hash 1641540433, now seen corresponding path program 9 times
[2022-05-11 17:02:09,431 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:09,431 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [724221607]
[2022-05-11 17:02:09,431 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:09,431 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:09,525 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:09,525 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:09,585 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:09,599 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 17:02:09,600 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:09,600 INFO  L85        PathProgramCache]: Analyzing trace with hash -1370506217, now seen corresponding path program 1 times
[2022-05-11 17:02:09,600 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:09,600 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [566862878]
[2022-05-11 17:02:09,600 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:09,600 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:09,603 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:09,603 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:09,604 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:09,606 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 17:02:09,606 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 17:02:09,606 INFO  L85        PathProgramCache]: Analyzing trace with hash 1886345063, now seen corresponding path program 1 times
[2022-05-11 17:02:09,606 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 17:02:09,607 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1566633764]
[2022-05-11 17:02:09,607 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 17:02:09,607 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 17:02:09,705 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:09,705 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 17:02:09,785 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 17:02:09,818 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
Killed by 15
 
