timeout 900 ./Ultimate.py --spec termination.prp --file Type_Conversion_in_Assignment_1_NT.c --architecture 64bit
 
 
-------------------------------------------------------------------------------------------------------
 
 
testfile: Type_Conversion_in_Assignment_1_NT.c
Checking for termination
Using default analysis
Version 839c364b
Calling Ultimate with: /usr/bin/java -Dosgi.configuration.area=/home/ubuntu/tool/uautomizer/UAutomizer-linux/data/config -Xmx15G -Xms4m -jar /home/ubuntu/tool/uautomizer/UAutomizer-linux/plugins/org.eclipse.equinox.launcher_1.5.800.v20200727-1323.jar -data @noDefault -ultimatedata /home/ubuntu/tool/uautomizer/UAutomizer-linux/data -tc /home/ubuntu/tool/uautomizer/UAutomizer-linux/config/AutomizerTermination.xml -i /home/ubuntu/tool/FSE_benchmark/loop/Type_Conversion_in_Assignment_1_NT.c -s /home/ubuntu/tool/uautomizer/UAutomizer-linux/config/svcomp-Termination-64bit-Automizer_Default.epf --cacsl2boogietranslator.entry.function main --witnessprinter.witness.directory /home/ubuntu/tool/uautomizer/UAutomizer-linux --witnessprinter.witness.filename witness.graphml --witnessprinter.write.witness.besides.input.file false --witnessprinter.graph.data.specification CHECK( init(main()), LTL(F end) )

 --witnessprinter.graph.data.producer Automizer --witnessprinter.graph.data.architecture 64bit --witnessprinter.graph.data.programhash ea24119a4bb75f84f7a2d1af145f220a657c69120e50c1dbb9f74657b710fd42
--- Real Ultimate output ---
This is Ultimate 0.2.2-hotfix-svcomp22-839c364
[2022-05-11 19:14:38,047 INFO  L177        SettingsManager]: Resetting all preferences to default values...
[2022-05-11 19:14:38,048 INFO  L181        SettingsManager]: Resetting UltimateCore preferences to default values
[2022-05-11 19:14:38,067 INFO  L184        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2022-05-11 19:14:38,067 INFO  L181        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2022-05-11 19:14:38,068 INFO  L181        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2022-05-11 19:14:38,069 INFO  L181        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2022-05-11 19:14:38,070 INFO  L181        SettingsManager]: Resetting LassoRanker preferences to default values
[2022-05-11 19:14:38,071 INFO  L181        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2022-05-11 19:14:38,072 INFO  L181        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2022-05-11 19:14:38,072 INFO  L181        SettingsManager]: Resetting Sifa preferences to default values
[2022-05-11 19:14:38,073 INFO  L184        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2022-05-11 19:14:38,073 INFO  L181        SettingsManager]: Resetting LTL2Aut preferences to default values
[2022-05-11 19:14:38,074 INFO  L181        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2022-05-11 19:14:38,075 INFO  L181        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2022-05-11 19:14:38,075 INFO  L181        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2022-05-11 19:14:38,076 INFO  L181        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2022-05-11 19:14:38,076 INFO  L181        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2022-05-11 19:14:38,077 INFO  L181        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2022-05-11 19:14:38,078 INFO  L181        SettingsManager]: Resetting CodeCheck preferences to default values
[2022-05-11 19:14:38,079 INFO  L181        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2022-05-11 19:14:38,080 INFO  L181        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2022-05-11 19:14:38,081 INFO  L181        SettingsManager]: Resetting Referee preferences to default values
[2022-05-11 19:14:38,081 INFO  L181        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2022-05-11 19:14:38,083 INFO  L184        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2022-05-11 19:14:38,083 INFO  L184        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2022-05-11 19:14:38,083 INFO  L181        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2022-05-11 19:14:38,084 INFO  L181        SettingsManager]: Resetting IcfgToChc preferences to default values
[2022-05-11 19:14:38,084 INFO  L181        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2022-05-11 19:14:38,084 INFO  L184        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2022-05-11 19:14:38,085 INFO  L181        SettingsManager]: Resetting Boogie Printer preferences to default values
[2022-05-11 19:14:38,085 INFO  L181        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2022-05-11 19:14:38,086 INFO  L181        SettingsManager]: Resetting ReqPrinter preferences to default values
[2022-05-11 19:14:38,086 INFO  L181        SettingsManager]: Resetting Witness Printer preferences to default values
[2022-05-11 19:14:38,087 INFO  L184        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2022-05-11 19:14:38,087 INFO  L181        SettingsManager]: Resetting CDTParser preferences to default values
[2022-05-11 19:14:38,087 INFO  L184        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2022-05-11 19:14:38,087 INFO  L184        SettingsManager]: ReqParser provides no preferences, ignoring...
[2022-05-11 19:14:38,087 INFO  L181        SettingsManager]: Resetting SmtParser preferences to default values
[2022-05-11 19:14:38,088 INFO  L181        SettingsManager]: Resetting Witness Parser preferences to default values
[2022-05-11 19:14:38,088 INFO  L188        SettingsManager]: Finished resetting all preferences to default values...
[2022-05-11 19:14:38,089 INFO  L101        SettingsManager]: Beginning loading settings from /home/ubuntu/tool/uautomizer/UAutomizer-linux/config/svcomp-Termination-64bit-Automizer_Default.epf
[2022-05-11 19:14:38,104 INFO  L113        SettingsManager]: Loading preferences was successful
[2022-05-11 19:14:38,104 INFO  L115        SettingsManager]: Preferences different from defaults after loading the file:
[2022-05-11 19:14:38,104 INFO  L136        SettingsManager]: Preferences of UltimateCore differ from their defaults:
[2022-05-11 19:14:38,104 INFO  L138        SettingsManager]:  * Log level for class=de.uni_freiburg.informatik.ultimate.lib.smtlibutils.quantifier.QuantifierPusher=ERROR;
[2022-05-11 19:14:38,105 INFO  L136        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2022-05-11 19:14:38,105 INFO  L138        SettingsManager]:  * Create parallel compositions if possible=false
[2022-05-11 19:14:38,105 INFO  L138        SettingsManager]:  * Use SBE=true
[2022-05-11 19:14:38,105 INFO  L136        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2022-05-11 19:14:38,105 INFO  L138        SettingsManager]:  * NCSB implementation=INTSET_LAZY3
[2022-05-11 19:14:38,105 INFO  L138        SettingsManager]:  * Use old map elimination=false
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Use external solver (rank synthesis)=false
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Use only trivial implications for array writes=true
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Rank analysis=LINEAR_WITH_GUESSES
[2022-05-11 19:14:38,106 INFO  L136        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Overapproximate operations on floating types=true
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Check division by zero=IGNORE
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2022-05-11 19:14:38,106 INFO  L138        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2022-05-11 19:14:38,107 INFO  L138        SettingsManager]:  * Check if freed pointer was valid=false
[2022-05-11 19:14:38,107 INFO  L138        SettingsManager]:  * Assume nondeterminstic values are in range=false
[2022-05-11 19:14:38,107 INFO  L138        SettingsManager]:  * Use constant arrays=true
[2022-05-11 19:14:38,107 INFO  L138        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2022-05-11 19:14:38,107 INFO  L136        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2022-05-11 19:14:38,107 INFO  L138        SettingsManager]:  * Size of a code block=SequenceOfStatements
[2022-05-11 19:14:38,107 INFO  L136        SettingsManager]: Preferences of TraceAbstraction differ from their defaults:
[2022-05-11 19:14:38,107 INFO  L138        SettingsManager]:  * Trace refinement strategy=CAMEL
[2022-05-11 19:14:38,108 INFO  L138        SettingsManager]:  * Trace refinement exception blacklist=NONE
[2022-05-11 19:14:38,108 INFO  L136        SettingsManager]: Preferences of IcfgTransformer differ from their defaults:
[2022-05-11 19:14:38,108 INFO  L138        SettingsManager]:  * TransformationType=MODULO_NEIGHBOR
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1 (file:/home/ubuntu/tool/uautomizer/UAutomizer-linux/plugins/com.sun.xml.bind_2.2.0.v201505121915.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Applying setting for plugin de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator: Entry function -> main
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Witness directory -> /home/ubuntu/tool/uautomizer/UAutomizer-linux
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Witness filename -> witness.graphml
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Write witness besides input file -> false
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data specification -> CHECK( init(main()), LTL(F end) )


Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data producer -> Automizer
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data architecture -> 64bit
Applying setting for plugin de.uni_freiburg.informatik.ultimate.witnessprinter: Graph data programhash -> ea24119a4bb75f84f7a2d1af145f220a657c69120e50c1dbb9f74657b710fd42
[2022-05-11 19:14:38,283 INFO  L75    nceAwareModelManager]: Repository-Root is: /tmp
[2022-05-11 19:14:38,298 INFO  L261   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2022-05-11 19:14:38,300 INFO  L217   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2022-05-11 19:14:38,301 INFO  L271        PluginConnector]: Initializing CDTParser...
[2022-05-11 19:14:38,301 INFO  L275        PluginConnector]: CDTParser initialized
[2022-05-11 19:14:38,302 INFO  L432   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /home/ubuntu/tool/FSE_benchmark/loop/Type_Conversion_in_Assignment_1_NT.c
[2022-05-11 19:14:38,340 INFO  L220              CDTParser]: Created temporary CDT project at /home/ubuntu/tool/uautomizer/UAutomizer-linux/data/1fc67db64/78e3f7692b04463a9686519e8598fdc9/FLAG24f2143ee
[2022-05-11 19:14:38,660 INFO  L306              CDTParser]: Found 1 translation units.
[2022-05-11 19:14:38,660 INFO  L160              CDTParser]: Scanning /home/ubuntu/tool/FSE_benchmark/loop/Type_Conversion_in_Assignment_1_NT.c
[2022-05-11 19:14:38,664 INFO  L349              CDTParser]: About to delete temporary CDT project at /home/ubuntu/tool/uautomizer/UAutomizer-linux/data/1fc67db64/78e3f7692b04463a9686519e8598fdc9/FLAG24f2143ee
[2022-05-11 19:14:38,673 INFO  L357              CDTParser]: Successfully deleted /home/ubuntu/tool/uautomizer/UAutomizer-linux/data/1fc67db64/78e3f7692b04463a9686519e8598fdc9
[2022-05-11 19:14:38,675 INFO  L299   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2022-05-11 19:14:38,676 INFO  L131        ToolchainWalker]: Walking toolchain with 6 elements.
[2022-05-11 19:14:38,677 INFO  L113        PluginConnector]: ------------------------CACSL2BoogieTranslator----------------------------
[2022-05-11 19:14:38,677 INFO  L271        PluginConnector]: Initializing CACSL2BoogieTranslator...
[2022-05-11 19:14:38,680 INFO  L275        PluginConnector]: CACSL2BoogieTranslator initialized
[2022-05-11 19:14:38,680 INFO  L185        PluginConnector]: Executing the observer ACSLObjectContainerObserver from plugin CACSL2BoogieTranslator for "CDTParser AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,681 INFO  L205        PluginConnector]: Invalid model from CACSL2BoogieTranslator for observer de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator.ACSLObjectContainerObserver@6e2a9ad4 and model type de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38, skipping insertion in model container
[2022-05-11 19:14:38,681 INFO  L185        PluginConnector]: Executing the observer CACSL2BoogieTranslatorObserver from plugin CACSL2BoogieTranslator for "CDTParser AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,685 INFO  L145         MainTranslator]: Starting translation in SV-COMP mode 
[2022-05-11 19:14:38,693 INFO  L178         MainTranslator]: Built tables and reachable declarations
[2022-05-11 19:14:38,789 INFO  L209          PostProcessor]: Analyzing one entry point: main
[2022-05-11 19:14:38,791 INFO  L203         MainTranslator]: Completed pre-run
[2022-05-11 19:14:38,800 INFO  L209          PostProcessor]: Analyzing one entry point: main
[2022-05-11 19:14:38,820 INFO  L208         MainTranslator]: Completed translation
[2022-05-11 19:14:38,820 INFO  L202        PluginConnector]: Adding new model de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38 WrapperNode
[2022-05-11 19:14:38,821 INFO  L132        PluginConnector]: ------------------------ END CACSL2BoogieTranslator----------------------------
[2022-05-11 19:14:38,822 INFO  L113        PluginConnector]: ------------------------Boogie Procedure Inliner----------------------------
[2022-05-11 19:14:38,822 INFO  L271        PluginConnector]: Initializing Boogie Procedure Inliner...
[2022-05-11 19:14:38,822 INFO  L275        PluginConnector]: Boogie Procedure Inliner initialized
[2022-05-11 19:14:38,833 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Procedure Inliner for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,837 INFO  L185        PluginConnector]: Executing the observer Inliner from plugin Boogie Procedure Inliner for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,847 INFO  L137                Inliner]: procedures = 4, calls = 3, calls flagged for inlining = 3, calls inlined = 3, statements flattened = 44
[2022-05-11 19:14:38,848 INFO  L132        PluginConnector]: ------------------------ END Boogie Procedure Inliner----------------------------
[2022-05-11 19:14:38,848 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2022-05-11 19:14:38,848 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2022-05-11 19:14:38,848 INFO  L275        PluginConnector]: Boogie Preprocessor initialized
[2022-05-11 19:14:38,853 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,853 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,854 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,854 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,855 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,857 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,858 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,859 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2022-05-11 19:14:38,860 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2022-05-11 19:14:38,860 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2022-05-11 19:14:38,860 INFO  L275        PluginConnector]: RCFGBuilder initialized
[2022-05-11 19:14:38,861 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (1/1) ...
[2022-05-11 19:14:38,865 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:38,874 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:38,883 INFO  L229       MonitoredProcess]: Starting monitored process 1 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:38,888 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (1)] Waiting until timeout for monitored process
[2022-05-11 19:14:38,911 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2022-05-11 19:14:38,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2022-05-11 19:14:38,944 INFO  L236             CfgBuilder]: Building ICFG
[2022-05-11 19:14:38,945 INFO  L262             CfgBuilder]: Building CFG for each procedure with an implementation
[2022-05-11 19:14:39,013 INFO  L277             CfgBuilder]: Performing block encoding
[2022-05-11 19:14:39,017 INFO  L296             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2022-05-11 19:14:39,017 INFO  L301             CfgBuilder]: Removed 1 assume(true) statements.
[2022-05-11 19:14:39,018 INFO  L202        PluginConnector]: Adding new model de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 11.05 07:14:39 BoogieIcfgContainer
[2022-05-11 19:14:39,018 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2022-05-11 19:14:39,019 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2022-05-11 19:14:39,019 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2022-05-11 19:14:39,021 INFO  L275        PluginConnector]: BuchiAutomizer initialized
[2022-05-11 19:14:39,022 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2022-05-11 19:14:39,022 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CDTParser AST 11.05 07:14:38" (1/3) ...
[2022-05-11 19:14:39,023 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13597bd8 and model type de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 11.05 07:14:39, skipping insertion in model container
[2022-05-11 19:14:39,023 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2022-05-11 19:14:39,023 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "de.uni_freiburg.informatik.ultimate.plugins.generator.cacsl2boogietranslator AST 11.05 07:14:38" (2/3) ...
[2022-05-11 19:14:39,023 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@13597bd8 and model type de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 11.05 07:14:39, skipping insertion in model container
[2022-05-11 19:14:39,023 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2022-05-11 19:14:39,024 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 11.05 07:14:39" (3/3) ...
[2022-05-11 19:14:39,024 INFO  L388   chiAutomizerObserver]: Analyzing ICFG Type_Conversion_in_Assignment_1_NT.c
[2022-05-11 19:14:39,051 INFO  L359         BuchiCegarLoop]: Interprodecural is true
[2022-05-11 19:14:39,052 INFO  L360         BuchiCegarLoop]: Hoare is false
[2022-05-11 19:14:39,052 INFO  L361         BuchiCegarLoop]: Compute interpolants for ForwardPredicates
[2022-05-11 19:14:39,052 INFO  L362         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2022-05-11 19:14:39,052 INFO  L363         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2022-05-11 19:14:39,052 INFO  L364         BuchiCegarLoop]: Difference is false
[2022-05-11 19:14:39,052 INFO  L365         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2022-05-11 19:14:39,052 INFO  L368         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2022-05-11 19:14:39,061 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 17 states, 16 states have (on average 1.5625) internal successors, (25), 16 states have internal predecessors, (25), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:39,072 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 11
[2022-05-11 19:14:39,072 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:39,072 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:39,077 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1]
[2022-05-11 19:14:39,077 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:39,077 INFO  L425         BuchiCegarLoop]: ======== Iteration 1============
[2022-05-11 19:14:39,078 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 17 states, 16 states have (on average 1.5625) internal successors, (25), 16 states have internal predecessors, (25), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:39,080 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 11
[2022-05-11 19:14:39,080 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:39,080 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:39,081 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1]
[2022-05-11 19:14:39,081 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:39,086 INFO  L791   eck$LassoCheckResult]: Stem: 6#ULTIMATE.startENTRYtrue assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 12#L-1true assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 17#L21-2true 
[2022-05-11 19:14:39,087 INFO  L793   eck$LassoCheckResult]: Loop: 17#L21-2true assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 14#L9true assume ~flag~0 > 1000;fgetc_#res#1 := -1; 3#L16true main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18#L24true assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 7#L27true assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 8#L29true assume main_#t~switch3#1; 10#L26true havoc main_#t~switch3#1; 17#L21-2true 
[2022-05-11 19:14:39,090 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,090 INFO  L85        PathProgramCache]: Analyzing trace with hash 963, now seen corresponding path program 1 times
[2022-05-11 19:14:39,097 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,097 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [839273302]
[2022-05-11 19:14:39,097 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,098 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,143 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,143 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:39,147 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,156 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:39,158 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,158 INFO  L85        PathProgramCache]: Analyzing trace with hash -1871813465, now seen corresponding path program 1 times
[2022-05-11 19:14:39,158 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,158 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1112271951]
[2022-05-11 19:14:39,159 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,159 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,170 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:39,263 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:39,264 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:39,264 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1112271951]
[2022-05-11 19:14:39,264 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1112271951] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 19:14:39,264 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 19:14:39,265 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2022-05-11 19:14:39,265 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [712662712]
[2022-05-11 19:14:39,269 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 19:14:39,273 INFO  L808   eck$LassoCheckResult]: loop already infeasible
[2022-05-11 19:14:39,273 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:39,292 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2022-05-11 19:14:39,292 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2022-05-11 19:14:39,293 INFO  L87              Difference]: Start difference. First operand  has 17 states, 16 states have (on average 1.5625) internal successors, (25), 16 states have internal predecessors, (25), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0) Second operand  has 5 states, 5 states have (on average 1.4) internal successors, (7), 5 states have internal predecessors, (7), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:39,386 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:39,387 INFO  L93              Difference]: Finished difference Result 31 states and 39 transitions.
[2022-05-11 19:14:39,388 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2022-05-11 19:14:39,391 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 31 states and 39 transitions.
[2022-05-11 19:14:39,392 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 26
[2022-05-11 19:14:39,395 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 31 states to 28 states and 36 transitions.
[2022-05-11 19:14:39,395 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 28
[2022-05-11 19:14:39,395 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 28
[2022-05-11 19:14:39,396 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 28 states and 36 transitions.
[2022-05-11 19:14:39,396 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 19:14:39,396 INFO  L681         BuchiCegarLoop]: Abstraction has 28 states and 36 transitions.
[2022-05-11 19:14:39,405 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 28 states and 36 transitions.
[2022-05-11 19:14:39,410 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 28 to 18.
[2022-05-11 19:14:39,411 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 18 states, 18 states have (on average 1.2777777777777777) internal successors, (23), 17 states have internal predecessors, (23), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:39,411 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 18 states to 18 states and 23 transitions.
[2022-05-11 19:14:39,412 INFO  L704         BuchiCegarLoop]: Abstraction has 18 states and 23 transitions.
[2022-05-11 19:14:39,412 INFO  L587         BuchiCegarLoop]: Abstraction has 18 states and 23 transitions.
[2022-05-11 19:14:39,412 INFO  L425         BuchiCegarLoop]: ======== Iteration 2============
[2022-05-11 19:14:39,412 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 18 states and 23 transitions.
[2022-05-11 19:14:39,413 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 16
[2022-05-11 19:14:39,413 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:39,413 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:39,413 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1]
[2022-05-11 19:14:39,413 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:39,413 INFO  L791   eck$LassoCheckResult]: Stem: 65#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 66#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 73#L21-2 
[2022-05-11 19:14:39,413 INFO  L793   eck$LassoCheckResult]: Loop: 73#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 74#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 75#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 80#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 79#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 69#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 70#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 71#L33 assume !main_#t~switch3#1; 72#L26 havoc main_#t~switch3#1; 73#L21-2 
[2022-05-11 19:14:39,414 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,414 INFO  L85        PathProgramCache]: Analyzing trace with hash 963, now seen corresponding path program 2 times
[2022-05-11 19:14:39,414 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,414 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [951099052]
[2022-05-11 19:14:39,414 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,415 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,416 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,417 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:39,418 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,418 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:39,419 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,419 INFO  L85        PathProgramCache]: Analyzing trace with hash 778611584, now seen corresponding path program 1 times
[2022-05-11 19:14:39,419 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,419 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [790328265]
[2022-05-11 19:14:39,419 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,419 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,424 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:39,437 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:39,437 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:39,438 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [790328265]
[2022-05-11 19:14:39,438 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [790328265] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 19:14:39,438 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 19:14:39,438 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2022-05-11 19:14:39,438 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [846855813]
[2022-05-11 19:14:39,438 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 19:14:39,438 INFO  L808   eck$LassoCheckResult]: loop already infeasible
[2022-05-11 19:14:39,439 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:39,439 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2022-05-11 19:14:39,439 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2022-05-11 19:14:39,439 INFO  L87              Difference]: Start difference. First operand 18 states and 23 transitions. cyclomatic complexity: 6 Second operand  has 3 states, 3 states have (on average 3.0) internal successors, (9), 3 states have internal predecessors, (9), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:39,450 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:39,451 INFO  L93              Difference]: Finished difference Result 18 states and 22 transitions.
[2022-05-11 19:14:39,451 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2022-05-11 19:14:39,452 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 18 states and 22 transitions.
[2022-05-11 19:14:39,452 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 16
[2022-05-11 19:14:39,452 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 18 states to 18 states and 22 transitions.
[2022-05-11 19:14:39,452 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:39,452 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:39,453 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 18 states and 22 transitions.
[2022-05-11 19:14:39,453 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2022-05-11 19:14:39,453 INFO  L681         BuchiCegarLoop]: Abstraction has 18 states and 22 transitions.
[2022-05-11 19:14:39,453 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 18 states and 22 transitions.
[2022-05-11 19:14:39,454 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 18 to 18.
[2022-05-11 19:14:39,454 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 18 states, 18 states have (on average 1.2222222222222223) internal successors, (22), 17 states have internal predecessors, (22), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:39,454 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 18 states to 18 states and 22 transitions.
[2022-05-11 19:14:39,454 INFO  L704         BuchiCegarLoop]: Abstraction has 18 states and 22 transitions.
[2022-05-11 19:14:39,454 INFO  L587         BuchiCegarLoop]: Abstraction has 18 states and 22 transitions.
[2022-05-11 19:14:39,454 INFO  L425         BuchiCegarLoop]: ======== Iteration 3============
[2022-05-11 19:14:39,454 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 18 states and 22 transitions.
[2022-05-11 19:14:39,455 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 16
[2022-05-11 19:14:39,455 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:39,455 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:39,455 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1]
[2022-05-11 19:14:39,455 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:39,455 INFO  L791   eck$LassoCheckResult]: Stem: 107#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 108#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 114#L21-2 
[2022-05-11 19:14:39,455 INFO  L793   eck$LassoCheckResult]: Loop: 114#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 115#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 116#L13 assume fgetc_~c~0#1 < 0;fgetc_~c~0#1 := -fgetc_~c~0#1; 117#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 118#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 122#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 121#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 119#L29 assume main_#t~switch3#1; 113#L26 havoc main_#t~switch3#1; 114#L21-2 
[2022-05-11 19:14:39,456 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,456 INFO  L85        PathProgramCache]: Analyzing trace with hash 963, now seen corresponding path program 3 times
[2022-05-11 19:14:39,456 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,456 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [300951474]
[2022-05-11 19:14:39,456 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,456 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,458 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,458 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:39,459 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,460 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:39,460 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,461 INFO  L85        PathProgramCache]: Analyzing trace with hash -1270736991, now seen corresponding path program 1 times
[2022-05-11 19:14:39,461 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,461 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1347350931]
[2022-05-11 19:14:39,461 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,461 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,476 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,476 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:39,484 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,486 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:39,486 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:39,486 INFO  L85        PathProgramCache]: Analyzing trace with hash -1338167777, now seen corresponding path program 1 times
[2022-05-11 19:14:39,486 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:39,487 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [858443293]
[2022-05-11 19:14:39,487 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:39,487 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:39,495 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,495 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:39,501 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:39,503 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:39,660 INFO  L210          LassoAnalysis]: Preferences:
[2022-05-11 19:14:39,661 INFO  L126   ssoRankerPreferences]: Compute integeral hull: false
[2022-05-11 19:14:39,661 INFO  L127   ssoRankerPreferences]: Enable LassoPartitioneer: true
[2022-05-11 19:14:39,661 INFO  L128   ssoRankerPreferences]: Term annotations enabled: false
[2022-05-11 19:14:39,661 INFO  L129   ssoRankerPreferences]: Use exernal solver: true
[2022-05-11 19:14:39,661 INFO  L130   ssoRankerPreferences]: SMT solver command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,661 INFO  L131   ssoRankerPreferences]: Dump SMT script to file: false
[2022-05-11 19:14:39,661 INFO  L132   ssoRankerPreferences]: Path of dumped script: 
[2022-05-11 19:14:39,661 INFO  L133   ssoRankerPreferences]: Filename of dumped script: Type_Conversion_in_Assignment_1_NT.c_Iteration3_Loop
[2022-05-11 19:14:39,661 INFO  L134   ssoRankerPreferences]: MapElimAlgo: Frank
[2022-05-11 19:14:39,661 INFO  L276          LassoAnalysis]: Starting lasso preprocessing...
[2022-05-11 19:14:39,669 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:39,673 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:39,677 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:39,692 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:39,695 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:39,697 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:39,847 INFO  L294          LassoAnalysis]: Preprocessing complete.
[2022-05-11 19:14:39,848 INFO  L404          LassoAnalysis]: Checking for nontermination...
[2022-05-11 19:14:39,849 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,852 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,852 INFO  L229       MonitoredProcess]: Starting monitored process 2 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,858 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (2)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,860 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 0 Nilpotent components: true
[2022-05-11 19:14:39,860 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:39,868 INFO  L437          LassoAnalysis]: Proved nontermination for one component.
[2022-05-11 19:14:39,868 INFO  L440          LassoAnalysis]: Non-Termination argument consisting of: Initial state: {ULTIMATE.start_main_#t~ret2#1=0} Honda state: {ULTIMATE.start_main_#t~ret2#1=0} Generalized eigenvectors: [] Lambdas: [] Nus: []
[2022-05-11 19:14:39,871 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (2)] Forceful destruction successful, exit code 0
[2022-05-11 19:14:39,871 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,874 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,874 INFO  L229       MonitoredProcess]: Starting monitored process 3 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,880 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (3)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,881 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 0 Nilpotent components: true
[2022-05-11 19:14:39,881 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:39,887 INFO  L437          LassoAnalysis]: Proved nontermination for one component.
[2022-05-11 19:14:39,887 INFO  L440          LassoAnalysis]: Non-Termination argument consisting of: Initial state: {ULTIMATE.start_fgetc_#t~post0#1=0} Honda state: {ULTIMATE.start_fgetc_#t~post0#1=0} Generalized eigenvectors: [] Lambdas: [] Nus: []
[2022-05-11 19:14:39,889 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (3)] Ended with exit code 0
[2022-05-11 19:14:39,890 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,892 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,893 INFO  L229       MonitoredProcess]: Starting monitored process 4 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,893 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (4)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,894 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 0 Nilpotent components: true
[2022-05-11 19:14:39,894 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:39,948 INFO  L437          LassoAnalysis]: Proved nontermination for one component.
[2022-05-11 19:14:39,948 INFO  L440          LassoAnalysis]: Non-Termination argument consisting of: Initial state: {ULTIMATE.start_fgetc_#res#1=61, ULTIMATE.start_fgetc_~c~0#1=61, ULTIMATE.start_main_~temp~0#1=61} Honda state: {ULTIMATE.start_fgetc_#res#1=61, ULTIMATE.start_fgetc_~c~0#1=61, ULTIMATE.start_main_~temp~0#1=61} Generalized eigenvectors: [] Lambdas: [] Nus: []
[2022-05-11 19:14:39,950 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (4)] Ended with exit code 0
[2022-05-11 19:14:39,951 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,953 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,954 INFO  L229       MonitoredProcess]: Starting monitored process 5 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,954 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (5)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,955 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 0 Nilpotent components: true
[2022-05-11 19:14:39,956 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:39,961 INFO  L437          LassoAnalysis]: Proved nontermination for one component.
[2022-05-11 19:14:39,961 INFO  L440          LassoAnalysis]: Non-Termination argument consisting of: Initial state: {v_rep(ite ULTIMATE.start_main_#t~switch3#1 1 0)_1=0} Honda state: {v_rep(ite ULTIMATE.start_main_#t~switch3#1 1 0)_1=0} Generalized eigenvectors: [] Lambdas: [] Nus: []
[2022-05-11 19:14:39,964 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (5)] Ended with exit code 0
[2022-05-11 19:14:39,964 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,966 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,966 INFO  L229       MonitoredProcess]: Starting monitored process 6 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,967 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (6)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,968 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 0 Nilpotent components: true
[2022-05-11 19:14:39,968 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:39,974 INFO  L437          LassoAnalysis]: Proved nontermination for one component.
[2022-05-11 19:14:39,974 INFO  L440          LassoAnalysis]: Non-Termination argument consisting of: Initial state: {ULTIMATE.start_fgetc_#t~nondet1#1=0} Honda state: {ULTIMATE.start_fgetc_#t~nondet1#1=0} Generalized eigenvectors: [] Lambdas: [] Nus: []
[2022-05-11 19:14:39,977 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (6)] Ended with exit code 0
[2022-05-11 19:14:39,978 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,980 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,981 INFO  L229       MonitoredProcess]: Starting monitored process 7 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,981 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (7)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,982 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 0 Nilpotent components: true
[2022-05-11 19:14:39,983 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:39,991 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (7)] Forceful destruction successful, exit code 0
[2022-05-11 19:14:39,991 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:39,993 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:39,994 INFO  L229       MonitoredProcess]: Starting monitored process 8 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:39,996 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (8)] Waiting until timeout for monitored process
[2022-05-11 19:14:39,997 INFO  L148   nArgumentSynthesizer]: Nontermination analysis: NONLINEAR Allow bounded executions: true Number of generalized eigenvectors: 3 Nilpotent components: true
[2022-05-11 19:14:39,997 INFO  L160   nArgumentSynthesizer]: Using integer mode.
[2022-05-11 19:14:40,008 INFO  L444          LassoAnalysis]: Proving nontermination failed: No geometric nontermination argument exists.
[2022-05-11 19:14:40,011 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (8)] Ended with exit code 0
[2022-05-11 19:14:40,011 INFO  L210          LassoAnalysis]: Preferences:
[2022-05-11 19:14:40,011 INFO  L126   ssoRankerPreferences]: Compute integeral hull: false
[2022-05-11 19:14:40,011 INFO  L127   ssoRankerPreferences]: Enable LassoPartitioneer: true
[2022-05-11 19:14:40,011 INFO  L128   ssoRankerPreferences]: Term annotations enabled: false
[2022-05-11 19:14:40,011 INFO  L129   ssoRankerPreferences]: Use exernal solver: false
[2022-05-11 19:14:40,011 INFO  L130   ssoRankerPreferences]: SMT solver command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,012 INFO  L131   ssoRankerPreferences]: Dump SMT script to file: false
[2022-05-11 19:14:40,012 INFO  L132   ssoRankerPreferences]: Path of dumped script: 
[2022-05-11 19:14:40,012 INFO  L133   ssoRankerPreferences]: Filename of dumped script: Type_Conversion_in_Assignment_1_NT.c_Iteration3_Loop
[2022-05-11 19:14:40,012 INFO  L134   ssoRankerPreferences]: MapElimAlgo: Frank
[2022-05-11 19:14:40,012 INFO  L276          LassoAnalysis]: Starting lasso preprocessing...
[2022-05-11 19:14:40,013 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:40,015 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:40,018 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:40,020 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:40,023 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:40,029 INFO  L141          MapEliminator]: Using MapEliminator with SimplificationTechnique=SIMPLIFY_DDA XnfConversionTechnique=BOTTOM_UP_WITH_LOCAL_SIMPLIFICATION AddInequalities=false OnlyTrivialImplicationsArrayWrite=true OnlyTrivialImplicationsForModifiedArguments=true OnlyArgumentsInFormula=true
[2022-05-11 19:14:40,187 INFO  L294          LassoAnalysis]: Preprocessing complete.
[2022-05-11 19:14:40,191 INFO  L490          LassoAnalysis]: Using template 'affine'.
[2022-05-11 19:14:40,191 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,194 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,194 INFO  L229       MonitoredProcess]: Starting monitored process 9 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,195 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (9)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,196 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 19:14:40,201 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 19:14:40,201 INFO  L351   nArgumentSynthesizer]: There is no stem transition; disabling supporting invariant generation.
[2022-05-11 19:14:40,201 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 19:14:40,201 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 19:14:40,201 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 19:14:40,202 INFO  L401   nArgumentSynthesizer]: We have 2 Motzkin's Theorem applications.
[2022-05-11 19:14:40,202 INFO  L402   nArgumentSynthesizer]: A total of 0 supporting invariants were added.
[2022-05-11 19:14:40,204 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 19:14:40,206 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (9)] Ended with exit code 0
[2022-05-11 19:14:40,206 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,209 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,209 INFO  L229       MonitoredProcess]: Starting monitored process 10 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,210 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (10)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,211 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 19:14:40,216 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 19:14:40,216 INFO  L351   nArgumentSynthesizer]: There is no stem transition; disabling supporting invariant generation.
[2022-05-11 19:14:40,216 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 19:14:40,216 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 19:14:40,216 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 19:14:40,216 INFO  L401   nArgumentSynthesizer]: We have 2 Motzkin's Theorem applications.
[2022-05-11 19:14:40,217 INFO  L402   nArgumentSynthesizer]: A total of 0 supporting invariants were added.
[2022-05-11 19:14:40,217 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 19:14:40,219 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (10)] Forceful destruction successful, exit code 0
[2022-05-11 19:14:40,220 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,222 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,223 INFO  L229       MonitoredProcess]: Starting monitored process 11 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,223 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (11)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,224 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 19:14:40,229 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 19:14:40,229 INFO  L351   nArgumentSynthesizer]: There is no stem transition; disabling supporting invariant generation.
[2022-05-11 19:14:40,229 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 19:14:40,229 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 19:14:40,229 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 19:14:40,229 INFO  L401   nArgumentSynthesizer]: We have 2 Motzkin's Theorem applications.
[2022-05-11 19:14:40,229 INFO  L402   nArgumentSynthesizer]: A total of 0 supporting invariants were added.
[2022-05-11 19:14:40,230 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 19:14:40,232 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (11)] Forceful destruction successful, exit code 0
[2022-05-11 19:14:40,233 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,235 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,235 INFO  L229       MonitoredProcess]: Starting monitored process 12 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,237 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (12)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,237 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 19:14:40,241 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 19:14:40,242 INFO  L351   nArgumentSynthesizer]: There is no stem transition; disabling supporting invariant generation.
[2022-05-11 19:14:40,242 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 19:14:40,242 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 19:14:40,242 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 19:14:40,242 INFO  L401   nArgumentSynthesizer]: We have 2 Motzkin's Theorem applications.
[2022-05-11 19:14:40,242 INFO  L402   nArgumentSynthesizer]: A total of 0 supporting invariants were added.
[2022-05-11 19:14:40,243 INFO  L527          LassoAnalysis]: Proving termination failed for this template and these settings.
[2022-05-11 19:14:40,246 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (12)] Ended with exit code 0
[2022-05-11 19:14:40,246 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,248 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,249 INFO  L229       MonitoredProcess]: Starting monitored process 13 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,249 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (13)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,250 INFO  L120   nArgumentSynthesizer]: Termination Analysis Settings: Termination analysis: LINEAR_WITH_GUESSESNumber of strict supporting invariants: 0Number of non-strict supporting invariants: 1Consider only non-deceasing supporting invariants: trueSimplify termination arguments: trueSimplify supporting invariants: trueOverapproximate stem: false
[2022-05-11 19:14:40,255 INFO  L338   nArgumentSynthesizer]: Template has degree 0.
[2022-05-11 19:14:40,255 INFO  L351   nArgumentSynthesizer]: There is no stem transition; disabling supporting invariant generation.
[2022-05-11 19:14:40,255 INFO  L203   nArgumentSynthesizer]: 1 stem disjuncts
[2022-05-11 19:14:40,255 INFO  L204   nArgumentSynthesizer]: 1 loop disjuncts
[2022-05-11 19:14:40,255 INFO  L205   nArgumentSynthesizer]: 2 template conjuncts.
[2022-05-11 19:14:40,256 INFO  L401   nArgumentSynthesizer]: We have 2 Motzkin's Theorem applications.
[2022-05-11 19:14:40,256 INFO  L402   nArgumentSynthesizer]: A total of 0 supporting invariants were added.
[2022-05-11 19:14:40,258 INFO  L420   nArgumentSynthesizer]: Found a termination argument, trying to simplify.
[2022-05-11 19:14:40,261 INFO  L443   ModelExtractionUtils]: Simplification made 3 calls to the SMT solver.
[2022-05-11 19:14:40,261 INFO  L444   ModelExtractionUtils]: 0 out of 3 variables were initially zero. Simplification set additionally 0 variables to zero.
[2022-05-11 19:14:40,262 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2022-05-11 19:14:40,264 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,265 INFO  L229       MonitoredProcess]: Starting monitored process 14 with /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,265 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (14)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,266 INFO  L435   nArgumentSynthesizer]: Simplifying supporting invariants...
[2022-05-11 19:14:40,266 INFO  L438   nArgumentSynthesizer]: Removed 0 redundant supporting invariants from a total of 0.
[2022-05-11 19:14:40,266 INFO  L513          LassoAnalysis]: Proved termination.
[2022-05-11 19:14:40,266 INFO  L515          LassoAnalysis]: Termination argument consisting of:
Ranking function f(~flag~0) = -2*~flag~0 + 2001
Supporting invariants []
[2022-05-11 19:14:40,269 INFO  L540       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (13)] Forceful destruction successful, exit code 0
[2022-05-11 19:14:40,270 INFO  L297   tatePredicateManager]: 0 out of 0 supporting invariants were superfluous and have been removed
[2022-05-11 19:14:40,288 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,293 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,294 INFO  L263         TraceCheckSpWp]: Trace formula consists of 5 conjuncts, 2 conjunts are in the unsatisfiable core
[2022-05-11 19:14:40,294 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:40,307 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,308 INFO  L263         TraceCheckSpWp]: Trace formula consists of 24 conjuncts, 4 conjunts are in the unsatisfiable core
[2022-05-11 19:14:40,308 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:40,383 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:40,385 INFO  L152   lantAutomatonBouncer]: Defining deterministic Buchi interpolant automaton with honda bouncer for stem and without honda bouncer for loop.1 stem predicates 2 loop predicates 
[2022-05-11 19:14:40,385 INFO  L71    iDifferenceNCSBLazy3]: Start buchiDifferenceNCSBLazy3. First operand 18 states and 22 transitions. cyclomatic complexity: 5 Second operand  has 4 states, 4 states have (on average 2.75) internal successors, (11), 4 states have internal predecessors, (11), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,403 INFO  L75    iDifferenceNCSBLazy3]: Finished buchiDifferenceNCSBLazy3. First operand 18 states and 22 transitions. cyclomatic complexity: 5. Second operand  has 4 states, 4 states have (on average 2.75) internal successors, (11), 4 states have internal predecessors, (11), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0) Result 35 states and 44 transitions. Complement of second has 4 states.
[2022-05-11 19:14:40,404 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: Buchi interpolant automaton has 3 states 1 stem states 1 non-accepting loop states 1 accepting loop states 
[2022-05-11 19:14:40,404 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 4 states, 4 states have (on average 2.75) internal successors, (11), 4 states have internal predecessors, (11), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,405 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3 states to 3 states and 18 transitions.
[2022-05-11 19:14:40,406 INFO  L84            BuchiAccepts]: Start buchiAccepts Operand 3 states and 18 transitions. Stem has 2 letters. Loop has 9 letters.
[2022-05-11 19:14:40,406 INFO  L116           BuchiAccepts]: Finished buchiAccepts.
[2022-05-11 19:14:40,406 INFO  L84            BuchiAccepts]: Start buchiAccepts Operand 3 states and 18 transitions. Stem has 11 letters. Loop has 9 letters.
[2022-05-11 19:14:40,407 INFO  L116           BuchiAccepts]: Finished buchiAccepts.
[2022-05-11 19:14:40,407 INFO  L84            BuchiAccepts]: Start buchiAccepts Operand 3 states and 18 transitions. Stem has 2 letters. Loop has 18 letters.
[2022-05-11 19:14:40,407 INFO  L116           BuchiAccepts]: Finished buchiAccepts.
[2022-05-11 19:14:40,407 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 35 states and 44 transitions.
[2022-05-11 19:14:40,408 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:40,409 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 35 states to 35 states and 44 transitions.
[2022-05-11 19:14:40,409 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 17
[2022-05-11 19:14:40,409 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 19
[2022-05-11 19:14:40,409 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 35 states and 44 transitions.
[2022-05-11 19:14:40,409 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:40,409 INFO  L681         BuchiCegarLoop]: Abstraction has 35 states and 44 transitions.
[2022-05-11 19:14:40,409 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 35 states and 44 transitions.
[2022-05-11 19:14:40,411 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 35 to 34.
[2022-05-11 19:14:40,411 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 34 states, 34 states have (on average 1.2647058823529411) internal successors, (43), 33 states have internal predecessors, (43), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,411 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 34 states to 34 states and 43 transitions.
[2022-05-11 19:14:40,412 INFO  L704         BuchiCegarLoop]: Abstraction has 34 states and 43 transitions.
[2022-05-11 19:14:40,412 INFO  L587         BuchiCegarLoop]: Abstraction has 34 states and 43 transitions.
[2022-05-11 19:14:40,412 INFO  L425         BuchiCegarLoop]: ======== Iteration 4============
[2022-05-11 19:14:40,412 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 34 states and 43 transitions.
[2022-05-11 19:14:40,412 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:40,412 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:40,412 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:40,412 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1]
[2022-05-11 19:14:40,413 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:40,413 INFO  L791   eck$LassoCheckResult]: Stem: 215#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 216#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 229#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 230#L9 
[2022-05-11 19:14:40,413 INFO  L793   eck$LassoCheckResult]: Loop: 230#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 211#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 212#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 217#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 218#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 221#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 223#L33 assume main_#t~switch3#1; 224#L26 havoc main_#t~switch3#1; 227#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 230#L9 
[2022-05-11 19:14:40,413 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,413 INFO  L85        PathProgramCache]: Analyzing trace with hash 29863, now seen corresponding path program 1 times
[2022-05-11 19:14:40,413 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,413 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1388439925]
[2022-05-11 19:14:40,413 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,413 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,415 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,415 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:40,416 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,416 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:40,417 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,417 INFO  L85        PathProgramCache]: Analyzing trace with hash 1932726320, now seen corresponding path program 1 times
[2022-05-11 19:14:40,417 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,417 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [2125457350]
[2022-05-11 19:14:40,417 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,417 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,421 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,421 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:40,423 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,424 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:40,425 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,425 INFO  L85        PathProgramCache]: Analyzing trace with hash 571766346, now seen corresponding path program 1 times
[2022-05-11 19:14:40,425 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,425 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1729397040]
[2022-05-11 19:14:40,425 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,425 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,432 INFO  L552       MonitoredProcess]: [MP /usr/bin/z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000 (14)] Ended with exit code 0
[2022-05-11 19:14:40,434 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,443 INFO  L134       CoverageAnalysis]: Checked inductivity of 1 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:40,443 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:40,443 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1729397040]
[2022-05-11 19:14:40,443 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1729397040] provided 1 perfect and 0 imperfect interpolant sequences
[2022-05-11 19:14:40,443 INFO  L186   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2022-05-11 19:14:40,443 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2022-05-11 19:14:40,443 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1960367909]
[2022-05-11 19:14:40,444 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2022-05-11 19:14:40,507 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:40,507 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2022-05-11 19:14:40,508 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2022-05-11 19:14:40,508 INFO  L87              Difference]: Start difference. First operand 34 states and 43 transitions. cyclomatic complexity: 11 Second operand  has 3 states, 3 states have (on average 4.0) internal successors, (12), 2 states have internal predecessors, (12), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,512 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:40,512 INFO  L93              Difference]: Finished difference Result 36 states and 44 transitions.
[2022-05-11 19:14:40,512 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2022-05-11 19:14:40,513 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 36 states and 44 transitions.
[2022-05-11 19:14:40,514 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:40,514 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 36 states to 35 states and 43 transitions.
[2022-05-11 19:14:40,514 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:40,514 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:40,514 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 35 states and 43 transitions.
[2022-05-11 19:14:40,515 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:40,515 INFO  L681         BuchiCegarLoop]: Abstraction has 35 states and 43 transitions.
[2022-05-11 19:14:40,515 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 35 states and 43 transitions.
[2022-05-11 19:14:40,516 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 35 to 35.
[2022-05-11 19:14:40,516 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 35 states, 35 states have (on average 1.2285714285714286) internal successors, (43), 34 states have internal predecessors, (43), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,516 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 35 states to 35 states and 43 transitions.
[2022-05-11 19:14:40,516 INFO  L704         BuchiCegarLoop]: Abstraction has 35 states and 43 transitions.
[2022-05-11 19:14:40,516 INFO  L587         BuchiCegarLoop]: Abstraction has 35 states and 43 transitions.
[2022-05-11 19:14:40,517 INFO  L425         BuchiCegarLoop]: ======== Iteration 5============
[2022-05-11 19:14:40,517 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 35 states and 43 transitions.
[2022-05-11 19:14:40,517 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:40,517 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:40,517 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:40,517 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:40,518 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:40,518 INFO  L791   eck$LassoCheckResult]: Stem: 293#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 294#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 307#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 309#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 310#L13 assume !(fgetc_~c~0#1 < 0); 312#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 313#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 322#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 320#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 316#L29 assume main_#t~switch3#1; 302#L26 
[2022-05-11 19:14:40,518 INFO  L793   eck$LassoCheckResult]: Loop: 302#L26 havoc main_#t~switch3#1; 305#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 308#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 289#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 290#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 295#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 296#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 299#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 301#L33 assume main_#t~switch3#1; 302#L26 
[2022-05-11 19:14:40,518 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,518 INFO  L85        PathProgramCache]: Analyzing trace with hash 152638930, now seen corresponding path program 1 times
[2022-05-11 19:14:40,518 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,518 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1292144862]
[2022-05-11 19:14:40,518 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,519 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,524 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,524 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:40,528 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,529 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:40,530 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,530 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 2 times
[2022-05-11 19:14:40,530 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,530 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1763419470]
[2022-05-11 19:14:40,530 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,530 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,533 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,533 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:40,536 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,536 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:40,537 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,537 INFO  L85        PathProgramCache]: Analyzing trace with hash 4799409, now seen corresponding path program 1 times
[2022-05-11 19:14:40,537 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,537 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1407268702]
[2022-05-11 19:14:40,537 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,537 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,542 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,560 INFO  L134       CoverageAnalysis]: Checked inductivity of 6 backedges. 4 proven. 2 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:40,560 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:40,561 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1407268702]
[2022-05-11 19:14:40,561 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1407268702] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:14:40,561 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [1272874577]
[2022-05-11 19:14:40,561 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,562 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:14:40,564 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,565 INFO  L229       MonitoredProcess]: Starting monitored process 15 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,566 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (15)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,591 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,591 INFO  L263         TraceCheckSpWp]: Trace formula consists of 41 conjuncts, 3 conjunts are in the unsatisfiable core
[2022-05-11 19:14:40,592 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:40,637 INFO  L134       CoverageAnalysis]: Checked inductivity of 6 backedges. 4 proven. 2 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:40,637 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:14:40,701 INFO  L134       CoverageAnalysis]: Checked inductivity of 6 backedges. 4 proven. 2 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:40,701 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [1272874577] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:14:40,701 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:14:40,701 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [3, 3, 3] total 5
[2022-05-11 19:14:40,701 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1372163815]
[2022-05-11 19:14:40,702 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:14:40,766 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:40,767 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2022-05-11 19:14:40,767 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=15, Unknown=0, NotChecked=0, Total=30
[2022-05-11 19:14:40,767 INFO  L87              Difference]: Start difference. First operand 35 states and 43 transitions. cyclomatic complexity: 10 Second operand  has 6 states, 6 states have (on average 5.333333333333333) internal successors, (32), 5 states have internal predecessors, (32), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,779 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:40,779 INFO  L93              Difference]: Finished difference Result 98 states and 124 transitions.
[2022-05-11 19:14:40,779 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2022-05-11 19:14:40,780 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 98 states and 124 transitions.
[2022-05-11 19:14:40,781 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:40,782 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 98 states to 68 states and 85 transitions.
[2022-05-11 19:14:40,782 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:40,782 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:40,782 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 68 states and 85 transitions.
[2022-05-11 19:14:40,782 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:40,782 INFO  L681         BuchiCegarLoop]: Abstraction has 68 states and 85 transitions.
[2022-05-11 19:14:40,782 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 68 states and 85 transitions.
[2022-05-11 19:14:40,785 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 68 to 68.
[2022-05-11 19:14:40,785 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 68 states, 68 states have (on average 1.25) internal successors, (85), 67 states have internal predecessors, (85), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:40,786 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 68 states to 68 states and 85 transitions.
[2022-05-11 19:14:40,786 INFO  L704         BuchiCegarLoop]: Abstraction has 68 states and 85 transitions.
[2022-05-11 19:14:40,786 INFO  L587         BuchiCegarLoop]: Abstraction has 68 states and 85 transitions.
[2022-05-11 19:14:40,786 INFO  L425         BuchiCegarLoop]: ======== Iteration 6============
[2022-05-11 19:14:40,786 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 68 states and 85 transitions.
[2022-05-11 19:14:40,787 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:40,787 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:40,787 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:40,787 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [4, 4, 4, 4, 4, 4, 4, 4, 3, 1, 1]
[2022-05-11 19:14:40,787 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:40,788 INFO  L791   eck$LassoCheckResult]: Stem: 545#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 546#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 560#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 563#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 564#L13 assume !(fgetc_~c~0#1 < 0); 590#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 589#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 587#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 588#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 581#L29 assume main_#t~switch3#1; 582#L26 havoc main_#t~switch3#1; 568#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 569#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 597#L13 assume !(fgetc_~c~0#1 < 0); 596#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 595#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 594#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 585#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 586#L29 assume main_#t~switch3#1; 579#L26 havoc main_#t~switch3#1; 580#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 591#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 565#L13 assume !(fgetc_~c~0#1 < 0); 566#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 543#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 544#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 571#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 604#L29 assume main_#t~switch3#1; 603#L26 havoc main_#t~switch3#1; 602#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 576#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 572#L13 assume !(fgetc_~c~0#1 < 0); 567#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 541#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 542#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 577#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 574#L29 assume main_#t~switch3#1; 555#L26 
[2022-05-11 19:14:40,788 INFO  L793   eck$LassoCheckResult]: Loop: 555#L26 havoc main_#t~switch3#1; 558#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 561#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 562#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 570#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 547#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 548#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 551#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 554#L33 assume main_#t~switch3#1; 555#L26 
[2022-05-11 19:14:40,788 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,788 INFO  L85        PathProgramCache]: Analyzing trace with hash -1353345296, now seen corresponding path program 1 times
[2022-05-11 19:14:40,788 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,788 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1750497865]
[2022-05-11 19:14:40,788 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,788 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,803 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,803 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:40,816 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,819 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:40,819 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,819 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 3 times
[2022-05-11 19:14:40,819 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,819 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [393880870]
[2022-05-11 19:14:40,819 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,820 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,822 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,822 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:40,824 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:40,825 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:40,825 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:40,825 INFO  L85        PathProgramCache]: Analyzing trace with hash 1076436051, now seen corresponding path program 2 times
[2022-05-11 19:14:40,825 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:40,825 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [708382761]
[2022-05-11 19:14:40,825 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:40,825 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:40,835 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,886 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 16 proven. 62 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:40,886 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:40,886 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [708382761]
[2022-05-11 19:14:40,886 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [708382761] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:14:40,887 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [492973973]
[2022-05-11 19:14:40,887 INFO  L93    rtionOrderModulation]: Changing assertion order to OUTSIDE_LOOP_FIRST1
[2022-05-11 19:14:40,887 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:14:40,889 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:40,890 INFO  L229       MonitoredProcess]: Starting monitored process 16 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:14:40,891 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (16)] Waiting until timeout for monitored process
[2022-05-11 19:14:40,926 INFO  L228   tOrderPrioritization]: Assert order OUTSIDE_LOOP_FIRST1 issued 2 check-sat command(s)
[2022-05-11 19:14:40,927 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 19:14:40,927 INFO  L263         TraceCheckSpWp]: Trace formula consists of 101 conjuncts, 6 conjunts are in the unsatisfiable core
[2022-05-11 19:14:40,928 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:41,050 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 16 proven. 62 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:41,050 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:14:41,217 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 16 proven. 62 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:41,217 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [492973973] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:14:41,217 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:14:41,217 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [6, 6, 6] total 11
[2022-05-11 19:14:41,218 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1789200178]
[2022-05-11 19:14:41,218 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:14:41,286 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:41,286 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2022-05-11 19:14:41,286 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=66, Invalid=66, Unknown=0, NotChecked=0, Total=132
[2022-05-11 19:14:41,287 INFO  L87              Difference]: Start difference. First operand 68 states and 85 transitions. cyclomatic complexity: 19 Second operand  has 12 states, 12 states have (on average 7.166666666666667) internal successors, (86), 11 states have internal predecessors, (86), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:41,314 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:41,314 INFO  L93              Difference]: Finished difference Result 194 states and 247 transitions.
[2022-05-11 19:14:41,314 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2022-05-11 19:14:41,315 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 194 states and 247 transitions.
[2022-05-11 19:14:41,317 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:41,318 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 194 states to 134 states and 169 transitions.
[2022-05-11 19:14:41,318 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:41,318 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:41,318 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 134 states and 169 transitions.
[2022-05-11 19:14:41,318 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:41,318 INFO  L681         BuchiCegarLoop]: Abstraction has 134 states and 169 transitions.
[2022-05-11 19:14:41,319 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 134 states and 169 transitions.
[2022-05-11 19:14:41,322 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 134 to 134.
[2022-05-11 19:14:41,322 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 134 states, 134 states have (on average 1.2611940298507462) internal successors, (169), 133 states have internal predecessors, (169), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:41,323 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 134 states to 134 states and 169 transitions.
[2022-05-11 19:14:41,323 INFO  L704         BuchiCegarLoop]: Abstraction has 134 states and 169 transitions.
[2022-05-11 19:14:41,323 INFO  L587         BuchiCegarLoop]: Abstraction has 134 states and 169 transitions.
[2022-05-11 19:14:41,323 INFO  L425         BuchiCegarLoop]: ======== Iteration 7============
[2022-05-11 19:14:41,324 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 134 states and 169 transitions.
[2022-05-11 19:14:41,324 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:41,324 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:41,324 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:41,326 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 10, 10, 10, 10, 10, 10, 9, 1, 1]
[2022-05-11 19:14:41,326 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:41,326 INFO  L791   eck$LassoCheckResult]: Stem: 1094#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 1095#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 1108#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1115#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1223#L13 assume !(fgetc_~c~0#1 < 0); 1222#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1221#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1220#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1219#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1216#L29 assume main_#t~switch3#1; 1215#L26 havoc main_#t~switch3#1; 1116#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1111#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1112#L13 assume !(fgetc_~c~0#1 < 0); 1113#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1092#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1093#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1098#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1099#L29 assume main_#t~switch3#1; 1101#L26 havoc main_#t~switch3#1; 1107#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1214#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1213#L13 assume !(fgetc_~c~0#1 < 0); 1212#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1211#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1210#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1209#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1206#L29 assume main_#t~switch3#1; 1205#L26 havoc main_#t~switch3#1; 1204#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1203#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1202#L13 assume !(fgetc_~c~0#1 < 0); 1201#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1200#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1199#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1198#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1195#L29 assume main_#t~switch3#1; 1194#L26 havoc main_#t~switch3#1; 1193#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1192#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1191#L13 assume !(fgetc_~c~0#1 < 0); 1190#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1189#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1188#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1187#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1184#L29 assume main_#t~switch3#1; 1183#L26 havoc main_#t~switch3#1; 1182#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1181#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1180#L13 assume !(fgetc_~c~0#1 < 0); 1179#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1178#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1177#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1176#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1173#L29 assume main_#t~switch3#1; 1172#L26 havoc main_#t~switch3#1; 1171#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1170#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1169#L13 assume !(fgetc_~c~0#1 < 0); 1168#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1167#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1166#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1165#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1162#L29 assume main_#t~switch3#1; 1161#L26 havoc main_#t~switch3#1; 1160#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1159#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1158#L13 assume !(fgetc_~c~0#1 < 0); 1157#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1156#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1155#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1154#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1151#L29 assume main_#t~switch3#1; 1150#L26 havoc main_#t~switch3#1; 1149#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1148#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1147#L13 assume !(fgetc_~c~0#1 < 0); 1146#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1144#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1142#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1132#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1133#L29 assume main_#t~switch3#1; 1126#L26 havoc main_#t~switch3#1; 1127#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1122#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 1118#L13 assume !(fgetc_~c~0#1 < 0); 1114#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 1090#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1091#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1123#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1120#L29 assume main_#t~switch3#1; 1104#L26 
[2022-05-11 19:14:41,327 INFO  L793   eck$LassoCheckResult]: Loop: 1104#L26 havoc main_#t~switch3#1; 1106#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 1109#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 1110#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 1117#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 1096#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 1097#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 1100#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 1103#L33 assume main_#t~switch3#1; 1104#L26 
[2022-05-11 19:14:41,327 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:41,327 INFO  L85        PathProgramCache]: Analyzing trace with hash 149098928, now seen corresponding path program 2 times
[2022-05-11 19:14:41,327 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:41,327 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [722347115]
[2022-05-11 19:14:41,327 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:41,328 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:41,357 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:41,357 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:41,378 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:41,383 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:41,383 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:41,383 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 4 times
[2022-05-11 19:14:41,384 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:41,384 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [400171439]
[2022-05-11 19:14:41,384 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:41,384 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:41,386 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:41,386 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:41,388 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:41,389 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:41,389 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:41,390 INFO  L85        PathProgramCache]: Analyzing trace with hash -1942373997, now seen corresponding path program 3 times
[2022-05-11 19:14:41,390 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:41,390 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1506061720]
[2022-05-11 19:14:41,390 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:41,390 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:41,406 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:41,541 INFO  L134       CoverageAnalysis]: Checked inductivity of 465 backedges. 40 proven. 425 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:41,541 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:41,541 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1506061720]
[2022-05-11 19:14:41,541 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1506061720] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:14:41,541 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [548075577]
[2022-05-11 19:14:41,541 INFO  L93    rtionOrderModulation]: Changing assertion order to OUTSIDE_LOOP_FIRST2
[2022-05-11 19:14:41,541 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:14:41,543 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:41,544 INFO  L229       MonitoredProcess]: Starting monitored process 17 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:14:41,544 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (17)] Waiting until timeout for monitored process
[2022-05-11 19:14:41,638 INFO  L228   tOrderPrioritization]: Assert order OUTSIDE_LOOP_FIRST2 issued 11 check-sat command(s)
[2022-05-11 19:14:41,639 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 19:14:41,640 INFO  L263         TraceCheckSpWp]: Trace formula consists of 221 conjuncts, 12 conjunts are in the unsatisfiable core
[2022-05-11 19:14:41,641 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:41,893 INFO  L134       CoverageAnalysis]: Checked inductivity of 465 backedges. 40 proven. 425 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:41,894 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:14:42,356 INFO  L134       CoverageAnalysis]: Checked inductivity of 465 backedges. 40 proven. 425 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:42,356 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [548075577] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:14:42,356 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:14:42,357 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [12, 12, 12] total 23
[2022-05-11 19:14:42,357 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1398578527]
[2022-05-11 19:14:42,357 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:14:42,430 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:42,431 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 24 interpolants.
[2022-05-11 19:14:42,431 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=276, Invalid=276, Unknown=0, NotChecked=0, Total=552
[2022-05-11 19:14:42,431 INFO  L87              Difference]: Start difference. First operand 134 states and 169 transitions. cyclomatic complexity: 37 Second operand  has 24 states, 24 states have (on average 8.083333333333334) internal successors, (194), 23 states have internal predecessors, (194), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:42,501 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:42,502 INFO  L93              Difference]: Finished difference Result 386 states and 493 transitions.
[2022-05-11 19:14:42,502 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 24 states. 
[2022-05-11 19:14:42,502 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 386 states and 493 transitions.
[2022-05-11 19:14:42,505 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:42,507 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 386 states to 266 states and 337 transitions.
[2022-05-11 19:14:42,507 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:42,507 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:42,507 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 266 states and 337 transitions.
[2022-05-11 19:14:42,507 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:42,507 INFO  L681         BuchiCegarLoop]: Abstraction has 266 states and 337 transitions.
[2022-05-11 19:14:42,507 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 266 states and 337 transitions.
[2022-05-11 19:14:42,513 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 266 to 266.
[2022-05-11 19:14:42,514 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 266 states, 266 states have (on average 1.2669172932330828) internal successors, (337), 265 states have internal predecessors, (337), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:42,515 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 266 states to 266 states and 337 transitions.
[2022-05-11 19:14:42,515 INFO  L704         BuchiCegarLoop]: Abstraction has 266 states and 337 transitions.
[2022-05-11 19:14:42,515 INFO  L587         BuchiCegarLoop]: Abstraction has 266 states and 337 transitions.
[2022-05-11 19:14:42,515 INFO  L425         BuchiCegarLoop]: ======== Iteration 8============
[2022-05-11 19:14:42,516 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 266 states and 337 transitions.
[2022-05-11 19:14:42,517 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:42,517 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:42,517 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:42,521 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [22, 22, 22, 22, 22, 22, 22, 22, 21, 1, 1]
[2022-05-11 19:14:42,521 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:42,521 INFO  L791   eck$LassoCheckResult]: Stem: 2237#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 2238#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 2252#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2254#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2255#L13 assume !(fgetc_~c~0#1 < 0); 2256#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2235#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2236#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2241#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2242#L29 assume main_#t~switch3#1; 2491#L26 havoc main_#t~switch3#1; 2259#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2260#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2498#L13 assume !(fgetc_~c~0#1 < 0); 2497#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2496#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2495#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2494#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2244#L29 assume main_#t~switch3#1; 2245#L26 havoc main_#t~switch3#1; 2251#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2490#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2489#L13 assume !(fgetc_~c~0#1 < 0); 2488#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2487#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2486#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2485#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2482#L29 assume main_#t~switch3#1; 2481#L26 havoc main_#t~switch3#1; 2480#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2479#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2478#L13 assume !(fgetc_~c~0#1 < 0); 2477#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2476#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2475#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2474#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2471#L29 assume main_#t~switch3#1; 2470#L26 havoc main_#t~switch3#1; 2469#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2468#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2467#L13 assume !(fgetc_~c~0#1 < 0); 2466#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2465#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2464#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2463#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2460#L29 assume main_#t~switch3#1; 2459#L26 havoc main_#t~switch3#1; 2458#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2457#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2456#L13 assume !(fgetc_~c~0#1 < 0); 2455#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2454#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2453#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2452#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2449#L29 assume main_#t~switch3#1; 2448#L26 havoc main_#t~switch3#1; 2447#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2446#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2445#L13 assume !(fgetc_~c~0#1 < 0); 2444#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2443#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2442#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2441#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2438#L29 assume main_#t~switch3#1; 2437#L26 havoc main_#t~switch3#1; 2436#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2435#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2434#L13 assume !(fgetc_~c~0#1 < 0); 2433#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2432#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2431#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2430#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2427#L29 assume main_#t~switch3#1; 2426#L26 havoc main_#t~switch3#1; 2425#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2424#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2423#L13 assume !(fgetc_~c~0#1 < 0); 2422#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2421#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2420#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2419#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2416#L29 assume main_#t~switch3#1; 2415#L26 havoc main_#t~switch3#1; 2414#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2413#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2412#L13 assume !(fgetc_~c~0#1 < 0); 2411#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2410#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2409#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2408#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2405#L29 assume main_#t~switch3#1; 2404#L26 havoc main_#t~switch3#1; 2403#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2402#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2401#L13 assume !(fgetc_~c~0#1 < 0); 2400#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2399#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2398#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2397#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2394#L29 assume main_#t~switch3#1; 2393#L26 havoc main_#t~switch3#1; 2392#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2391#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2390#L13 assume !(fgetc_~c~0#1 < 0); 2389#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2388#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2387#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2386#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2383#L29 assume main_#t~switch3#1; 2382#L26 havoc main_#t~switch3#1; 2381#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2380#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2379#L13 assume !(fgetc_~c~0#1 < 0); 2378#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2377#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2376#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2375#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2372#L29 assume main_#t~switch3#1; 2371#L26 havoc main_#t~switch3#1; 2370#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2369#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2368#L13 assume !(fgetc_~c~0#1 < 0); 2367#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2366#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2365#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2364#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2361#L29 assume main_#t~switch3#1; 2360#L26 havoc main_#t~switch3#1; 2359#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2358#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2357#L13 assume !(fgetc_~c~0#1 < 0); 2356#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2355#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2354#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2353#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2350#L29 assume main_#t~switch3#1; 2349#L26 havoc main_#t~switch3#1; 2348#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2347#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2346#L13 assume !(fgetc_~c~0#1 < 0); 2345#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2344#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2343#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2342#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2339#L29 assume main_#t~switch3#1; 2338#L26 havoc main_#t~switch3#1; 2337#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2336#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2335#L13 assume !(fgetc_~c~0#1 < 0); 2334#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2333#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2332#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2331#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2328#L29 assume main_#t~switch3#1; 2327#L26 havoc main_#t~switch3#1; 2326#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2325#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2324#L13 assume !(fgetc_~c~0#1 < 0); 2323#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2322#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2321#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2320#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2317#L29 assume main_#t~switch3#1; 2316#L26 havoc main_#t~switch3#1; 2315#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2314#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2313#L13 assume !(fgetc_~c~0#1 < 0); 2312#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2311#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2310#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2309#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2306#L29 assume main_#t~switch3#1; 2305#L26 havoc main_#t~switch3#1; 2304#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2303#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2302#L13 assume !(fgetc_~c~0#1 < 0); 2301#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2300#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2299#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2298#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2295#L29 assume main_#t~switch3#1; 2294#L26 havoc main_#t~switch3#1; 2293#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2292#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2291#L13 assume !(fgetc_~c~0#1 < 0); 2290#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2288#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2286#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2276#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2277#L29 assume main_#t~switch3#1; 2270#L26 havoc main_#t~switch3#1; 2271#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2265#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 2261#L13 assume !(fgetc_~c~0#1 < 0); 2257#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 2258#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2267#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2266#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2263#L29 assume main_#t~switch3#1; 2248#L26 
[2022-05-11 19:14:42,522 INFO  L793   eck$LassoCheckResult]: Loop: 2248#L26 havoc main_#t~switch3#1; 2250#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 2253#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 2233#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 2234#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 2239#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 2240#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 2243#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 2247#L33 assume main_#t~switch3#1; 2248#L26 
[2022-05-11 19:14:42,522 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:42,522 INFO  L85        PathProgramCache]: Analyzing trace with hash 1974163248, now seen corresponding path program 3 times
[2022-05-11 19:14:42,522 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:42,522 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [196833291]
[2022-05-11 19:14:42,522 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:42,522 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:42,580 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:42,580 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:42,638 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:42,647 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:42,647 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:42,647 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 5 times
[2022-05-11 19:14:42,647 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:42,648 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1028924890]
[2022-05-11 19:14:42,648 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:42,648 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:42,650 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:42,650 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:42,651 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:42,651 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:42,652 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:42,652 INFO  L85        PathProgramCache]: Analyzing trace with hash -257448941, now seen corresponding path program 4 times
[2022-05-11 19:14:42,652 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:42,652 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [390932654]
[2022-05-11 19:14:42,652 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:42,652 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:42,675 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:43,039 INFO  L134       CoverageAnalysis]: Checked inductivity of 2211 backedges. 88 proven. 2123 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:43,039 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:43,040 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [390932654]
[2022-05-11 19:14:43,040 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [390932654] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:14:43,040 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [411270135]
[2022-05-11 19:14:43,040 INFO  L93    rtionOrderModulation]: Changing assertion order to TERMS_WITH_SMALL_CONSTANTS_FIRST
[2022-05-11 19:14:43,040 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:14:43,042 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:43,042 INFO  L229       MonitoredProcess]: Starting monitored process 18 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:14:43,043 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (18)] Waiting until timeout for monitored process
[2022-05-11 19:14:43,136 INFO  L228   tOrderPrioritization]: Assert order TERMS_WITH_SMALL_CONSTANTS_FIRST issued 0 check-sat command(s)
[2022-05-11 19:14:43,136 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 19:14:43,137 INFO  L263         TraceCheckSpWp]: Trace formula consists of 461 conjuncts, 24 conjunts are in the unsatisfiable core
[2022-05-11 19:14:43,147 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:43,718 INFO  L134       CoverageAnalysis]: Checked inductivity of 2211 backedges. 88 proven. 2123 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:43,719 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:14:45,047 INFO  L134       CoverageAnalysis]: Checked inductivity of 2211 backedges. 88 proven. 2123 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:45,047 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [411270135] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:14:45,047 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:14:45,047 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [24, 24, 24] total 47
[2022-05-11 19:14:45,048 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [346262633]
[2022-05-11 19:14:45,048 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:14:45,111 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:45,112 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 48 interpolants.
[2022-05-11 19:14:45,112 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=1128, Invalid=1128, Unknown=0, NotChecked=0, Total=2256
[2022-05-11 19:14:45,113 INFO  L87              Difference]: Start difference. First operand 266 states and 337 transitions. cyclomatic complexity: 73 Second operand  has 48 states, 48 states have (on average 8.541666666666666) internal successors, (410), 47 states have internal predecessors, (410), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:45,279 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:45,279 INFO  L93              Difference]: Finished difference Result 770 states and 985 transitions.
[2022-05-11 19:14:45,280 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 48 states. 
[2022-05-11 19:14:45,280 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 770 states and 985 transitions.
[2022-05-11 19:14:45,285 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:45,286 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 770 states to 530 states and 673 transitions.
[2022-05-11 19:14:45,287 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:45,287 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:45,287 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 530 states and 673 transitions.
[2022-05-11 19:14:45,287 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:45,287 INFO  L681         BuchiCegarLoop]: Abstraction has 530 states and 673 transitions.
[2022-05-11 19:14:45,288 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 530 states and 673 transitions.
[2022-05-11 19:14:45,298 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 530 to 530.
[2022-05-11 19:14:45,299 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 530 states, 530 states have (on average 1.269811320754717) internal successors, (673), 529 states have internal predecessors, (673), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:45,300 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 530 states to 530 states and 673 transitions.
[2022-05-11 19:14:45,300 INFO  L704         BuchiCegarLoop]: Abstraction has 530 states and 673 transitions.
[2022-05-11 19:14:45,300 INFO  L587         BuchiCegarLoop]: Abstraction has 530 states and 673 transitions.
[2022-05-11 19:14:45,300 INFO  L425         BuchiCegarLoop]: ======== Iteration 9============
[2022-05-11 19:14:45,300 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 530 states and 673 transitions.
[2022-05-11 19:14:45,301 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:45,302 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:45,302 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:45,305 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [46, 46, 46, 46, 46, 46, 46, 46, 45, 1, 1]
[2022-05-11 19:14:45,305 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:45,306 INFO  L791   eck$LassoCheckResult]: Stem: 4568#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 4569#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 4582#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4589#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5093#L13 assume !(fgetc_~c~0#1 < 0); 5092#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5091#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5090#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5089#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5086#L29 assume main_#t~switch3#1; 5085#L26 havoc main_#t~switch3#1; 4590#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4585#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4586#L13 assume !(fgetc_~c~0#1 < 0); 4587#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4566#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4567#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4572#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4573#L29 assume main_#t~switch3#1; 4575#L26 havoc main_#t~switch3#1; 4581#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5084#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5083#L13 assume !(fgetc_~c~0#1 < 0); 5082#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5081#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5080#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5079#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5076#L29 assume main_#t~switch3#1; 5075#L26 havoc main_#t~switch3#1; 5074#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5073#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5072#L13 assume !(fgetc_~c~0#1 < 0); 5071#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5070#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5069#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5068#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5065#L29 assume main_#t~switch3#1; 5064#L26 havoc main_#t~switch3#1; 5063#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5062#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5061#L13 assume !(fgetc_~c~0#1 < 0); 5060#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5059#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5058#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5057#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5054#L29 assume main_#t~switch3#1; 5053#L26 havoc main_#t~switch3#1; 5052#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5051#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5050#L13 assume !(fgetc_~c~0#1 < 0); 5049#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5048#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5047#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5046#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5043#L29 assume main_#t~switch3#1; 5042#L26 havoc main_#t~switch3#1; 5041#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5040#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5039#L13 assume !(fgetc_~c~0#1 < 0); 5038#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5037#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5036#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5035#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5032#L29 assume main_#t~switch3#1; 5031#L26 havoc main_#t~switch3#1; 5030#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5029#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5028#L13 assume !(fgetc_~c~0#1 < 0); 5027#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5026#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5025#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5024#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5021#L29 assume main_#t~switch3#1; 5020#L26 havoc main_#t~switch3#1; 5019#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5018#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5017#L13 assume !(fgetc_~c~0#1 < 0); 5016#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5015#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5014#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5013#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 5010#L29 assume main_#t~switch3#1; 5009#L26 havoc main_#t~switch3#1; 5008#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 5007#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 5006#L13 assume !(fgetc_~c~0#1 < 0); 5005#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 5004#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 5003#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 5002#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4999#L29 assume main_#t~switch3#1; 4998#L26 havoc main_#t~switch3#1; 4997#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4996#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4995#L13 assume !(fgetc_~c~0#1 < 0); 4994#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4993#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4992#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4991#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4988#L29 assume main_#t~switch3#1; 4987#L26 havoc main_#t~switch3#1; 4986#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4985#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4984#L13 assume !(fgetc_~c~0#1 < 0); 4983#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4982#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4981#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4980#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4977#L29 assume main_#t~switch3#1; 4976#L26 havoc main_#t~switch3#1; 4975#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4974#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4973#L13 assume !(fgetc_~c~0#1 < 0); 4972#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4971#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4970#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4969#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4966#L29 assume main_#t~switch3#1; 4965#L26 havoc main_#t~switch3#1; 4964#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4963#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4962#L13 assume !(fgetc_~c~0#1 < 0); 4961#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4960#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4959#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4958#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4955#L29 assume main_#t~switch3#1; 4954#L26 havoc main_#t~switch3#1; 4953#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4952#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4951#L13 assume !(fgetc_~c~0#1 < 0); 4950#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4949#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4948#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4947#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4944#L29 assume main_#t~switch3#1; 4943#L26 havoc main_#t~switch3#1; 4942#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4941#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4940#L13 assume !(fgetc_~c~0#1 < 0); 4939#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4938#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4937#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4936#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4933#L29 assume main_#t~switch3#1; 4932#L26 havoc main_#t~switch3#1; 4931#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4930#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4929#L13 assume !(fgetc_~c~0#1 < 0); 4928#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4927#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4926#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4925#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4922#L29 assume main_#t~switch3#1; 4921#L26 havoc main_#t~switch3#1; 4920#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4919#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4918#L13 assume !(fgetc_~c~0#1 < 0); 4917#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4916#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4915#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4914#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4911#L29 assume main_#t~switch3#1; 4910#L26 havoc main_#t~switch3#1; 4909#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4908#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4907#L13 assume !(fgetc_~c~0#1 < 0); 4906#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4905#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4904#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4903#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4900#L29 assume main_#t~switch3#1; 4899#L26 havoc main_#t~switch3#1; 4898#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4897#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4896#L13 assume !(fgetc_~c~0#1 < 0); 4895#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4894#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4893#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4892#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4889#L29 assume main_#t~switch3#1; 4888#L26 havoc main_#t~switch3#1; 4887#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4886#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4885#L13 assume !(fgetc_~c~0#1 < 0); 4884#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4883#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4882#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4881#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4878#L29 assume main_#t~switch3#1; 4877#L26 havoc main_#t~switch3#1; 4876#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4875#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4874#L13 assume !(fgetc_~c~0#1 < 0); 4873#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4872#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4871#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4870#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4867#L29 assume main_#t~switch3#1; 4866#L26 havoc main_#t~switch3#1; 4865#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4864#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4863#L13 assume !(fgetc_~c~0#1 < 0); 4862#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4861#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4860#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4859#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4856#L29 assume main_#t~switch3#1; 4855#L26 havoc main_#t~switch3#1; 4854#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4853#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4852#L13 assume !(fgetc_~c~0#1 < 0); 4851#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4850#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4849#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4848#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4845#L29 assume main_#t~switch3#1; 4844#L26 havoc main_#t~switch3#1; 4843#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4842#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4841#L13 assume !(fgetc_~c~0#1 < 0); 4840#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4839#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4838#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4837#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4834#L29 assume main_#t~switch3#1; 4833#L26 havoc main_#t~switch3#1; 4832#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4831#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4830#L13 assume !(fgetc_~c~0#1 < 0); 4829#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4828#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4827#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4826#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4823#L29 assume main_#t~switch3#1; 4822#L26 havoc main_#t~switch3#1; 4821#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4820#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4819#L13 assume !(fgetc_~c~0#1 < 0); 4818#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4817#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4816#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4815#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4812#L29 assume main_#t~switch3#1; 4811#L26 havoc main_#t~switch3#1; 4810#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4809#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4808#L13 assume !(fgetc_~c~0#1 < 0); 4807#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4806#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4805#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4804#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4801#L29 assume main_#t~switch3#1; 4800#L26 havoc main_#t~switch3#1; 4799#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4798#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4797#L13 assume !(fgetc_~c~0#1 < 0); 4796#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4795#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4794#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4793#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4790#L29 assume main_#t~switch3#1; 4789#L26 havoc main_#t~switch3#1; 4788#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4787#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4786#L13 assume !(fgetc_~c~0#1 < 0); 4785#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4784#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4783#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4782#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4779#L29 assume main_#t~switch3#1; 4778#L26 havoc main_#t~switch3#1; 4777#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4776#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4775#L13 assume !(fgetc_~c~0#1 < 0); 4774#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4773#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4772#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4771#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4768#L29 assume main_#t~switch3#1; 4767#L26 havoc main_#t~switch3#1; 4766#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4765#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4764#L13 assume !(fgetc_~c~0#1 < 0); 4763#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4762#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4761#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4760#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4757#L29 assume main_#t~switch3#1; 4756#L26 havoc main_#t~switch3#1; 4755#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4754#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4753#L13 assume !(fgetc_~c~0#1 < 0); 4752#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4751#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4750#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4749#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4746#L29 assume main_#t~switch3#1; 4745#L26 havoc main_#t~switch3#1; 4744#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4743#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4742#L13 assume !(fgetc_~c~0#1 < 0); 4741#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4740#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4739#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4738#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4735#L29 assume main_#t~switch3#1; 4734#L26 havoc main_#t~switch3#1; 4733#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4732#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4731#L13 assume !(fgetc_~c~0#1 < 0); 4730#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4729#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4728#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4727#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4724#L29 assume main_#t~switch3#1; 4723#L26 havoc main_#t~switch3#1; 4722#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4721#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4720#L13 assume !(fgetc_~c~0#1 < 0); 4719#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4718#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4717#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4716#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4713#L29 assume main_#t~switch3#1; 4712#L26 havoc main_#t~switch3#1; 4711#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4710#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4709#L13 assume !(fgetc_~c~0#1 < 0); 4708#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4707#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4706#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4705#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4702#L29 assume main_#t~switch3#1; 4701#L26 havoc main_#t~switch3#1; 4700#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4699#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4698#L13 assume !(fgetc_~c~0#1 < 0); 4697#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4696#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4695#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4694#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4691#L29 assume main_#t~switch3#1; 4690#L26 havoc main_#t~switch3#1; 4689#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4688#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4687#L13 assume !(fgetc_~c~0#1 < 0); 4686#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4685#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4684#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4683#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4680#L29 assume main_#t~switch3#1; 4679#L26 havoc main_#t~switch3#1; 4678#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4677#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4676#L13 assume !(fgetc_~c~0#1 < 0); 4675#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4674#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4673#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4672#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4669#L29 assume main_#t~switch3#1; 4668#L26 havoc main_#t~switch3#1; 4667#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4666#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4665#L13 assume !(fgetc_~c~0#1 < 0); 4664#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4663#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4662#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4661#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4658#L29 assume main_#t~switch3#1; 4657#L26 havoc main_#t~switch3#1; 4656#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4655#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4654#L13 assume !(fgetc_~c~0#1 < 0); 4653#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4652#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4651#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4650#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4647#L29 assume main_#t~switch3#1; 4646#L26 havoc main_#t~switch3#1; 4645#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4644#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4643#L13 assume !(fgetc_~c~0#1 < 0); 4642#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4641#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4640#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4639#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4636#L29 assume main_#t~switch3#1; 4635#L26 havoc main_#t~switch3#1; 4634#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4633#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4632#L13 assume !(fgetc_~c~0#1 < 0); 4631#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4630#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4629#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4628#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4625#L29 assume main_#t~switch3#1; 4624#L26 havoc main_#t~switch3#1; 4623#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4622#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4621#L13 assume !(fgetc_~c~0#1 < 0); 4620#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4618#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4616#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4606#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4607#L29 assume main_#t~switch3#1; 4600#L26 havoc main_#t~switch3#1; 4601#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4596#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 4592#L13 assume !(fgetc_~c~0#1 < 0); 4588#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 4564#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4565#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4597#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4594#L29 assume main_#t~switch3#1; 4578#L26 
[2022-05-11 19:14:45,306 INFO  L793   eck$LassoCheckResult]: Loop: 4578#L26 havoc main_#t~switch3#1; 4580#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 4583#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 4584#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 4591#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 4570#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 4571#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 4574#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 4577#L33 assume main_#t~switch3#1; 4578#L26 
[2022-05-11 19:14:45,306 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:45,306 INFO  L85        PathProgramCache]: Analyzing trace with hash -146726352, now seen corresponding path program 4 times
[2022-05-11 19:14:45,306 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:45,306 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [896626552]
[2022-05-11 19:14:45,306 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:45,307 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:45,490 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:45,490 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:45,647 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:45,658 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:45,658 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:45,658 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 6 times
[2022-05-11 19:14:45,658 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:45,658 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1297066042]
[2022-05-11 19:14:45,658 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:45,658 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:45,660 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:45,660 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:45,661 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:45,662 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:45,662 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:45,662 INFO  L85        PathProgramCache]: Analyzing trace with hash -1553581805, now seen corresponding path program 5 times
[2022-05-11 19:14:45,662 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:45,662 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [551630048]
[2022-05-11 19:14:45,662 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:45,662 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:45,700 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:47,009 INFO  L134       CoverageAnalysis]: Checked inductivity of 9591 backedges. 184 proven. 9407 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:47,009 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:47,009 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [551630048]
[2022-05-11 19:14:47,009 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [551630048] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:14:47,009 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [500021692]
[2022-05-11 19:14:47,009 INFO  L93    rtionOrderModulation]: Changing assertion order to INSIDE_LOOP_FIRST1
[2022-05-11 19:14:47,010 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:14:47,011 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:14:47,012 INFO  L229       MonitoredProcess]: Starting monitored process 19 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:14:47,013 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (19)] Waiting until timeout for monitored process
[2022-05-11 19:14:47,435 INFO  L228   tOrderPrioritization]: Assert order INSIDE_LOOP_FIRST1 issued 47 check-sat command(s)
[2022-05-11 19:14:47,435 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 19:14:47,439 INFO  L263         TraceCheckSpWp]: Trace formula consists of 941 conjuncts, 48 conjunts are in the unsatisfiable core
[2022-05-11 19:14:47,443 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:14:48,477 INFO  L134       CoverageAnalysis]: Checked inductivity of 9591 backedges. 184 proven. 9407 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:48,477 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:14:52,749 INFO  L134       CoverageAnalysis]: Checked inductivity of 9591 backedges. 184 proven. 9407 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:52,749 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [500021692] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:14:52,749 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:14:52,750 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [48, 48, 48] total 95
[2022-05-11 19:14:52,750 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [784203842]
[2022-05-11 19:14:52,750 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:14:52,811 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:14:52,812 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 96 interpolants.
[2022-05-11 19:14:52,813 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=4560, Invalid=4560, Unknown=0, NotChecked=0, Total=9120
[2022-05-11 19:14:52,814 INFO  L87              Difference]: Start difference. First operand 530 states and 673 transitions. cyclomatic complexity: 145 Second operand  has 96 states, 96 states have (on average 8.770833333333334) internal successors, (842), 95 states have internal predecessors, (842), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:53,784 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:14:53,784 INFO  L93              Difference]: Finished difference Result 1538 states and 1969 transitions.
[2022-05-11 19:14:53,785 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 96 states. 
[2022-05-11 19:14:53,785 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1538 states and 1969 transitions.
[2022-05-11 19:14:53,791 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:53,794 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1538 states to 1058 states and 1345 transitions.
[2022-05-11 19:14:53,794 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:14:53,794 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:14:53,794 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1058 states and 1345 transitions.
[2022-05-11 19:14:53,795 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:14:53,795 INFO  L681         BuchiCegarLoop]: Abstraction has 1058 states and 1345 transitions.
[2022-05-11 19:14:53,795 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1058 states and 1345 transitions.
[2022-05-11 19:14:53,804 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1058 to 1058.
[2022-05-11 19:14:53,805 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1058 states, 1058 states have (on average 1.2712665406427222) internal successors, (1345), 1057 states have internal predecessors, (1345), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:14:53,807 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1058 states to 1058 states and 1345 transitions.
[2022-05-11 19:14:53,807 INFO  L704         BuchiCegarLoop]: Abstraction has 1058 states and 1345 transitions.
[2022-05-11 19:14:53,807 INFO  L587         BuchiCegarLoop]: Abstraction has 1058 states and 1345 transitions.
[2022-05-11 19:14:53,808 INFO  L425         BuchiCegarLoop]: ======== Iteration 10============
[2022-05-11 19:14:53,808 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1058 states and 1345 transitions.
[2022-05-11 19:14:53,812 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:14:53,812 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:14:53,812 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:14:53,829 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [94, 94, 94, 94, 94, 94, 94, 94, 93, 1, 1]
[2022-05-11 19:14:53,829 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:14:53,830 INFO  L791   eck$LassoCheckResult]: Stem: 9275#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 9276#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 9289#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9296#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10328#L13 assume !(fgetc_~c~0#1 < 0); 10327#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10326#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10325#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10324#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10321#L29 assume main_#t~switch3#1; 10320#L26 havoc main_#t~switch3#1; 9297#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9292#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9293#L13 assume !(fgetc_~c~0#1 < 0); 9294#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9273#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9274#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9279#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9280#L29 assume main_#t~switch3#1; 9282#L26 havoc main_#t~switch3#1; 9288#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10319#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10318#L13 assume !(fgetc_~c~0#1 < 0); 10317#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10316#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10315#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10314#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10311#L29 assume main_#t~switch3#1; 10310#L26 havoc main_#t~switch3#1; 10309#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10308#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10307#L13 assume !(fgetc_~c~0#1 < 0); 10306#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10305#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10304#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10303#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10300#L29 assume main_#t~switch3#1; 10299#L26 havoc main_#t~switch3#1; 10298#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10297#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10296#L13 assume !(fgetc_~c~0#1 < 0); 10295#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10294#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10293#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10292#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10289#L29 assume main_#t~switch3#1; 10288#L26 havoc main_#t~switch3#1; 10287#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10286#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10285#L13 assume !(fgetc_~c~0#1 < 0); 10284#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10283#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10282#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10281#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10278#L29 assume main_#t~switch3#1; 10277#L26 havoc main_#t~switch3#1; 10276#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10275#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10274#L13 assume !(fgetc_~c~0#1 < 0); 10273#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10272#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10271#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10270#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10267#L29 assume main_#t~switch3#1; 10266#L26 havoc main_#t~switch3#1; 10265#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10264#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10263#L13 assume !(fgetc_~c~0#1 < 0); 10262#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10261#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10260#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10259#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10256#L29 assume main_#t~switch3#1; 10255#L26 havoc main_#t~switch3#1; 10254#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10253#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10252#L13 assume !(fgetc_~c~0#1 < 0); 10251#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10250#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10249#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10248#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10245#L29 assume main_#t~switch3#1; 10244#L26 havoc main_#t~switch3#1; 10243#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10242#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10241#L13 assume !(fgetc_~c~0#1 < 0); 10240#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10239#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10238#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10237#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10234#L29 assume main_#t~switch3#1; 10233#L26 havoc main_#t~switch3#1; 10232#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10231#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10230#L13 assume !(fgetc_~c~0#1 < 0); 10229#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10228#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10227#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10226#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10223#L29 assume main_#t~switch3#1; 10222#L26 havoc main_#t~switch3#1; 10221#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10220#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10219#L13 assume !(fgetc_~c~0#1 < 0); 10218#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10217#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10216#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10215#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10212#L29 assume main_#t~switch3#1; 10211#L26 havoc main_#t~switch3#1; 10210#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10209#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10208#L13 assume !(fgetc_~c~0#1 < 0); 10207#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10206#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10205#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10204#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10201#L29 assume main_#t~switch3#1; 10200#L26 havoc main_#t~switch3#1; 10199#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10198#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10197#L13 assume !(fgetc_~c~0#1 < 0); 10196#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10195#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10194#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10193#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10190#L29 assume main_#t~switch3#1; 10189#L26 havoc main_#t~switch3#1; 10188#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10187#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10186#L13 assume !(fgetc_~c~0#1 < 0); 10185#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10184#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10183#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10182#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10179#L29 assume main_#t~switch3#1; 10178#L26 havoc main_#t~switch3#1; 10177#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10176#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10175#L13 assume !(fgetc_~c~0#1 < 0); 10174#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10173#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10172#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10171#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10168#L29 assume main_#t~switch3#1; 10167#L26 havoc main_#t~switch3#1; 10166#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10165#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10164#L13 assume !(fgetc_~c~0#1 < 0); 10163#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10162#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10161#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10160#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10157#L29 assume main_#t~switch3#1; 10156#L26 havoc main_#t~switch3#1; 10155#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10154#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10153#L13 assume !(fgetc_~c~0#1 < 0); 10152#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10151#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10150#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10149#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10146#L29 assume main_#t~switch3#1; 10145#L26 havoc main_#t~switch3#1; 10144#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10143#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10142#L13 assume !(fgetc_~c~0#1 < 0); 10141#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10140#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10139#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10138#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10135#L29 assume main_#t~switch3#1; 10134#L26 havoc main_#t~switch3#1; 10133#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10132#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10131#L13 assume !(fgetc_~c~0#1 < 0); 10130#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10129#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10128#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10127#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10124#L29 assume main_#t~switch3#1; 10123#L26 havoc main_#t~switch3#1; 10122#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10121#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10120#L13 assume !(fgetc_~c~0#1 < 0); 10119#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10118#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10117#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10116#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10113#L29 assume main_#t~switch3#1; 10112#L26 havoc main_#t~switch3#1; 10111#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10110#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10109#L13 assume !(fgetc_~c~0#1 < 0); 10108#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10107#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10106#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10105#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10102#L29 assume main_#t~switch3#1; 10101#L26 havoc main_#t~switch3#1; 10100#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10099#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10098#L13 assume !(fgetc_~c~0#1 < 0); 10097#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10096#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10095#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10094#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10091#L29 assume main_#t~switch3#1; 10090#L26 havoc main_#t~switch3#1; 10089#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10088#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10087#L13 assume !(fgetc_~c~0#1 < 0); 10086#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10085#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10084#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10083#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10080#L29 assume main_#t~switch3#1; 10079#L26 havoc main_#t~switch3#1; 10078#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10077#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10076#L13 assume !(fgetc_~c~0#1 < 0); 10075#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10074#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10073#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10072#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10069#L29 assume main_#t~switch3#1; 10068#L26 havoc main_#t~switch3#1; 10067#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10066#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10065#L13 assume !(fgetc_~c~0#1 < 0); 10064#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10063#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10062#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10061#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10058#L29 assume main_#t~switch3#1; 10057#L26 havoc main_#t~switch3#1; 10056#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10055#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10054#L13 assume !(fgetc_~c~0#1 < 0); 10053#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10052#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10051#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10050#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10047#L29 assume main_#t~switch3#1; 10046#L26 havoc main_#t~switch3#1; 10045#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10044#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10043#L13 assume !(fgetc_~c~0#1 < 0); 10042#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10041#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10040#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10039#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10036#L29 assume main_#t~switch3#1; 10035#L26 havoc main_#t~switch3#1; 10034#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10033#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10032#L13 assume !(fgetc_~c~0#1 < 0); 10031#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10030#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10029#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10028#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10025#L29 assume main_#t~switch3#1; 10024#L26 havoc main_#t~switch3#1; 10023#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10022#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10021#L13 assume !(fgetc_~c~0#1 < 0); 10020#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10019#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10018#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10017#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10014#L29 assume main_#t~switch3#1; 10013#L26 havoc main_#t~switch3#1; 10012#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10011#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 10010#L13 assume !(fgetc_~c~0#1 < 0); 10009#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 10008#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 10007#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 10006#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 10003#L29 assume main_#t~switch3#1; 10002#L26 havoc main_#t~switch3#1; 10001#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 10000#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9999#L13 assume !(fgetc_~c~0#1 < 0); 9998#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9997#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9996#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9995#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9992#L29 assume main_#t~switch3#1; 9991#L26 havoc main_#t~switch3#1; 9990#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9989#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9988#L13 assume !(fgetc_~c~0#1 < 0); 9987#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9986#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9985#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9984#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9981#L29 assume main_#t~switch3#1; 9980#L26 havoc main_#t~switch3#1; 9979#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9978#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9977#L13 assume !(fgetc_~c~0#1 < 0); 9976#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9975#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9974#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9973#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9970#L29 assume main_#t~switch3#1; 9969#L26 havoc main_#t~switch3#1; 9968#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9967#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9966#L13 assume !(fgetc_~c~0#1 < 0); 9965#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9964#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9963#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9962#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9959#L29 assume main_#t~switch3#1; 9958#L26 havoc main_#t~switch3#1; 9957#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9956#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9955#L13 assume !(fgetc_~c~0#1 < 0); 9954#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9953#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9952#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9951#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9948#L29 assume main_#t~switch3#1; 9947#L26 havoc main_#t~switch3#1; 9946#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9945#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9944#L13 assume !(fgetc_~c~0#1 < 0); 9943#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9942#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9941#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9940#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9937#L29 assume main_#t~switch3#1; 9936#L26 havoc main_#t~switch3#1; 9935#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9934#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9933#L13 assume !(fgetc_~c~0#1 < 0); 9932#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9931#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9930#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9929#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9926#L29 assume main_#t~switch3#1; 9925#L26 havoc main_#t~switch3#1; 9924#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9923#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9922#L13 assume !(fgetc_~c~0#1 < 0); 9921#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9920#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9919#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9918#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9915#L29 assume main_#t~switch3#1; 9914#L26 havoc main_#t~switch3#1; 9913#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9912#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9911#L13 assume !(fgetc_~c~0#1 < 0); 9910#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9909#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9908#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9907#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9904#L29 assume main_#t~switch3#1; 9903#L26 havoc main_#t~switch3#1; 9902#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9901#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9900#L13 assume !(fgetc_~c~0#1 < 0); 9899#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9898#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9897#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9896#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9893#L29 assume main_#t~switch3#1; 9892#L26 havoc main_#t~switch3#1; 9891#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9890#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9889#L13 assume !(fgetc_~c~0#1 < 0); 9888#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9887#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9886#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9885#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9882#L29 assume main_#t~switch3#1; 9881#L26 havoc main_#t~switch3#1; 9880#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9879#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9878#L13 assume !(fgetc_~c~0#1 < 0); 9877#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9876#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9875#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9874#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9871#L29 assume main_#t~switch3#1; 9870#L26 havoc main_#t~switch3#1; 9869#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9868#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9867#L13 assume !(fgetc_~c~0#1 < 0); 9866#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9865#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9864#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9863#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9860#L29 assume main_#t~switch3#1; 9859#L26 havoc main_#t~switch3#1; 9858#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9857#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9856#L13 assume !(fgetc_~c~0#1 < 0); 9855#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9854#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9853#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9852#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9849#L29 assume main_#t~switch3#1; 9848#L26 havoc main_#t~switch3#1; 9847#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9846#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9845#L13 assume !(fgetc_~c~0#1 < 0); 9844#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9843#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9842#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9841#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9838#L29 assume main_#t~switch3#1; 9837#L26 havoc main_#t~switch3#1; 9836#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9835#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9834#L13 assume !(fgetc_~c~0#1 < 0); 9833#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9832#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9831#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9830#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9827#L29 assume main_#t~switch3#1; 9826#L26 havoc main_#t~switch3#1; 9825#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9824#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9823#L13 assume !(fgetc_~c~0#1 < 0); 9822#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9821#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9820#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9819#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9816#L29 assume main_#t~switch3#1; 9815#L26 havoc main_#t~switch3#1; 9814#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9813#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9812#L13 assume !(fgetc_~c~0#1 < 0); 9811#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9810#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9809#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9808#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9805#L29 assume main_#t~switch3#1; 9804#L26 havoc main_#t~switch3#1; 9803#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9802#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9801#L13 assume !(fgetc_~c~0#1 < 0); 9800#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9799#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9798#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9797#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9794#L29 assume main_#t~switch3#1; 9793#L26 havoc main_#t~switch3#1; 9792#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9791#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9790#L13 assume !(fgetc_~c~0#1 < 0); 9789#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9788#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9787#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9786#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9783#L29 assume main_#t~switch3#1; 9782#L26 havoc main_#t~switch3#1; 9781#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9780#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9779#L13 assume !(fgetc_~c~0#1 < 0); 9778#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9777#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9776#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9775#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9772#L29 assume main_#t~switch3#1; 9771#L26 havoc main_#t~switch3#1; 9770#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9769#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9768#L13 assume !(fgetc_~c~0#1 < 0); 9767#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9766#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9765#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9764#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9761#L29 assume main_#t~switch3#1; 9760#L26 havoc main_#t~switch3#1; 9759#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9758#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9757#L13 assume !(fgetc_~c~0#1 < 0); 9756#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9755#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9754#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9753#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9750#L29 assume main_#t~switch3#1; 9749#L26 havoc main_#t~switch3#1; 9748#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9747#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9746#L13 assume !(fgetc_~c~0#1 < 0); 9745#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9744#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9743#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9742#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9739#L29 assume main_#t~switch3#1; 9738#L26 havoc main_#t~switch3#1; 9737#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9736#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9735#L13 assume !(fgetc_~c~0#1 < 0); 9734#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9733#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9732#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9731#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9728#L29 assume main_#t~switch3#1; 9727#L26 havoc main_#t~switch3#1; 9726#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9725#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9724#L13 assume !(fgetc_~c~0#1 < 0); 9723#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9722#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9721#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9720#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9717#L29 assume main_#t~switch3#1; 9716#L26 havoc main_#t~switch3#1; 9715#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9714#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9713#L13 assume !(fgetc_~c~0#1 < 0); 9712#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9711#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9710#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9709#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9706#L29 assume main_#t~switch3#1; 9705#L26 havoc main_#t~switch3#1; 9704#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9703#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9702#L13 assume !(fgetc_~c~0#1 < 0); 9701#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9700#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9699#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9698#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9695#L29 assume main_#t~switch3#1; 9694#L26 havoc main_#t~switch3#1; 9693#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9692#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9691#L13 assume !(fgetc_~c~0#1 < 0); 9690#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9689#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9688#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9687#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9684#L29 assume main_#t~switch3#1; 9683#L26 havoc main_#t~switch3#1; 9682#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9681#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9680#L13 assume !(fgetc_~c~0#1 < 0); 9679#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9678#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9677#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9676#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9673#L29 assume main_#t~switch3#1; 9672#L26 havoc main_#t~switch3#1; 9671#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9670#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9669#L13 assume !(fgetc_~c~0#1 < 0); 9668#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9667#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9666#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9665#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9662#L29 assume main_#t~switch3#1; 9661#L26 havoc main_#t~switch3#1; 9660#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9659#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9658#L13 assume !(fgetc_~c~0#1 < 0); 9657#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9656#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9655#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9654#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9651#L29 assume main_#t~switch3#1; 9650#L26 havoc main_#t~switch3#1; 9649#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9648#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9647#L13 assume !(fgetc_~c~0#1 < 0); 9646#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9645#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9644#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9643#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9640#L29 assume main_#t~switch3#1; 9639#L26 havoc main_#t~switch3#1; 9638#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9637#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9636#L13 assume !(fgetc_~c~0#1 < 0); 9635#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9634#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9633#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9632#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9629#L29 assume main_#t~switch3#1; 9628#L26 havoc main_#t~switch3#1; 9627#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9626#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9625#L13 assume !(fgetc_~c~0#1 < 0); 9624#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9623#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9622#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9621#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9618#L29 assume main_#t~switch3#1; 9617#L26 havoc main_#t~switch3#1; 9616#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9615#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9614#L13 assume !(fgetc_~c~0#1 < 0); 9613#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9612#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9611#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9610#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9607#L29 assume main_#t~switch3#1; 9606#L26 havoc main_#t~switch3#1; 9605#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9604#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9603#L13 assume !(fgetc_~c~0#1 < 0); 9602#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9601#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9600#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9599#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9596#L29 assume main_#t~switch3#1; 9595#L26 havoc main_#t~switch3#1; 9594#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9593#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9592#L13 assume !(fgetc_~c~0#1 < 0); 9591#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9590#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9589#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9588#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9585#L29 assume main_#t~switch3#1; 9584#L26 havoc main_#t~switch3#1; 9583#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9582#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9581#L13 assume !(fgetc_~c~0#1 < 0); 9580#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9579#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9578#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9577#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9574#L29 assume main_#t~switch3#1; 9573#L26 havoc main_#t~switch3#1; 9572#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9571#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9570#L13 assume !(fgetc_~c~0#1 < 0); 9569#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9568#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9567#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9566#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9563#L29 assume main_#t~switch3#1; 9562#L26 havoc main_#t~switch3#1; 9561#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9560#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9559#L13 assume !(fgetc_~c~0#1 < 0); 9558#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9557#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9556#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9555#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9552#L29 assume main_#t~switch3#1; 9551#L26 havoc main_#t~switch3#1; 9550#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9549#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9548#L13 assume !(fgetc_~c~0#1 < 0); 9547#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9546#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9545#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9544#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9541#L29 assume main_#t~switch3#1; 9540#L26 havoc main_#t~switch3#1; 9539#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9538#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9537#L13 assume !(fgetc_~c~0#1 < 0); 9536#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9535#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9534#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9533#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9530#L29 assume main_#t~switch3#1; 9529#L26 havoc main_#t~switch3#1; 9528#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9527#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9526#L13 assume !(fgetc_~c~0#1 < 0); 9525#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9524#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9523#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9522#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9519#L29 assume main_#t~switch3#1; 9518#L26 havoc main_#t~switch3#1; 9517#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9516#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9515#L13 assume !(fgetc_~c~0#1 < 0); 9514#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9513#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9512#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9511#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9508#L29 assume main_#t~switch3#1; 9507#L26 havoc main_#t~switch3#1; 9506#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9505#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9504#L13 assume !(fgetc_~c~0#1 < 0); 9503#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9502#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9501#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9500#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9497#L29 assume main_#t~switch3#1; 9496#L26 havoc main_#t~switch3#1; 9495#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9494#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9493#L13 assume !(fgetc_~c~0#1 < 0); 9492#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9491#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9490#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9489#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9486#L29 assume main_#t~switch3#1; 9485#L26 havoc main_#t~switch3#1; 9484#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9483#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9482#L13 assume !(fgetc_~c~0#1 < 0); 9481#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9480#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9479#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9478#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9475#L29 assume main_#t~switch3#1; 9474#L26 havoc main_#t~switch3#1; 9473#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9472#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9471#L13 assume !(fgetc_~c~0#1 < 0); 9470#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9469#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9468#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9467#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9464#L29 assume main_#t~switch3#1; 9463#L26 havoc main_#t~switch3#1; 9462#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9461#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9460#L13 assume !(fgetc_~c~0#1 < 0); 9459#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9458#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9457#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9456#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9453#L29 assume main_#t~switch3#1; 9452#L26 havoc main_#t~switch3#1; 9451#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9450#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9449#L13 assume !(fgetc_~c~0#1 < 0); 9448#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9447#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9446#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9445#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9442#L29 assume main_#t~switch3#1; 9441#L26 havoc main_#t~switch3#1; 9440#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9439#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9438#L13 assume !(fgetc_~c~0#1 < 0); 9437#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9436#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9435#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9434#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9431#L29 assume main_#t~switch3#1; 9430#L26 havoc main_#t~switch3#1; 9429#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9428#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9427#L13 assume !(fgetc_~c~0#1 < 0); 9426#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9425#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9424#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9423#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9420#L29 assume main_#t~switch3#1; 9419#L26 havoc main_#t~switch3#1; 9418#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9417#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9416#L13 assume !(fgetc_~c~0#1 < 0); 9415#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9414#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9413#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9412#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9409#L29 assume main_#t~switch3#1; 9408#L26 havoc main_#t~switch3#1; 9407#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9406#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9405#L13 assume !(fgetc_~c~0#1 < 0); 9404#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9403#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9402#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9401#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9398#L29 assume main_#t~switch3#1; 9397#L26 havoc main_#t~switch3#1; 9396#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9395#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9394#L13 assume !(fgetc_~c~0#1 < 0); 9393#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9392#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9391#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9390#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9387#L29 assume main_#t~switch3#1; 9386#L26 havoc main_#t~switch3#1; 9385#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9384#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9383#L13 assume !(fgetc_~c~0#1 < 0); 9382#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9381#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9380#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9379#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9376#L29 assume main_#t~switch3#1; 9375#L26 havoc main_#t~switch3#1; 9374#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9373#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9372#L13 assume !(fgetc_~c~0#1 < 0); 9371#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9370#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9369#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9368#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9365#L29 assume main_#t~switch3#1; 9364#L26 havoc main_#t~switch3#1; 9363#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9362#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9361#L13 assume !(fgetc_~c~0#1 < 0); 9360#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9359#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9358#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9357#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9354#L29 assume main_#t~switch3#1; 9353#L26 havoc main_#t~switch3#1; 9352#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9351#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9350#L13 assume !(fgetc_~c~0#1 < 0); 9349#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9348#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9347#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9346#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9343#L29 assume main_#t~switch3#1; 9342#L26 havoc main_#t~switch3#1; 9341#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9340#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9339#L13 assume !(fgetc_~c~0#1 < 0); 9338#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9337#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9336#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9335#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9332#L29 assume main_#t~switch3#1; 9331#L26 havoc main_#t~switch3#1; 9330#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9329#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9328#L13 assume !(fgetc_~c~0#1 < 0); 9327#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9325#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9323#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9313#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9314#L29 assume main_#t~switch3#1; 9307#L26 havoc main_#t~switch3#1; 9308#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9303#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 9299#L13 assume !(fgetc_~c~0#1 < 0); 9295#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 9271#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9272#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9304#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9301#L29 assume main_#t~switch3#1; 9285#L26 
[2022-05-11 19:14:53,854 INFO  L793   eck$LassoCheckResult]: Loop: 9285#L26 havoc main_#t~switch3#1; 9287#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 9290#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 9291#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 9298#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 9277#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 9278#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 9281#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 9284#L33 assume main_#t~switch3#1; 9285#L26 
[2022-05-11 19:14:53,854 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:53,854 INFO  L85        PathProgramCache]: Analyzing trace with hash -587089872, now seen corresponding path program 5 times
[2022-05-11 19:14:53,854 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:53,854 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [753473663]
[2022-05-11 19:14:53,855 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:53,855 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:54,496 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:54,496 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:55,023 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:55,041 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:55,042 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:55,042 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 7 times
[2022-05-11 19:14:55,042 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:55,042 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [412773957]
[2022-05-11 19:14:55,042 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:55,042 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:55,043 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:55,044 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:14:55,044 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:14:55,045 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:14:55,045 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:14:55,046 INFO  L85        PathProgramCache]: Analyzing trace with hash 1039033107, now seen corresponding path program 6 times
[2022-05-11 19:14:55,046 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:14:55,046 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [608534061]
[2022-05-11 19:14:55,046 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:14:55,046 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:14:55,159 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:14:59,977 INFO  L134       CoverageAnalysis]: Checked inductivity of 39903 backedges. 376 proven. 39527 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:14:59,977 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:14:59,977 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [608534061]
[2022-05-11 19:14:59,977 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [608534061] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:14:59,977 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [1203579214]
[2022-05-11 19:14:59,978 INFO  L93    rtionOrderModulation]: Changing assertion order to MIX_INSIDE_OUTSIDE
[2022-05-11 19:14:59,978 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:14:59,980 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:15:00,009 INFO  L229       MonitoredProcess]: Starting monitored process 20 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:15:00,010 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (20)] Waiting until timeout for monitored process
[2022-05-11 19:15:01,355 INFO  L228   tOrderPrioritization]: Assert order MIX_INSIDE_OUTSIDE issued 95 check-sat command(s)
[2022-05-11 19:15:01,355 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 19:15:01,362 INFO  L263         TraceCheckSpWp]: Trace formula consists of 1901 conjuncts, 96 conjunts are in the unsatisfiable core
[2022-05-11 19:15:01,370 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:15:03,515 INFO  L134       CoverageAnalysis]: Checked inductivity of 39903 backedges. 376 proven. 39527 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:15:03,516 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:15:18,754 INFO  L134       CoverageAnalysis]: Checked inductivity of 39903 backedges. 376 proven. 39527 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:15:18,755 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [1203579214] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:15:18,755 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:15:18,755 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [96, 96, 96] total 191
[2022-05-11 19:15:18,755 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [468572842]
[2022-05-11 19:15:18,755 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:15:18,816 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:15:18,819 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 192 interpolants.
[2022-05-11 19:15:18,825 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=18336, Invalid=18336, Unknown=0, NotChecked=0, Total=36672
[2022-05-11 19:15:18,826 INFO  L87              Difference]: Start difference. First operand 1058 states and 1345 transitions. cyclomatic complexity: 289 Second operand  has 192 states, 192 states have (on average 8.885416666666666) internal successors, (1706), 191 states have internal predecessors, (1706), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:15:30,423 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:15:30,423 INFO  L93              Difference]: Finished difference Result 3074 states and 3937 transitions.
[2022-05-11 19:15:30,423 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 192 states. 
[2022-05-11 19:15:30,424 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3074 states and 3937 transitions.
[2022-05-11 19:15:30,434 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:15:30,439 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3074 states to 2114 states and 2689 transitions.
[2022-05-11 19:15:30,439 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:15:30,439 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:15:30,439 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2114 states and 2689 transitions.
[2022-05-11 19:15:30,440 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:15:30,440 INFO  L681         BuchiCegarLoop]: Abstraction has 2114 states and 2689 transitions.
[2022-05-11 19:15:30,441 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2114 states and 2689 transitions.
[2022-05-11 19:15:30,459 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2114 to 2114.
[2022-05-11 19:15:30,462 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 2114 states, 2114 states have (on average 1.271996215704825) internal successors, (2689), 2113 states have internal predecessors, (2689), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:15:30,466 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2114 states to 2114 states and 2689 transitions.
[2022-05-11 19:15:30,466 INFO  L704         BuchiCegarLoop]: Abstraction has 2114 states and 2689 transitions.
[2022-05-11 19:15:30,466 INFO  L587         BuchiCegarLoop]: Abstraction has 2114 states and 2689 transitions.
[2022-05-11 19:15:30,466 INFO  L425         BuchiCegarLoop]: ======== Iteration 11============
[2022-05-11 19:15:30,466 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2114 states and 2689 transitions.
[2022-05-11 19:15:30,473 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:15:30,473 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:15:30,473 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:15:30,484 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [190, 190, 190, 190, 190, 190, 190, 190, 189, 1, 1]
[2022-05-11 19:15:30,485 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:15:30,486 INFO  L791   eck$LassoCheckResult]: Stem: 18734#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 18735#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 18748#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18755#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20843#L13 assume !(fgetc_~c~0#1 < 0); 20842#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20841#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20840#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20839#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20836#L29 assume main_#t~switch3#1; 20835#L26 havoc main_#t~switch3#1; 18756#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18751#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18752#L13 assume !(fgetc_~c~0#1 < 0); 18753#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18732#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18733#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18738#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18739#L29 assume main_#t~switch3#1; 18741#L26 havoc main_#t~switch3#1; 18747#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20834#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20833#L13 assume !(fgetc_~c~0#1 < 0); 20832#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20831#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20830#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20829#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20826#L29 assume main_#t~switch3#1; 20825#L26 havoc main_#t~switch3#1; 20824#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20823#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20822#L13 assume !(fgetc_~c~0#1 < 0); 20821#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20820#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20819#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20818#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20815#L29 assume main_#t~switch3#1; 20814#L26 havoc main_#t~switch3#1; 20813#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20812#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20811#L13 assume !(fgetc_~c~0#1 < 0); 20810#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20809#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20808#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20807#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20804#L29 assume main_#t~switch3#1; 20803#L26 havoc main_#t~switch3#1; 20802#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20801#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20800#L13 assume !(fgetc_~c~0#1 < 0); 20799#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20798#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20797#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20796#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20793#L29 assume main_#t~switch3#1; 20792#L26 havoc main_#t~switch3#1; 20791#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20790#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20789#L13 assume !(fgetc_~c~0#1 < 0); 20788#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20787#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20786#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20785#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20782#L29 assume main_#t~switch3#1; 20781#L26 havoc main_#t~switch3#1; 20780#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20779#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20778#L13 assume !(fgetc_~c~0#1 < 0); 20777#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20776#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20775#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20774#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20771#L29 assume main_#t~switch3#1; 20770#L26 havoc main_#t~switch3#1; 20769#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20768#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20767#L13 assume !(fgetc_~c~0#1 < 0); 20766#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20765#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20764#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20763#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20760#L29 assume main_#t~switch3#1; 20759#L26 havoc main_#t~switch3#1; 20758#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20757#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20756#L13 assume !(fgetc_~c~0#1 < 0); 20755#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20754#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20753#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20752#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20749#L29 assume main_#t~switch3#1; 20748#L26 havoc main_#t~switch3#1; 20747#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20746#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20745#L13 assume !(fgetc_~c~0#1 < 0); 20744#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20743#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20742#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20741#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20738#L29 assume main_#t~switch3#1; 20737#L26 havoc main_#t~switch3#1; 20736#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20735#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20734#L13 assume !(fgetc_~c~0#1 < 0); 20733#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20732#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20731#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20730#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20727#L29 assume main_#t~switch3#1; 20726#L26 havoc main_#t~switch3#1; 20725#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20724#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20723#L13 assume !(fgetc_~c~0#1 < 0); 20722#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20721#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20720#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20719#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20716#L29 assume main_#t~switch3#1; 20715#L26 havoc main_#t~switch3#1; 20714#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20713#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20712#L13 assume !(fgetc_~c~0#1 < 0); 20711#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20710#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20709#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20708#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20705#L29 assume main_#t~switch3#1; 20704#L26 havoc main_#t~switch3#1; 20703#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20702#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20701#L13 assume !(fgetc_~c~0#1 < 0); 20700#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20699#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20698#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20697#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20694#L29 assume main_#t~switch3#1; 20693#L26 havoc main_#t~switch3#1; 20692#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20691#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20690#L13 assume !(fgetc_~c~0#1 < 0); 20689#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20688#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20687#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20686#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20683#L29 assume main_#t~switch3#1; 20682#L26 havoc main_#t~switch3#1; 20681#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20680#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20679#L13 assume !(fgetc_~c~0#1 < 0); 20678#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20677#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20676#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20675#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20672#L29 assume main_#t~switch3#1; 20671#L26 havoc main_#t~switch3#1; 20670#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20669#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20668#L13 assume !(fgetc_~c~0#1 < 0); 20667#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20666#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20665#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20664#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20661#L29 assume main_#t~switch3#1; 20660#L26 havoc main_#t~switch3#1; 20659#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20658#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20657#L13 assume !(fgetc_~c~0#1 < 0); 20656#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20655#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20654#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20653#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20650#L29 assume main_#t~switch3#1; 20649#L26 havoc main_#t~switch3#1; 20648#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20647#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20646#L13 assume !(fgetc_~c~0#1 < 0); 20645#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20644#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20643#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20642#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20639#L29 assume main_#t~switch3#1; 20638#L26 havoc main_#t~switch3#1; 20637#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20636#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20635#L13 assume !(fgetc_~c~0#1 < 0); 20634#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20633#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20632#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20631#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20628#L29 assume main_#t~switch3#1; 20627#L26 havoc main_#t~switch3#1; 20626#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20625#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20624#L13 assume !(fgetc_~c~0#1 < 0); 20623#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20622#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20621#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20620#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20617#L29 assume main_#t~switch3#1; 20616#L26 havoc main_#t~switch3#1; 20615#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20614#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20613#L13 assume !(fgetc_~c~0#1 < 0); 20612#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20611#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20610#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20609#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20606#L29 assume main_#t~switch3#1; 20605#L26 havoc main_#t~switch3#1; 20604#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20603#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20602#L13 assume !(fgetc_~c~0#1 < 0); 20601#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20600#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20599#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20598#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20595#L29 assume main_#t~switch3#1; 20594#L26 havoc main_#t~switch3#1; 20593#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20592#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20591#L13 assume !(fgetc_~c~0#1 < 0); 20590#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20589#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20588#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20587#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20584#L29 assume main_#t~switch3#1; 20583#L26 havoc main_#t~switch3#1; 20582#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20581#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20580#L13 assume !(fgetc_~c~0#1 < 0); 20579#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20578#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20577#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20576#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20573#L29 assume main_#t~switch3#1; 20572#L26 havoc main_#t~switch3#1; 20571#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20570#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20569#L13 assume !(fgetc_~c~0#1 < 0); 20568#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20567#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20566#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20565#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20562#L29 assume main_#t~switch3#1; 20561#L26 havoc main_#t~switch3#1; 20560#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20559#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20558#L13 assume !(fgetc_~c~0#1 < 0); 20557#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20556#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20555#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20554#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20551#L29 assume main_#t~switch3#1; 20550#L26 havoc main_#t~switch3#1; 20549#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20548#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20547#L13 assume !(fgetc_~c~0#1 < 0); 20546#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20545#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20544#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20543#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20540#L29 assume main_#t~switch3#1; 20539#L26 havoc main_#t~switch3#1; 20538#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20537#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20536#L13 assume !(fgetc_~c~0#1 < 0); 20535#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20534#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20533#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20532#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20529#L29 assume main_#t~switch3#1; 20528#L26 havoc main_#t~switch3#1; 20527#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20526#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20525#L13 assume !(fgetc_~c~0#1 < 0); 20524#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20523#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20522#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20521#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20518#L29 assume main_#t~switch3#1; 20517#L26 havoc main_#t~switch3#1; 20516#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20515#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20514#L13 assume !(fgetc_~c~0#1 < 0); 20513#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20512#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20511#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20510#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20507#L29 assume main_#t~switch3#1; 20506#L26 havoc main_#t~switch3#1; 20505#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20504#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20503#L13 assume !(fgetc_~c~0#1 < 0); 20502#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20501#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20500#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20499#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20496#L29 assume main_#t~switch3#1; 20495#L26 havoc main_#t~switch3#1; 20494#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20493#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20492#L13 assume !(fgetc_~c~0#1 < 0); 20491#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20490#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20489#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20488#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20485#L29 assume main_#t~switch3#1; 20484#L26 havoc main_#t~switch3#1; 20483#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20482#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20481#L13 assume !(fgetc_~c~0#1 < 0); 20480#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20479#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20478#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20477#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20474#L29 assume main_#t~switch3#1; 20473#L26 havoc main_#t~switch3#1; 20472#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20471#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20470#L13 assume !(fgetc_~c~0#1 < 0); 20469#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20468#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20467#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20466#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20463#L29 assume main_#t~switch3#1; 20462#L26 havoc main_#t~switch3#1; 20461#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20460#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20459#L13 assume !(fgetc_~c~0#1 < 0); 20458#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20457#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20456#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20455#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20452#L29 assume main_#t~switch3#1; 20451#L26 havoc main_#t~switch3#1; 20450#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20449#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20448#L13 assume !(fgetc_~c~0#1 < 0); 20447#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20446#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20445#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20444#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20441#L29 assume main_#t~switch3#1; 20440#L26 havoc main_#t~switch3#1; 20439#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20438#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20437#L13 assume !(fgetc_~c~0#1 < 0); 20436#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20435#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20434#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20433#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20430#L29 assume main_#t~switch3#1; 20429#L26 havoc main_#t~switch3#1; 20428#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20427#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20426#L13 assume !(fgetc_~c~0#1 < 0); 20425#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20424#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20423#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20422#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20419#L29 assume main_#t~switch3#1; 20418#L26 havoc main_#t~switch3#1; 20417#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20416#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20415#L13 assume !(fgetc_~c~0#1 < 0); 20414#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20413#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20412#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20411#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20408#L29 assume main_#t~switch3#1; 20407#L26 havoc main_#t~switch3#1; 20406#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20405#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20404#L13 assume !(fgetc_~c~0#1 < 0); 20403#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20402#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20401#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20400#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20397#L29 assume main_#t~switch3#1; 20396#L26 havoc main_#t~switch3#1; 20395#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20394#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20393#L13 assume !(fgetc_~c~0#1 < 0); 20392#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20391#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20390#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20389#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20386#L29 assume main_#t~switch3#1; 20385#L26 havoc main_#t~switch3#1; 20384#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20383#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20382#L13 assume !(fgetc_~c~0#1 < 0); 20381#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20380#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20379#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20378#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20375#L29 assume main_#t~switch3#1; 20374#L26 havoc main_#t~switch3#1; 20373#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20372#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20371#L13 assume !(fgetc_~c~0#1 < 0); 20370#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20369#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20368#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20367#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20364#L29 assume main_#t~switch3#1; 20363#L26 havoc main_#t~switch3#1; 20362#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20361#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20360#L13 assume !(fgetc_~c~0#1 < 0); 20359#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20358#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20357#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20356#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20353#L29 assume main_#t~switch3#1; 20352#L26 havoc main_#t~switch3#1; 20351#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20350#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20349#L13 assume !(fgetc_~c~0#1 < 0); 20348#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20347#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20346#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20345#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20342#L29 assume main_#t~switch3#1; 20341#L26 havoc main_#t~switch3#1; 20340#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20339#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20338#L13 assume !(fgetc_~c~0#1 < 0); 20337#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20336#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20335#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20334#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20331#L29 assume main_#t~switch3#1; 20330#L26 havoc main_#t~switch3#1; 20329#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20328#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20327#L13 assume !(fgetc_~c~0#1 < 0); 20326#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20325#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20324#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20323#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20320#L29 assume main_#t~switch3#1; 20319#L26 havoc main_#t~switch3#1; 20318#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20317#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20316#L13 assume !(fgetc_~c~0#1 < 0); 20315#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20314#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20313#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20312#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20309#L29 assume main_#t~switch3#1; 20308#L26 havoc main_#t~switch3#1; 20307#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20306#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20305#L13 assume !(fgetc_~c~0#1 < 0); 20304#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20303#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20302#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20301#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20298#L29 assume main_#t~switch3#1; 20297#L26 havoc main_#t~switch3#1; 20296#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20295#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20294#L13 assume !(fgetc_~c~0#1 < 0); 20293#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20292#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20291#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20290#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20287#L29 assume main_#t~switch3#1; 20286#L26 havoc main_#t~switch3#1; 20285#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20284#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20283#L13 assume !(fgetc_~c~0#1 < 0); 20282#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20281#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20280#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20279#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20276#L29 assume main_#t~switch3#1; 20275#L26 havoc main_#t~switch3#1; 20274#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20273#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20272#L13 assume !(fgetc_~c~0#1 < 0); 20271#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20270#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20269#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20268#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20265#L29 assume main_#t~switch3#1; 20264#L26 havoc main_#t~switch3#1; 20263#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20262#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20261#L13 assume !(fgetc_~c~0#1 < 0); 20260#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20259#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20258#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20257#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20254#L29 assume main_#t~switch3#1; 20253#L26 havoc main_#t~switch3#1; 20252#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20251#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20250#L13 assume !(fgetc_~c~0#1 < 0); 20249#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20248#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20247#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20246#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20243#L29 assume main_#t~switch3#1; 20242#L26 havoc main_#t~switch3#1; 20241#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20240#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20239#L13 assume !(fgetc_~c~0#1 < 0); 20238#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20237#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20236#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20235#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20232#L29 assume main_#t~switch3#1; 20231#L26 havoc main_#t~switch3#1; 20230#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20229#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20228#L13 assume !(fgetc_~c~0#1 < 0); 20227#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20226#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20225#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20224#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20221#L29 assume main_#t~switch3#1; 20220#L26 havoc main_#t~switch3#1; 20219#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20218#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20217#L13 assume !(fgetc_~c~0#1 < 0); 20216#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20215#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20214#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20213#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20210#L29 assume main_#t~switch3#1; 20209#L26 havoc main_#t~switch3#1; 20208#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20207#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20206#L13 assume !(fgetc_~c~0#1 < 0); 20205#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20204#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20203#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20202#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20199#L29 assume main_#t~switch3#1; 20198#L26 havoc main_#t~switch3#1; 20197#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20196#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20195#L13 assume !(fgetc_~c~0#1 < 0); 20194#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20193#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20192#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20191#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20188#L29 assume main_#t~switch3#1; 20187#L26 havoc main_#t~switch3#1; 20186#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20185#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20184#L13 assume !(fgetc_~c~0#1 < 0); 20183#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20182#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20181#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20180#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20177#L29 assume main_#t~switch3#1; 20176#L26 havoc main_#t~switch3#1; 20175#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20174#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20173#L13 assume !(fgetc_~c~0#1 < 0); 20172#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20171#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20170#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20169#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20166#L29 assume main_#t~switch3#1; 20165#L26 havoc main_#t~switch3#1; 20164#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20163#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20162#L13 assume !(fgetc_~c~0#1 < 0); 20161#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20160#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20159#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20158#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20155#L29 assume main_#t~switch3#1; 20154#L26 havoc main_#t~switch3#1; 20153#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20152#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20151#L13 assume !(fgetc_~c~0#1 < 0); 20150#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20149#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20148#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20147#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20144#L29 assume main_#t~switch3#1; 20143#L26 havoc main_#t~switch3#1; 20142#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20141#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20140#L13 assume !(fgetc_~c~0#1 < 0); 20139#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20138#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20137#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20136#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20133#L29 assume main_#t~switch3#1; 20132#L26 havoc main_#t~switch3#1; 20131#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20130#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20129#L13 assume !(fgetc_~c~0#1 < 0); 20128#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20127#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20126#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20125#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20122#L29 assume main_#t~switch3#1; 20121#L26 havoc main_#t~switch3#1; 20120#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20119#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20118#L13 assume !(fgetc_~c~0#1 < 0); 20117#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20116#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20115#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20114#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20111#L29 assume main_#t~switch3#1; 20110#L26 havoc main_#t~switch3#1; 20109#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20108#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20107#L13 assume !(fgetc_~c~0#1 < 0); 20106#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20105#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20104#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20103#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20100#L29 assume main_#t~switch3#1; 20099#L26 havoc main_#t~switch3#1; 20098#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20097#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20096#L13 assume !(fgetc_~c~0#1 < 0); 20095#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20094#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20093#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20092#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20089#L29 assume main_#t~switch3#1; 20088#L26 havoc main_#t~switch3#1; 20087#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20086#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20085#L13 assume !(fgetc_~c~0#1 < 0); 20084#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20083#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20082#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20081#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20078#L29 assume main_#t~switch3#1; 20077#L26 havoc main_#t~switch3#1; 20076#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20075#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20074#L13 assume !(fgetc_~c~0#1 < 0); 20073#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20072#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20071#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20070#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20067#L29 assume main_#t~switch3#1; 20066#L26 havoc main_#t~switch3#1; 20065#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20064#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20063#L13 assume !(fgetc_~c~0#1 < 0); 20062#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20061#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20060#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20059#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20056#L29 assume main_#t~switch3#1; 20055#L26 havoc main_#t~switch3#1; 20054#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20053#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20052#L13 assume !(fgetc_~c~0#1 < 0); 20051#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20050#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20049#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20048#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20045#L29 assume main_#t~switch3#1; 20044#L26 havoc main_#t~switch3#1; 20043#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20042#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20041#L13 assume !(fgetc_~c~0#1 < 0); 20040#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20039#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20038#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20037#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20034#L29 assume main_#t~switch3#1; 20033#L26 havoc main_#t~switch3#1; 20032#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20031#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20030#L13 assume !(fgetc_~c~0#1 < 0); 20029#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20028#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20027#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20026#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20023#L29 assume main_#t~switch3#1; 20022#L26 havoc main_#t~switch3#1; 20021#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20020#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20019#L13 assume !(fgetc_~c~0#1 < 0); 20018#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20017#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20016#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20015#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20012#L29 assume main_#t~switch3#1; 20011#L26 havoc main_#t~switch3#1; 20010#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 20009#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 20008#L13 assume !(fgetc_~c~0#1 < 0); 20007#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 20006#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 20005#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 20004#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 20001#L29 assume main_#t~switch3#1; 20000#L26 havoc main_#t~switch3#1; 19999#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19998#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19997#L13 assume !(fgetc_~c~0#1 < 0); 19996#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19995#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19994#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19993#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19990#L29 assume main_#t~switch3#1; 19989#L26 havoc main_#t~switch3#1; 19988#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19987#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19986#L13 assume !(fgetc_~c~0#1 < 0); 19985#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19984#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19983#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19982#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19979#L29 assume main_#t~switch3#1; 19978#L26 havoc main_#t~switch3#1; 19977#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19976#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19975#L13 assume !(fgetc_~c~0#1 < 0); 19974#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19973#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19972#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19971#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19968#L29 assume main_#t~switch3#1; 19967#L26 havoc main_#t~switch3#1; 19966#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19965#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19964#L13 assume !(fgetc_~c~0#1 < 0); 19963#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19962#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19961#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19960#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19957#L29 assume main_#t~switch3#1; 19956#L26 havoc main_#t~switch3#1; 19955#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19954#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19953#L13 assume !(fgetc_~c~0#1 < 0); 19952#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19951#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19950#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19949#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19946#L29 assume main_#t~switch3#1; 19945#L26 havoc main_#t~switch3#1; 19944#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19943#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19942#L13 assume !(fgetc_~c~0#1 < 0); 19941#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19940#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19939#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19938#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19935#L29 assume main_#t~switch3#1; 19934#L26 havoc main_#t~switch3#1; 19933#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19932#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19931#L13 assume !(fgetc_~c~0#1 < 0); 19930#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19929#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19928#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19927#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19924#L29 assume main_#t~switch3#1; 19923#L26 havoc main_#t~switch3#1; 19922#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19921#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19920#L13 assume !(fgetc_~c~0#1 < 0); 19919#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19918#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19917#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19916#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19913#L29 assume main_#t~switch3#1; 19912#L26 havoc main_#t~switch3#1; 19911#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19910#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19909#L13 assume !(fgetc_~c~0#1 < 0); 19908#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19907#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19906#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19905#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19902#L29 assume main_#t~switch3#1; 19901#L26 havoc main_#t~switch3#1; 19900#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19899#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19898#L13 assume !(fgetc_~c~0#1 < 0); 19897#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19896#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19895#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19894#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19891#L29 assume main_#t~switch3#1; 19890#L26 havoc main_#t~switch3#1; 19889#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19888#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19887#L13 assume !(fgetc_~c~0#1 < 0); 19886#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19885#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19884#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19883#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19880#L29 assume main_#t~switch3#1; 19879#L26 havoc main_#t~switch3#1; 19878#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19877#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19876#L13 assume !(fgetc_~c~0#1 < 0); 19875#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19874#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19873#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19872#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19869#L29 assume main_#t~switch3#1; 19868#L26 havoc main_#t~switch3#1; 19867#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19866#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19865#L13 assume !(fgetc_~c~0#1 < 0); 19864#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19863#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19862#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19861#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19858#L29 assume main_#t~switch3#1; 19857#L26 havoc main_#t~switch3#1; 19856#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19855#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19854#L13 assume !(fgetc_~c~0#1 < 0); 19853#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19852#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19851#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19850#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19847#L29 assume main_#t~switch3#1; 19846#L26 havoc main_#t~switch3#1; 19845#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19844#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19843#L13 assume !(fgetc_~c~0#1 < 0); 19842#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19841#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19840#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19839#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19836#L29 assume main_#t~switch3#1; 19835#L26 havoc main_#t~switch3#1; 19834#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19833#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19832#L13 assume !(fgetc_~c~0#1 < 0); 19831#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19830#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19829#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19828#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19825#L29 assume main_#t~switch3#1; 19824#L26 havoc main_#t~switch3#1; 19823#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19822#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19821#L13 assume !(fgetc_~c~0#1 < 0); 19820#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19819#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19818#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19817#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19814#L29 assume main_#t~switch3#1; 19813#L26 havoc main_#t~switch3#1; 19812#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19811#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19810#L13 assume !(fgetc_~c~0#1 < 0); 19809#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19808#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19807#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19806#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19803#L29 assume main_#t~switch3#1; 19802#L26 havoc main_#t~switch3#1; 19801#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19800#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19799#L13 assume !(fgetc_~c~0#1 < 0); 19798#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19797#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19796#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19795#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19792#L29 assume main_#t~switch3#1; 19791#L26 havoc main_#t~switch3#1; 19790#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19789#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19788#L13 assume !(fgetc_~c~0#1 < 0); 19787#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19786#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19785#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19784#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19781#L29 assume main_#t~switch3#1; 19780#L26 havoc main_#t~switch3#1; 19779#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19778#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19777#L13 assume !(fgetc_~c~0#1 < 0); 19776#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19775#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19774#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19773#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19770#L29 assume main_#t~switch3#1; 19769#L26 havoc main_#t~switch3#1; 19768#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19767#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19766#L13 assume !(fgetc_~c~0#1 < 0); 19765#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19764#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19763#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19762#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19759#L29 assume main_#t~switch3#1; 19758#L26 havoc main_#t~switch3#1; 19757#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19756#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19755#L13 assume !(fgetc_~c~0#1 < 0); 19754#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19753#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19752#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19751#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19748#L29 assume main_#t~switch3#1; 19747#L26 havoc main_#t~switch3#1; 19746#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19745#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19744#L13 assume !(fgetc_~c~0#1 < 0); 19743#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19742#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19741#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19740#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19737#L29 assume main_#t~switch3#1; 19736#L26 havoc main_#t~switch3#1; 19735#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19734#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19733#L13 assume !(fgetc_~c~0#1 < 0); 19732#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19731#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19730#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19729#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19726#L29 assume main_#t~switch3#1; 19725#L26 havoc main_#t~switch3#1; 19724#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19723#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19722#L13 assume !(fgetc_~c~0#1 < 0); 19721#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19720#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19719#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19718#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19715#L29 assume main_#t~switch3#1; 19714#L26 havoc main_#t~switch3#1; 19713#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19712#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19711#L13 assume !(fgetc_~c~0#1 < 0); 19710#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19709#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19708#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19707#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19704#L29 assume main_#t~switch3#1; 19703#L26 havoc main_#t~switch3#1; 19702#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19701#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19700#L13 assume !(fgetc_~c~0#1 < 0); 19699#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19698#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19697#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19696#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19693#L29 assume main_#t~switch3#1; 19692#L26 havoc main_#t~switch3#1; 19691#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19690#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19689#L13 assume !(fgetc_~c~0#1 < 0); 19688#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19687#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19686#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19685#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19682#L29 assume main_#t~switch3#1; 19681#L26 havoc main_#t~switch3#1; 19680#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19679#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19678#L13 assume !(fgetc_~c~0#1 < 0); 19677#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19676#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19675#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19674#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19671#L29 assume main_#t~switch3#1; 19670#L26 havoc main_#t~switch3#1; 19669#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19668#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19667#L13 assume !(fgetc_~c~0#1 < 0); 19666#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19665#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19664#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19663#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19660#L29 assume main_#t~switch3#1; 19659#L26 havoc main_#t~switch3#1; 19658#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19657#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19656#L13 assume !(fgetc_~c~0#1 < 0); 19655#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19654#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19653#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19652#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19649#L29 assume main_#t~switch3#1; 19648#L26 havoc main_#t~switch3#1; 19647#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19646#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19645#L13 assume !(fgetc_~c~0#1 < 0); 19644#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19643#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19642#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19641#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19638#L29 assume main_#t~switch3#1; 19637#L26 havoc main_#t~switch3#1; 19636#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19635#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19634#L13 assume !(fgetc_~c~0#1 < 0); 19633#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19632#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19631#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19630#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19627#L29 assume main_#t~switch3#1; 19626#L26 havoc main_#t~switch3#1; 19625#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19624#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19623#L13 assume !(fgetc_~c~0#1 < 0); 19622#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19621#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19620#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19619#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19616#L29 assume main_#t~switch3#1; 19615#L26 havoc main_#t~switch3#1; 19614#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19613#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19612#L13 assume !(fgetc_~c~0#1 < 0); 19611#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19610#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19609#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19608#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19605#L29 assume main_#t~switch3#1; 19604#L26 havoc main_#t~switch3#1; 19603#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19602#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19601#L13 assume !(fgetc_~c~0#1 < 0); 19600#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19599#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19598#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19597#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19594#L29 assume main_#t~switch3#1; 19593#L26 havoc main_#t~switch3#1; 19592#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19591#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19590#L13 assume !(fgetc_~c~0#1 < 0); 19589#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19588#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19587#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19586#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19583#L29 assume main_#t~switch3#1; 19582#L26 havoc main_#t~switch3#1; 19581#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19580#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19579#L13 assume !(fgetc_~c~0#1 < 0); 19578#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19577#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19576#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19575#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19572#L29 assume main_#t~switch3#1; 19571#L26 havoc main_#t~switch3#1; 19570#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19569#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19568#L13 assume !(fgetc_~c~0#1 < 0); 19567#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19566#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19565#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19564#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19561#L29 assume main_#t~switch3#1; 19560#L26 havoc main_#t~switch3#1; 19559#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19558#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19557#L13 assume !(fgetc_~c~0#1 < 0); 19556#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19555#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19554#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19553#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19550#L29 assume main_#t~switch3#1; 19549#L26 havoc main_#t~switch3#1; 19548#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19547#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19546#L13 assume !(fgetc_~c~0#1 < 0); 19545#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19544#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19543#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19542#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19539#L29 assume main_#t~switch3#1; 19538#L26 havoc main_#t~switch3#1; 19537#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19536#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19535#L13 assume !(fgetc_~c~0#1 < 0); 19534#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19533#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19532#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19531#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19528#L29 assume main_#t~switch3#1; 19527#L26 havoc main_#t~switch3#1; 19526#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19525#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19524#L13 assume !(fgetc_~c~0#1 < 0); 19523#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19522#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19521#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19520#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19517#L29 assume main_#t~switch3#1; 19516#L26 havoc main_#t~switch3#1; 19515#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19514#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19513#L13 assume !(fgetc_~c~0#1 < 0); 19512#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19511#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19510#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19509#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19506#L29 assume main_#t~switch3#1; 19505#L26 havoc main_#t~switch3#1; 19504#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19503#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19502#L13 assume !(fgetc_~c~0#1 < 0); 19501#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19500#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19499#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19498#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19495#L29 assume main_#t~switch3#1; 19494#L26 havoc main_#t~switch3#1; 19493#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19492#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19491#L13 assume !(fgetc_~c~0#1 < 0); 19490#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19489#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19488#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19487#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19484#L29 assume main_#t~switch3#1; 19483#L26 havoc main_#t~switch3#1; 19482#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19481#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19480#L13 assume !(fgetc_~c~0#1 < 0); 19479#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19478#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19477#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19476#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19473#L29 assume main_#t~switch3#1; 19472#L26 havoc main_#t~switch3#1; 19471#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19470#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19469#L13 assume !(fgetc_~c~0#1 < 0); 19468#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19467#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19466#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19465#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19462#L29 assume main_#t~switch3#1; 19461#L26 havoc main_#t~switch3#1; 19460#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19459#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19458#L13 assume !(fgetc_~c~0#1 < 0); 19457#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19456#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19455#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19454#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19451#L29 assume main_#t~switch3#1; 19450#L26 havoc main_#t~switch3#1; 19449#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19448#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19447#L13 assume !(fgetc_~c~0#1 < 0); 19446#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19445#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19444#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19443#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19440#L29 assume main_#t~switch3#1; 19439#L26 havoc main_#t~switch3#1; 19438#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19437#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19436#L13 assume !(fgetc_~c~0#1 < 0); 19435#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19434#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19433#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19432#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19429#L29 assume main_#t~switch3#1; 19428#L26 havoc main_#t~switch3#1; 19427#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19426#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19425#L13 assume !(fgetc_~c~0#1 < 0); 19424#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19423#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19422#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19421#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19418#L29 assume main_#t~switch3#1; 19417#L26 havoc main_#t~switch3#1; 19416#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19415#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19414#L13 assume !(fgetc_~c~0#1 < 0); 19413#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19412#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19411#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19410#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19407#L29 assume main_#t~switch3#1; 19406#L26 havoc main_#t~switch3#1; 19405#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19404#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19403#L13 assume !(fgetc_~c~0#1 < 0); 19402#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19401#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19400#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19399#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19396#L29 assume main_#t~switch3#1; 19395#L26 havoc main_#t~switch3#1; 19394#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19393#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19392#L13 assume !(fgetc_~c~0#1 < 0); 19391#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19390#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19389#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19388#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19385#L29 assume main_#t~switch3#1; 19384#L26 havoc main_#t~switch3#1; 19383#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19382#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19381#L13 assume !(fgetc_~c~0#1 < 0); 19380#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19379#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19378#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19377#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19374#L29 assume main_#t~switch3#1; 19373#L26 havoc main_#t~switch3#1; 19372#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19371#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19370#L13 assume !(fgetc_~c~0#1 < 0); 19369#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19368#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19367#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19366#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19363#L29 assume main_#t~switch3#1; 19362#L26 havoc main_#t~switch3#1; 19361#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19360#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19359#L13 assume !(fgetc_~c~0#1 < 0); 19358#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19357#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19356#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19355#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19352#L29 assume main_#t~switch3#1; 19351#L26 havoc main_#t~switch3#1; 19350#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19349#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19348#L13 assume !(fgetc_~c~0#1 < 0); 19347#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19346#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19345#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19344#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19341#L29 assume main_#t~switch3#1; 19340#L26 havoc main_#t~switch3#1; 19339#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19338#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19337#L13 assume !(fgetc_~c~0#1 < 0); 19336#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19335#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19334#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19333#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19330#L29 assume main_#t~switch3#1; 19329#L26 havoc main_#t~switch3#1; 19328#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19327#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19326#L13 assume !(fgetc_~c~0#1 < 0); 19325#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19324#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19323#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19322#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19319#L29 assume main_#t~switch3#1; 19318#L26 havoc main_#t~switch3#1; 19317#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19316#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19315#L13 assume !(fgetc_~c~0#1 < 0); 19314#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19313#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19312#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19311#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19308#L29 assume main_#t~switch3#1; 19307#L26 havoc main_#t~switch3#1; 19306#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19305#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19304#L13 assume !(fgetc_~c~0#1 < 0); 19303#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19302#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19301#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19300#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19297#L29 assume main_#t~switch3#1; 19296#L26 havoc main_#t~switch3#1; 19295#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19294#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19293#L13 assume !(fgetc_~c~0#1 < 0); 19292#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19291#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19290#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19289#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19286#L29 assume main_#t~switch3#1; 19285#L26 havoc main_#t~switch3#1; 19284#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19283#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19282#L13 assume !(fgetc_~c~0#1 < 0); 19281#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19280#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19279#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19278#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19275#L29 assume main_#t~switch3#1; 19274#L26 havoc main_#t~switch3#1; 19273#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19272#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19271#L13 assume !(fgetc_~c~0#1 < 0); 19270#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19269#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19268#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19267#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19264#L29 assume main_#t~switch3#1; 19263#L26 havoc main_#t~switch3#1; 19262#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19261#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19260#L13 assume !(fgetc_~c~0#1 < 0); 19259#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19258#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19257#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19256#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19253#L29 assume main_#t~switch3#1; 19252#L26 havoc main_#t~switch3#1; 19251#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19250#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19249#L13 assume !(fgetc_~c~0#1 < 0); 19248#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19247#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19246#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19245#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19242#L29 assume main_#t~switch3#1; 19241#L26 havoc main_#t~switch3#1; 19240#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19239#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19238#L13 assume !(fgetc_~c~0#1 < 0); 19237#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19236#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19235#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19234#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19231#L29 assume main_#t~switch3#1; 19230#L26 havoc main_#t~switch3#1; 19229#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19228#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19227#L13 assume !(fgetc_~c~0#1 < 0); 19226#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19225#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19224#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19223#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19220#L29 assume main_#t~switch3#1; 19219#L26 havoc main_#t~switch3#1; 19218#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19217#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19216#L13 assume !(fgetc_~c~0#1 < 0); 19215#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19214#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19213#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19212#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19209#L29 assume main_#t~switch3#1; 19208#L26 havoc main_#t~switch3#1; 19207#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19206#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19205#L13 assume !(fgetc_~c~0#1 < 0); 19204#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19203#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19202#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19201#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19198#L29 assume main_#t~switch3#1; 19197#L26 havoc main_#t~switch3#1; 19196#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19195#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19194#L13 assume !(fgetc_~c~0#1 < 0); 19193#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19192#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19191#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19190#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19187#L29 assume main_#t~switch3#1; 19186#L26 havoc main_#t~switch3#1; 19185#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19184#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19183#L13 assume !(fgetc_~c~0#1 < 0); 19182#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19181#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19180#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19179#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19176#L29 assume main_#t~switch3#1; 19175#L26 havoc main_#t~switch3#1; 19174#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19173#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19172#L13 assume !(fgetc_~c~0#1 < 0); 19171#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19170#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19169#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19168#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19165#L29 assume main_#t~switch3#1; 19164#L26 havoc main_#t~switch3#1; 19163#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19162#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19161#L13 assume !(fgetc_~c~0#1 < 0); 19160#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19159#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19158#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19157#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19154#L29 assume main_#t~switch3#1; 19153#L26 havoc main_#t~switch3#1; 19152#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19151#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19150#L13 assume !(fgetc_~c~0#1 < 0); 19149#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19148#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19147#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19146#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19143#L29 assume main_#t~switch3#1; 19142#L26 havoc main_#t~switch3#1; 19141#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19140#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19139#L13 assume !(fgetc_~c~0#1 < 0); 19138#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19137#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19136#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19135#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19132#L29 assume main_#t~switch3#1; 19131#L26 havoc main_#t~switch3#1; 19130#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19129#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19128#L13 assume !(fgetc_~c~0#1 < 0); 19127#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19126#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19125#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19124#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19121#L29 assume main_#t~switch3#1; 19120#L26 havoc main_#t~switch3#1; 19119#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19118#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19117#L13 assume !(fgetc_~c~0#1 < 0); 19116#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19115#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19114#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19113#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19110#L29 assume main_#t~switch3#1; 19109#L26 havoc main_#t~switch3#1; 19108#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19107#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19106#L13 assume !(fgetc_~c~0#1 < 0); 19105#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19104#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19103#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19102#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19099#L29 assume main_#t~switch3#1; 19098#L26 havoc main_#t~switch3#1; 19097#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19096#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19095#L13 assume !(fgetc_~c~0#1 < 0); 19094#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19093#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19092#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19091#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19088#L29 assume main_#t~switch3#1; 19087#L26 havoc main_#t~switch3#1; 19086#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19085#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19084#L13 assume !(fgetc_~c~0#1 < 0); 19083#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19082#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19081#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19080#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19077#L29 assume main_#t~switch3#1; 19076#L26 havoc main_#t~switch3#1; 19075#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19074#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19073#L13 assume !(fgetc_~c~0#1 < 0); 19072#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19071#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19070#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19069#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19066#L29 assume main_#t~switch3#1; 19065#L26 havoc main_#t~switch3#1; 19064#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19063#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19062#L13 assume !(fgetc_~c~0#1 < 0); 19061#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19060#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19059#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19058#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19055#L29 assume main_#t~switch3#1; 19054#L26 havoc main_#t~switch3#1; 19053#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19052#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19051#L13 assume !(fgetc_~c~0#1 < 0); 19050#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19049#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19048#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19047#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19044#L29 assume main_#t~switch3#1; 19043#L26 havoc main_#t~switch3#1; 19042#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19041#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19040#L13 assume !(fgetc_~c~0#1 < 0); 19039#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19038#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19037#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19036#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19033#L29 assume main_#t~switch3#1; 19032#L26 havoc main_#t~switch3#1; 19031#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19030#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19029#L13 assume !(fgetc_~c~0#1 < 0); 19028#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19027#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19026#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19025#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19022#L29 assume main_#t~switch3#1; 19021#L26 havoc main_#t~switch3#1; 19020#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19019#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19018#L13 assume !(fgetc_~c~0#1 < 0); 19017#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19016#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19015#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19014#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19011#L29 assume main_#t~switch3#1; 19010#L26 havoc main_#t~switch3#1; 19009#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 19008#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 19007#L13 assume !(fgetc_~c~0#1 < 0); 19006#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 19005#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 19004#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 19003#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 19000#L29 assume main_#t~switch3#1; 18999#L26 havoc main_#t~switch3#1; 18998#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18997#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18996#L13 assume !(fgetc_~c~0#1 < 0); 18995#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18994#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18993#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18992#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18989#L29 assume main_#t~switch3#1; 18988#L26 havoc main_#t~switch3#1; 18987#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18986#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18985#L13 assume !(fgetc_~c~0#1 < 0); 18984#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18983#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18982#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18981#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18978#L29 assume main_#t~switch3#1; 18977#L26 havoc main_#t~switch3#1; 18976#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18975#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18974#L13 assume !(fgetc_~c~0#1 < 0); 18973#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18972#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18971#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18970#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18967#L29 assume main_#t~switch3#1; 18966#L26 havoc main_#t~switch3#1; 18965#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18964#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18963#L13 assume !(fgetc_~c~0#1 < 0); 18962#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18961#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18960#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18959#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18956#L29 assume main_#t~switch3#1; 18955#L26 havoc main_#t~switch3#1; 18954#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18953#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18952#L13 assume !(fgetc_~c~0#1 < 0); 18951#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18950#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18949#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18948#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18945#L29 assume main_#t~switch3#1; 18944#L26 havoc main_#t~switch3#1; 18943#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18942#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18941#L13 assume !(fgetc_~c~0#1 < 0); 18940#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18939#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18938#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18937#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18934#L29 assume main_#t~switch3#1; 18933#L26 havoc main_#t~switch3#1; 18932#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18931#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18930#L13 assume !(fgetc_~c~0#1 < 0); 18929#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18928#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18927#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18926#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18923#L29 assume main_#t~switch3#1; 18922#L26 havoc main_#t~switch3#1; 18921#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18920#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18919#L13 assume !(fgetc_~c~0#1 < 0); 18918#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18917#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18916#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18915#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18912#L29 assume main_#t~switch3#1; 18911#L26 havoc main_#t~switch3#1; 18910#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18909#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18908#L13 assume !(fgetc_~c~0#1 < 0); 18907#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18906#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18905#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18904#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18901#L29 assume main_#t~switch3#1; 18900#L26 havoc main_#t~switch3#1; 18899#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18898#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18897#L13 assume !(fgetc_~c~0#1 < 0); 18896#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18895#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18894#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18893#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18890#L29 assume main_#t~switch3#1; 18889#L26 havoc main_#t~switch3#1; 18888#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18887#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18886#L13 assume !(fgetc_~c~0#1 < 0); 18885#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18884#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18883#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18882#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18879#L29 assume main_#t~switch3#1; 18878#L26 havoc main_#t~switch3#1; 18877#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18876#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18875#L13 assume !(fgetc_~c~0#1 < 0); 18874#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18873#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18872#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18871#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18868#L29 assume main_#t~switch3#1; 18867#L26 havoc main_#t~switch3#1; 18866#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18865#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18864#L13 assume !(fgetc_~c~0#1 < 0); 18863#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18862#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18861#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18860#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18857#L29 assume main_#t~switch3#1; 18856#L26 havoc main_#t~switch3#1; 18855#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18854#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18853#L13 assume !(fgetc_~c~0#1 < 0); 18852#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18851#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18850#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18849#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18846#L29 assume main_#t~switch3#1; 18845#L26 havoc main_#t~switch3#1; 18844#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18843#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18842#L13 assume !(fgetc_~c~0#1 < 0); 18841#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18840#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18839#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18838#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18835#L29 assume main_#t~switch3#1; 18834#L26 havoc main_#t~switch3#1; 18833#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18832#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18831#L13 assume !(fgetc_~c~0#1 < 0); 18830#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18829#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18828#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18827#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18824#L29 assume main_#t~switch3#1; 18823#L26 havoc main_#t~switch3#1; 18822#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18821#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18820#L13 assume !(fgetc_~c~0#1 < 0); 18819#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18818#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18817#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18816#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18813#L29 assume main_#t~switch3#1; 18812#L26 havoc main_#t~switch3#1; 18811#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18810#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18809#L13 assume !(fgetc_~c~0#1 < 0); 18808#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18807#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18806#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18805#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18802#L29 assume main_#t~switch3#1; 18801#L26 havoc main_#t~switch3#1; 18800#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18799#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18798#L13 assume !(fgetc_~c~0#1 < 0); 18797#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18796#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18795#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18794#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18791#L29 assume main_#t~switch3#1; 18790#L26 havoc main_#t~switch3#1; 18789#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18788#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18787#L13 assume !(fgetc_~c~0#1 < 0); 18786#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18784#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18782#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18772#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18773#L29 assume main_#t~switch3#1; 18766#L26 havoc main_#t~switch3#1; 18767#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18762#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 18758#L13 assume !(fgetc_~c~0#1 < 0); 18754#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 18730#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18731#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18763#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18760#L29 assume main_#t~switch3#1; 18744#L26 
[2022-05-11 19:15:30,487 INFO  L793   eck$LassoCheckResult]: Loop: 18744#L26 havoc main_#t~switch3#1; 18746#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 18749#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 18750#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 18757#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 18736#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 18737#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 18740#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 18743#L33 assume main_#t~switch3#1; 18744#L26 
[2022-05-11 19:15:30,487 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:15:30,487 INFO  L85        PathProgramCache]: Analyzing trace with hash -958995408, now seen corresponding path program 6 times
[2022-05-11 19:15:30,488 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:15:30,488 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [579645576]
[2022-05-11 19:15:30,488 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:15:30,488 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:15:33,558 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:15:33,558 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:15:36,614 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:15:36,650 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:15:36,650 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:15:36,650 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 8 times
[2022-05-11 19:15:36,651 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:15:36,651 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1857873475]
[2022-05-11 19:15:36,651 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:15:36,651 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:15:36,653 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:15:36,653 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:15:36,653 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:15:36,654 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:15:36,654 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:15:36,654 INFO  L85        PathProgramCache]: Analyzing trace with hash 858437395, now seen corresponding path program 7 times
[2022-05-11 19:15:36,654 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:15:36,654 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1592135962]
[2022-05-11 19:15:36,654 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:15:36,654 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:15:36,878 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:15:55,721 INFO  L134       CoverageAnalysis]: Checked inductivity of 162735 backedges. 760 proven. 161975 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:15:55,722 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:15:55,722 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1592135962]
[2022-05-11 19:15:55,722 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1592135962] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:15:55,722 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [1972588899]
[2022-05-11 19:15:55,722 INFO  L93    rtionOrderModulation]: Changing assertion order to NOT_INCREMENTALLY
[2022-05-11 19:15:55,722 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:15:55,724 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:15:55,725 INFO  L229       MonitoredProcess]: Starting monitored process 21 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:15:55,725 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (21)] Waiting until timeout for monitored process
[2022-05-11 19:15:56,445 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:15:56,455 INFO  L263         TraceCheckSpWp]: Trace formula consists of 3821 conjuncts, 192 conjunts are in the unsatisfiable core
[2022-05-11 19:15:56,466 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:16:00,778 INFO  L134       CoverageAnalysis]: Checked inductivity of 162735 backedges. 760 proven. 161975 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:16:00,778 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:16:58,184 INFO  L134       CoverageAnalysis]: Checked inductivity of 162735 backedges. 760 proven. 161975 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:16:58,184 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [1972588899] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:16:58,184 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:16:58,185 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [192, 192, 192] total 383
[2022-05-11 19:16:58,185 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [295427279]
[2022-05-11 19:16:58,185 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:16:58,258 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:16:58,268 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 384 interpolants.
[2022-05-11 19:16:58,277 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=73536, Invalid=73536, Unknown=0, NotChecked=0, Total=147072
[2022-05-11 19:16:58,278 INFO  L87              Difference]: Start difference. First operand 2114 states and 2689 transitions. cyclomatic complexity: 577 Second operand  has 384 states, 384 states have (on average 8.942708333333334) internal successors, (3434), 383 states have internal predecessors, (3434), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:19:46,540 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2022-05-11 19:19:46,540 INFO  L93              Difference]: Finished difference Result 6146 states and 7873 transitions.
[2022-05-11 19:19:46,540 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 384 states. 
[2022-05-11 19:19:46,540 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6146 states and 7873 transitions.
[2022-05-11 19:19:46,558 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:19:46,569 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6146 states to 4226 states and 5377 transitions.
[2022-05-11 19:19:46,569 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 18
[2022-05-11 19:19:46,569 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 18
[2022-05-11 19:19:46,569 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4226 states and 5377 transitions.
[2022-05-11 19:19:46,572 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is not deterministic.
[2022-05-11 19:19:46,572 INFO  L681         BuchiCegarLoop]: Abstraction has 4226 states and 5377 transitions.
[2022-05-11 19:19:46,573 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4226 states and 5377 transitions.
[2022-05-11 19:19:46,606 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4226 to 4226.
[2022-05-11 19:19:46,610 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 4226 states, 4226 states have (on average 1.2723615712257454) internal successors, (5377), 4225 states have internal predecessors, (5377), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
[2022-05-11 19:19:46,615 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4226 states to 4226 states and 5377 transitions.
[2022-05-11 19:19:46,615 INFO  L704         BuchiCegarLoop]: Abstraction has 4226 states and 5377 transitions.
[2022-05-11 19:19:46,615 INFO  L587         BuchiCegarLoop]: Abstraction has 4226 states and 5377 transitions.
[2022-05-11 19:19:46,615 INFO  L425         BuchiCegarLoop]: ======== Iteration 12============
[2022-05-11 19:19:46,615 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4226 states and 5377 transitions.
[2022-05-11 19:19:46,622 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 9
[2022-05-11 19:19:46,622 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2022-05-11 19:19:46,622 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2022-05-11 19:19:46,659 INFO  L842         BuchiCegarLoop]: Counterexample stem histogram [382, 382, 382, 382, 382, 382, 382, 382, 381, 1, 1]
[2022-05-11 19:19:46,659 INFO  L843         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1]
[2022-05-11 19:19:46,661 INFO  L791   eck$LassoCheckResult]: Stem: 37697#ULTIMATE.startENTRY assume { :begin_inline_ULTIMATE.init } true;~flag~0 := 0; 37698#L-1 assume { :end_inline_ULTIMATE.init } true;assume { :begin_inline_main } true;havoc main_#res#1;havoc main_#t~ret2#1, main_#t~switch3#1, main_~temp~0#1;havoc main_~temp~0#1; 37712#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37714#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37715#L13 assume !(fgetc_~c~0#1 < 0); 37716#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37695#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37696#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37701#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37702#L29 assume main_#t~switch3#1; 41911#L26 havoc main_#t~switch3#1; 37719#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37720#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41918#L13 assume !(fgetc_~c~0#1 < 0); 41917#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41916#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41915#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41914#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37704#L29 assume main_#t~switch3#1; 37705#L26 havoc main_#t~switch3#1; 37711#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41910#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41909#L13 assume !(fgetc_~c~0#1 < 0); 41908#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41907#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41906#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41905#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41902#L29 assume main_#t~switch3#1; 41901#L26 havoc main_#t~switch3#1; 41900#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41899#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41898#L13 assume !(fgetc_~c~0#1 < 0); 41897#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41896#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41895#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41894#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41891#L29 assume main_#t~switch3#1; 41890#L26 havoc main_#t~switch3#1; 41889#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41888#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41887#L13 assume !(fgetc_~c~0#1 < 0); 41886#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41885#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41884#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41883#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41880#L29 assume main_#t~switch3#1; 41879#L26 havoc main_#t~switch3#1; 41878#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41877#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41876#L13 assume !(fgetc_~c~0#1 < 0); 41875#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41874#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41873#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41872#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41869#L29 assume main_#t~switch3#1; 41868#L26 havoc main_#t~switch3#1; 41867#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41866#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41865#L13 assume !(fgetc_~c~0#1 < 0); 41864#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41863#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41862#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41861#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41858#L29 assume main_#t~switch3#1; 41857#L26 havoc main_#t~switch3#1; 41856#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41855#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41854#L13 assume !(fgetc_~c~0#1 < 0); 41853#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41852#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41851#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41850#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41847#L29 assume main_#t~switch3#1; 41846#L26 havoc main_#t~switch3#1; 41845#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41844#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41843#L13 assume !(fgetc_~c~0#1 < 0); 41842#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41841#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41840#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41839#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41836#L29 assume main_#t~switch3#1; 41835#L26 havoc main_#t~switch3#1; 41834#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41833#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41832#L13 assume !(fgetc_~c~0#1 < 0); 41831#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41830#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41829#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41828#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41825#L29 assume main_#t~switch3#1; 41824#L26 havoc main_#t~switch3#1; 41823#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41822#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41821#L13 assume !(fgetc_~c~0#1 < 0); 41820#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41819#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41818#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41817#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41814#L29 assume main_#t~switch3#1; 41813#L26 havoc main_#t~switch3#1; 41812#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41811#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41810#L13 assume !(fgetc_~c~0#1 < 0); 41809#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41808#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41807#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41806#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41803#L29 assume main_#t~switch3#1; 41802#L26 havoc main_#t~switch3#1; 41801#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41800#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41799#L13 assume !(fgetc_~c~0#1 < 0); 41798#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41797#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41796#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41795#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41792#L29 assume main_#t~switch3#1; 41791#L26 havoc main_#t~switch3#1; 41790#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41789#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41788#L13 assume !(fgetc_~c~0#1 < 0); 41787#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41786#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41785#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41784#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41781#L29 assume main_#t~switch3#1; 41780#L26 havoc main_#t~switch3#1; 41779#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41778#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41777#L13 assume !(fgetc_~c~0#1 < 0); 41776#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41775#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41774#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41773#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41770#L29 assume main_#t~switch3#1; 41769#L26 havoc main_#t~switch3#1; 41768#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41767#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41766#L13 assume !(fgetc_~c~0#1 < 0); 41765#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41764#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41763#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41762#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41759#L29 assume main_#t~switch3#1; 41758#L26 havoc main_#t~switch3#1; 41757#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41756#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41755#L13 assume !(fgetc_~c~0#1 < 0); 41754#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41753#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41752#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41751#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41748#L29 assume main_#t~switch3#1; 41747#L26 havoc main_#t~switch3#1; 41746#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41745#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41744#L13 assume !(fgetc_~c~0#1 < 0); 41743#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41742#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41741#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41740#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41737#L29 assume main_#t~switch3#1; 41736#L26 havoc main_#t~switch3#1; 41735#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41734#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41733#L13 assume !(fgetc_~c~0#1 < 0); 41732#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41731#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41730#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41729#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41726#L29 assume main_#t~switch3#1; 41725#L26 havoc main_#t~switch3#1; 41724#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41723#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41722#L13 assume !(fgetc_~c~0#1 < 0); 41721#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41720#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41719#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41718#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41715#L29 assume main_#t~switch3#1; 41714#L26 havoc main_#t~switch3#1; 41713#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41712#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41711#L13 assume !(fgetc_~c~0#1 < 0); 41710#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41709#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41708#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41707#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41704#L29 assume main_#t~switch3#1; 41703#L26 havoc main_#t~switch3#1; 41702#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41701#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41700#L13 assume !(fgetc_~c~0#1 < 0); 41699#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41698#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41697#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41696#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41693#L29 assume main_#t~switch3#1; 41692#L26 havoc main_#t~switch3#1; 41691#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41690#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41689#L13 assume !(fgetc_~c~0#1 < 0); 41688#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41687#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41686#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41685#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41682#L29 assume main_#t~switch3#1; 41681#L26 havoc main_#t~switch3#1; 41680#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41679#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41678#L13 assume !(fgetc_~c~0#1 < 0); 41677#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41676#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41675#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41674#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41671#L29 assume main_#t~switch3#1; 41670#L26 havoc main_#t~switch3#1; 41669#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41668#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41667#L13 assume !(fgetc_~c~0#1 < 0); 41666#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41665#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41664#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41663#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41660#L29 assume main_#t~switch3#1; 41659#L26 havoc main_#t~switch3#1; 41658#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41657#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41656#L13 assume !(fgetc_~c~0#1 < 0); 41655#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41654#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41653#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41652#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41649#L29 assume main_#t~switch3#1; 41648#L26 havoc main_#t~switch3#1; 41647#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41646#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41645#L13 assume !(fgetc_~c~0#1 < 0); 41644#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41643#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41642#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41641#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41638#L29 assume main_#t~switch3#1; 41637#L26 havoc main_#t~switch3#1; 41636#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41635#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41634#L13 assume !(fgetc_~c~0#1 < 0); 41633#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41632#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41631#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41630#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41627#L29 assume main_#t~switch3#1; 41626#L26 havoc main_#t~switch3#1; 41625#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41624#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41623#L13 assume !(fgetc_~c~0#1 < 0); 41622#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41621#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41620#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41619#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41616#L29 assume main_#t~switch3#1; 41615#L26 havoc main_#t~switch3#1; 41614#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41613#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41612#L13 assume !(fgetc_~c~0#1 < 0); 41611#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41610#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41609#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41608#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41605#L29 assume main_#t~switch3#1; 41604#L26 havoc main_#t~switch3#1; 41603#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41602#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41601#L13 assume !(fgetc_~c~0#1 < 0); 41600#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41599#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41598#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41597#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41594#L29 assume main_#t~switch3#1; 41593#L26 havoc main_#t~switch3#1; 41592#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41591#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41590#L13 assume !(fgetc_~c~0#1 < 0); 41589#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41588#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41587#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41586#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41583#L29 assume main_#t~switch3#1; 41582#L26 havoc main_#t~switch3#1; 41581#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41580#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41579#L13 assume !(fgetc_~c~0#1 < 0); 41578#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41577#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41576#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41575#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41572#L29 assume main_#t~switch3#1; 41571#L26 havoc main_#t~switch3#1; 41570#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41569#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41568#L13 assume !(fgetc_~c~0#1 < 0); 41567#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41566#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41565#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41564#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41561#L29 assume main_#t~switch3#1; 41560#L26 havoc main_#t~switch3#1; 41559#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41558#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41557#L13 assume !(fgetc_~c~0#1 < 0); 41556#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41555#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41554#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41553#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41550#L29 assume main_#t~switch3#1; 41549#L26 havoc main_#t~switch3#1; 41548#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41547#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41546#L13 assume !(fgetc_~c~0#1 < 0); 41545#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41544#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41543#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41542#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41539#L29 assume main_#t~switch3#1; 41538#L26 havoc main_#t~switch3#1; 41537#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41536#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41535#L13 assume !(fgetc_~c~0#1 < 0); 41534#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41533#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41532#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41531#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41528#L29 assume main_#t~switch3#1; 41527#L26 havoc main_#t~switch3#1; 41526#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41525#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41524#L13 assume !(fgetc_~c~0#1 < 0); 41523#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41522#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41521#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41520#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41517#L29 assume main_#t~switch3#1; 41516#L26 havoc main_#t~switch3#1; 41515#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41514#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41513#L13 assume !(fgetc_~c~0#1 < 0); 41512#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41511#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41510#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41509#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41506#L29 assume main_#t~switch3#1; 41505#L26 havoc main_#t~switch3#1; 41504#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41503#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41502#L13 assume !(fgetc_~c~0#1 < 0); 41501#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41500#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41499#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41498#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41495#L29 assume main_#t~switch3#1; 41494#L26 havoc main_#t~switch3#1; 41493#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41492#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41491#L13 assume !(fgetc_~c~0#1 < 0); 41490#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41489#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41488#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41487#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41484#L29 assume main_#t~switch3#1; 41483#L26 havoc main_#t~switch3#1; 41482#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41481#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41480#L13 assume !(fgetc_~c~0#1 < 0); 41479#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41478#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41477#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41476#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41473#L29 assume main_#t~switch3#1; 41472#L26 havoc main_#t~switch3#1; 41471#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41470#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41469#L13 assume !(fgetc_~c~0#1 < 0); 41468#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41467#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41466#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41465#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41462#L29 assume main_#t~switch3#1; 41461#L26 havoc main_#t~switch3#1; 41460#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41459#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41458#L13 assume !(fgetc_~c~0#1 < 0); 41457#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41456#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41455#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41454#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41451#L29 assume main_#t~switch3#1; 41450#L26 havoc main_#t~switch3#1; 41449#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41448#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41447#L13 assume !(fgetc_~c~0#1 < 0); 41446#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41445#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41444#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41443#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41440#L29 assume main_#t~switch3#1; 41439#L26 havoc main_#t~switch3#1; 41438#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41437#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41436#L13 assume !(fgetc_~c~0#1 < 0); 41435#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41434#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41433#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41432#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41429#L29 assume main_#t~switch3#1; 41428#L26 havoc main_#t~switch3#1; 41427#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41426#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41425#L13 assume !(fgetc_~c~0#1 < 0); 41424#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41423#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41422#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41421#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41418#L29 assume main_#t~switch3#1; 41417#L26 havoc main_#t~switch3#1; 41416#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41415#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41414#L13 assume !(fgetc_~c~0#1 < 0); 41413#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41412#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41411#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41410#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41407#L29 assume main_#t~switch3#1; 41406#L26 havoc main_#t~switch3#1; 41405#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41404#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41403#L13 assume !(fgetc_~c~0#1 < 0); 41402#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41401#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41400#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41399#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41396#L29 assume main_#t~switch3#1; 41395#L26 havoc main_#t~switch3#1; 41394#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41393#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41392#L13 assume !(fgetc_~c~0#1 < 0); 41391#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41390#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41389#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41388#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41385#L29 assume main_#t~switch3#1; 41384#L26 havoc main_#t~switch3#1; 41383#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41382#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41381#L13 assume !(fgetc_~c~0#1 < 0); 41380#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41379#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41378#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41377#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41374#L29 assume main_#t~switch3#1; 41373#L26 havoc main_#t~switch3#1; 41372#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41371#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41370#L13 assume !(fgetc_~c~0#1 < 0); 41369#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41368#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41367#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41366#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41363#L29 assume main_#t~switch3#1; 41362#L26 havoc main_#t~switch3#1; 41361#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41360#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41359#L13 assume !(fgetc_~c~0#1 < 0); 41358#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41357#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41356#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41355#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41352#L29 assume main_#t~switch3#1; 41351#L26 havoc main_#t~switch3#1; 41350#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41349#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41348#L13 assume !(fgetc_~c~0#1 < 0); 41347#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41346#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41345#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41344#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41341#L29 assume main_#t~switch3#1; 41340#L26 havoc main_#t~switch3#1; 41339#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41338#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41337#L13 assume !(fgetc_~c~0#1 < 0); 41336#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41335#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41334#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41333#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41330#L29 assume main_#t~switch3#1; 41329#L26 havoc main_#t~switch3#1; 41328#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41327#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41326#L13 assume !(fgetc_~c~0#1 < 0); 41325#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41324#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41323#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41322#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41319#L29 assume main_#t~switch3#1; 41318#L26 havoc main_#t~switch3#1; 41317#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41316#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41315#L13 assume !(fgetc_~c~0#1 < 0); 41314#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41313#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41312#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41311#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41308#L29 assume main_#t~switch3#1; 41307#L26 havoc main_#t~switch3#1; 41306#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41305#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41304#L13 assume !(fgetc_~c~0#1 < 0); 41303#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41302#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41301#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41300#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41297#L29 assume main_#t~switch3#1; 41296#L26 havoc main_#t~switch3#1; 41295#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41294#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41293#L13 assume !(fgetc_~c~0#1 < 0); 41292#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41291#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41290#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41289#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41286#L29 assume main_#t~switch3#1; 41285#L26 havoc main_#t~switch3#1; 41284#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41283#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41282#L13 assume !(fgetc_~c~0#1 < 0); 41281#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41280#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41279#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41278#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41275#L29 assume main_#t~switch3#1; 41274#L26 havoc main_#t~switch3#1; 41273#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41272#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41271#L13 assume !(fgetc_~c~0#1 < 0); 41270#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41269#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41268#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41267#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41264#L29 assume main_#t~switch3#1; 41263#L26 havoc main_#t~switch3#1; 41262#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41261#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41260#L13 assume !(fgetc_~c~0#1 < 0); 41259#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41258#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41257#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41256#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41253#L29 assume main_#t~switch3#1; 41252#L26 havoc main_#t~switch3#1; 41251#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41250#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41249#L13 assume !(fgetc_~c~0#1 < 0); 41248#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41247#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41246#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41245#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41242#L29 assume main_#t~switch3#1; 41241#L26 havoc main_#t~switch3#1; 41240#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41239#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41238#L13 assume !(fgetc_~c~0#1 < 0); 41237#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41236#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41235#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41234#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41231#L29 assume main_#t~switch3#1; 41230#L26 havoc main_#t~switch3#1; 41229#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41228#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41227#L13 assume !(fgetc_~c~0#1 < 0); 41226#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41225#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41224#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41223#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41220#L29 assume main_#t~switch3#1; 41219#L26 havoc main_#t~switch3#1; 41218#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41217#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41216#L13 assume !(fgetc_~c~0#1 < 0); 41215#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41214#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41213#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41212#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41209#L29 assume main_#t~switch3#1; 41208#L26 havoc main_#t~switch3#1; 41207#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41206#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41205#L13 assume !(fgetc_~c~0#1 < 0); 41204#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41203#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41202#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41201#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41198#L29 assume main_#t~switch3#1; 41197#L26 havoc main_#t~switch3#1; 41196#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41195#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41194#L13 assume !(fgetc_~c~0#1 < 0); 41193#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41192#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41191#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41190#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41187#L29 assume main_#t~switch3#1; 41186#L26 havoc main_#t~switch3#1; 41185#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41184#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41183#L13 assume !(fgetc_~c~0#1 < 0); 41182#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41181#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41180#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41179#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41176#L29 assume main_#t~switch3#1; 41175#L26 havoc main_#t~switch3#1; 41174#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41173#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41172#L13 assume !(fgetc_~c~0#1 < 0); 41171#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41170#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41169#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41168#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41165#L29 assume main_#t~switch3#1; 41164#L26 havoc main_#t~switch3#1; 41163#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41162#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41161#L13 assume !(fgetc_~c~0#1 < 0); 41160#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41159#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41158#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41157#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41154#L29 assume main_#t~switch3#1; 41153#L26 havoc main_#t~switch3#1; 41152#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41151#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41150#L13 assume !(fgetc_~c~0#1 < 0); 41149#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41148#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41147#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41146#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41143#L29 assume main_#t~switch3#1; 41142#L26 havoc main_#t~switch3#1; 41141#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41140#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41139#L13 assume !(fgetc_~c~0#1 < 0); 41138#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41137#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41136#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41135#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41132#L29 assume main_#t~switch3#1; 41131#L26 havoc main_#t~switch3#1; 41130#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41129#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41128#L13 assume !(fgetc_~c~0#1 < 0); 41127#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41126#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41125#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41124#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41121#L29 assume main_#t~switch3#1; 41120#L26 havoc main_#t~switch3#1; 41119#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41118#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41117#L13 assume !(fgetc_~c~0#1 < 0); 41116#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41115#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41114#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41113#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41110#L29 assume main_#t~switch3#1; 41109#L26 havoc main_#t~switch3#1; 41108#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41107#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41106#L13 assume !(fgetc_~c~0#1 < 0); 41105#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41104#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41103#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41102#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41099#L29 assume main_#t~switch3#1; 41098#L26 havoc main_#t~switch3#1; 41097#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41096#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41095#L13 assume !(fgetc_~c~0#1 < 0); 41094#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41093#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41092#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41091#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41088#L29 assume main_#t~switch3#1; 41087#L26 havoc main_#t~switch3#1; 41086#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41085#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41084#L13 assume !(fgetc_~c~0#1 < 0); 41083#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41082#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41081#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41080#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41077#L29 assume main_#t~switch3#1; 41076#L26 havoc main_#t~switch3#1; 41075#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41074#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41073#L13 assume !(fgetc_~c~0#1 < 0); 41072#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41071#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41070#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41069#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41066#L29 assume main_#t~switch3#1; 41065#L26 havoc main_#t~switch3#1; 41064#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41063#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41062#L13 assume !(fgetc_~c~0#1 < 0); 41061#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41060#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41059#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41058#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41055#L29 assume main_#t~switch3#1; 41054#L26 havoc main_#t~switch3#1; 41053#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41052#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41051#L13 assume !(fgetc_~c~0#1 < 0); 41050#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41049#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41048#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41047#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41044#L29 assume main_#t~switch3#1; 41043#L26 havoc main_#t~switch3#1; 41042#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41041#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41040#L13 assume !(fgetc_~c~0#1 < 0); 41039#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41038#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41037#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41036#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41033#L29 assume main_#t~switch3#1; 41032#L26 havoc main_#t~switch3#1; 41031#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41030#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41029#L13 assume !(fgetc_~c~0#1 < 0); 41028#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41027#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41026#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41025#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41022#L29 assume main_#t~switch3#1; 41021#L26 havoc main_#t~switch3#1; 41020#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41019#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41018#L13 assume !(fgetc_~c~0#1 < 0); 41017#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41016#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41015#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41014#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41011#L29 assume main_#t~switch3#1; 41010#L26 havoc main_#t~switch3#1; 41009#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 41008#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 41007#L13 assume !(fgetc_~c~0#1 < 0); 41006#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 41005#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 41004#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 41003#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 41000#L29 assume main_#t~switch3#1; 40999#L26 havoc main_#t~switch3#1; 40998#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40997#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40996#L13 assume !(fgetc_~c~0#1 < 0); 40995#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40994#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40993#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40992#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40989#L29 assume main_#t~switch3#1; 40988#L26 havoc main_#t~switch3#1; 40987#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40986#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40985#L13 assume !(fgetc_~c~0#1 < 0); 40984#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40983#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40982#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40981#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40978#L29 assume main_#t~switch3#1; 40977#L26 havoc main_#t~switch3#1; 40976#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40975#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40974#L13 assume !(fgetc_~c~0#1 < 0); 40973#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40972#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40971#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40970#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40967#L29 assume main_#t~switch3#1; 40966#L26 havoc main_#t~switch3#1; 40965#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40964#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40963#L13 assume !(fgetc_~c~0#1 < 0); 40962#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40961#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40960#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40959#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40956#L29 assume main_#t~switch3#1; 40955#L26 havoc main_#t~switch3#1; 40954#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40953#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40952#L13 assume !(fgetc_~c~0#1 < 0); 40951#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40950#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40949#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40948#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40945#L29 assume main_#t~switch3#1; 40944#L26 havoc main_#t~switch3#1; 40943#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40942#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40941#L13 assume !(fgetc_~c~0#1 < 0); 40940#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40939#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40938#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40937#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40934#L29 assume main_#t~switch3#1; 40933#L26 havoc main_#t~switch3#1; 40932#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40931#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40930#L13 assume !(fgetc_~c~0#1 < 0); 40929#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40928#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40927#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40926#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40923#L29 assume main_#t~switch3#1; 40922#L26 havoc main_#t~switch3#1; 40921#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40920#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40919#L13 assume !(fgetc_~c~0#1 < 0); 40918#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40917#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40916#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40915#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40912#L29 assume main_#t~switch3#1; 40911#L26 havoc main_#t~switch3#1; 40910#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40909#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40908#L13 assume !(fgetc_~c~0#1 < 0); 40907#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40906#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40905#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40904#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40901#L29 assume main_#t~switch3#1; 40900#L26 havoc main_#t~switch3#1; 40899#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40898#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40897#L13 assume !(fgetc_~c~0#1 < 0); 40896#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40895#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40894#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40893#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40890#L29 assume main_#t~switch3#1; 40889#L26 havoc main_#t~switch3#1; 40888#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40887#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40886#L13 assume !(fgetc_~c~0#1 < 0); 40885#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40884#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40883#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40882#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40879#L29 assume main_#t~switch3#1; 40878#L26 havoc main_#t~switch3#1; 40877#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40876#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40875#L13 assume !(fgetc_~c~0#1 < 0); 40874#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40873#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40872#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40871#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40868#L29 assume main_#t~switch3#1; 40867#L26 havoc main_#t~switch3#1; 40866#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40865#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40864#L13 assume !(fgetc_~c~0#1 < 0); 40863#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40862#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40861#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40860#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40857#L29 assume main_#t~switch3#1; 40856#L26 havoc main_#t~switch3#1; 40855#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40854#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40853#L13 assume !(fgetc_~c~0#1 < 0); 40852#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40851#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40850#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40849#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40846#L29 assume main_#t~switch3#1; 40845#L26 havoc main_#t~switch3#1; 40844#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40843#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40842#L13 assume !(fgetc_~c~0#1 < 0); 40841#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40840#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40839#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40838#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40835#L29 assume main_#t~switch3#1; 40834#L26 havoc main_#t~switch3#1; 40833#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40832#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40831#L13 assume !(fgetc_~c~0#1 < 0); 40830#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40829#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40828#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40827#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40824#L29 assume main_#t~switch3#1; 40823#L26 havoc main_#t~switch3#1; 40822#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40821#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40820#L13 assume !(fgetc_~c~0#1 < 0); 40819#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40818#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40817#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40816#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40813#L29 assume main_#t~switch3#1; 40812#L26 havoc main_#t~switch3#1; 40811#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40810#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40809#L13 assume !(fgetc_~c~0#1 < 0); 40808#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40807#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40806#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40805#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40802#L29 assume main_#t~switch3#1; 40801#L26 havoc main_#t~switch3#1; 40800#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40799#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40798#L13 assume !(fgetc_~c~0#1 < 0); 40797#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40796#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40795#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40794#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40791#L29 assume main_#t~switch3#1; 40790#L26 havoc main_#t~switch3#1; 40789#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40788#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40787#L13 assume !(fgetc_~c~0#1 < 0); 40786#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40785#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40784#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40783#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40780#L29 assume main_#t~switch3#1; 40779#L26 havoc main_#t~switch3#1; 40778#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40777#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40776#L13 assume !(fgetc_~c~0#1 < 0); 40775#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40774#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40773#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40772#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40769#L29 assume main_#t~switch3#1; 40768#L26 havoc main_#t~switch3#1; 40767#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40766#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40765#L13 assume !(fgetc_~c~0#1 < 0); 40764#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40763#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40762#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40761#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40758#L29 assume main_#t~switch3#1; 40757#L26 havoc main_#t~switch3#1; 40756#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40755#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40754#L13 assume !(fgetc_~c~0#1 < 0); 40753#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40752#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40751#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40750#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40747#L29 assume main_#t~switch3#1; 40746#L26 havoc main_#t~switch3#1; 40745#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40744#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40743#L13 assume !(fgetc_~c~0#1 < 0); 40742#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40741#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40740#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40739#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40736#L29 assume main_#t~switch3#1; 40735#L26 havoc main_#t~switch3#1; 40734#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40733#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40732#L13 assume !(fgetc_~c~0#1 < 0); 40731#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40730#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40729#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40728#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40725#L29 assume main_#t~switch3#1; 40724#L26 havoc main_#t~switch3#1; 40723#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40722#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40721#L13 assume !(fgetc_~c~0#1 < 0); 40720#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40719#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40718#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40717#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40714#L29 assume main_#t~switch3#1; 40713#L26 havoc main_#t~switch3#1; 40712#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40711#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40710#L13 assume !(fgetc_~c~0#1 < 0); 40709#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40708#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40707#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40706#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40703#L29 assume main_#t~switch3#1; 40702#L26 havoc main_#t~switch3#1; 40701#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40700#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40699#L13 assume !(fgetc_~c~0#1 < 0); 40698#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40697#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40696#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40695#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40692#L29 assume main_#t~switch3#1; 40691#L26 havoc main_#t~switch3#1; 40690#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40689#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40688#L13 assume !(fgetc_~c~0#1 < 0); 40687#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40686#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40685#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40684#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40681#L29 assume main_#t~switch3#1; 40680#L26 havoc main_#t~switch3#1; 40679#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40678#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40677#L13 assume !(fgetc_~c~0#1 < 0); 40676#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40675#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40674#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40673#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40670#L29 assume main_#t~switch3#1; 40669#L26 havoc main_#t~switch3#1; 40668#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40667#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40666#L13 assume !(fgetc_~c~0#1 < 0); 40665#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40664#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40663#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40662#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40659#L29 assume main_#t~switch3#1; 40658#L26 havoc main_#t~switch3#1; 40657#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40656#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40655#L13 assume !(fgetc_~c~0#1 < 0); 40654#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40653#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40652#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40651#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40648#L29 assume main_#t~switch3#1; 40647#L26 havoc main_#t~switch3#1; 40646#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40645#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40644#L13 assume !(fgetc_~c~0#1 < 0); 40643#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40642#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40641#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40640#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40637#L29 assume main_#t~switch3#1; 40636#L26 havoc main_#t~switch3#1; 40635#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40634#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40633#L13 assume !(fgetc_~c~0#1 < 0); 40632#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40631#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40630#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40629#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40626#L29 assume main_#t~switch3#1; 40625#L26 havoc main_#t~switch3#1; 40624#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40623#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40622#L13 assume !(fgetc_~c~0#1 < 0); 40621#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40620#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40619#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40618#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40615#L29 assume main_#t~switch3#1; 40614#L26 havoc main_#t~switch3#1; 40613#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40612#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40611#L13 assume !(fgetc_~c~0#1 < 0); 40610#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40609#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40608#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40607#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40604#L29 assume main_#t~switch3#1; 40603#L26 havoc main_#t~switch3#1; 40602#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40601#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40600#L13 assume !(fgetc_~c~0#1 < 0); 40599#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40598#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40597#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40596#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40593#L29 assume main_#t~switch3#1; 40592#L26 havoc main_#t~switch3#1; 40591#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40590#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40589#L13 assume !(fgetc_~c~0#1 < 0); 40588#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40587#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40586#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40585#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40582#L29 assume main_#t~switch3#1; 40581#L26 havoc main_#t~switch3#1; 40580#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40579#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40578#L13 assume !(fgetc_~c~0#1 < 0); 40577#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40576#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40575#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40574#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40571#L29 assume main_#t~switch3#1; 40570#L26 havoc main_#t~switch3#1; 40569#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40568#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40567#L13 assume !(fgetc_~c~0#1 < 0); 40566#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40565#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40564#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40563#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40560#L29 assume main_#t~switch3#1; 40559#L26 havoc main_#t~switch3#1; 40558#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40557#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40556#L13 assume !(fgetc_~c~0#1 < 0); 40555#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40554#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40553#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40552#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40549#L29 assume main_#t~switch3#1; 40548#L26 havoc main_#t~switch3#1; 40547#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40546#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40545#L13 assume !(fgetc_~c~0#1 < 0); 40544#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40543#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40542#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40541#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40538#L29 assume main_#t~switch3#1; 40537#L26 havoc main_#t~switch3#1; 40536#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40535#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40534#L13 assume !(fgetc_~c~0#1 < 0); 40533#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40532#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40531#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40530#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40527#L29 assume main_#t~switch3#1; 40526#L26 havoc main_#t~switch3#1; 40525#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40524#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40523#L13 assume !(fgetc_~c~0#1 < 0); 40522#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40521#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40520#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40519#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40516#L29 assume main_#t~switch3#1; 40515#L26 havoc main_#t~switch3#1; 40514#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40513#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40512#L13 assume !(fgetc_~c~0#1 < 0); 40511#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40510#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40509#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40508#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40505#L29 assume main_#t~switch3#1; 40504#L26 havoc main_#t~switch3#1; 40503#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40502#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40501#L13 assume !(fgetc_~c~0#1 < 0); 40500#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40499#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40498#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40497#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40494#L29 assume main_#t~switch3#1; 40493#L26 havoc main_#t~switch3#1; 40492#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40491#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40490#L13 assume !(fgetc_~c~0#1 < 0); 40489#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40488#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40487#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40486#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40483#L29 assume main_#t~switch3#1; 40482#L26 havoc main_#t~switch3#1; 40481#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40480#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40479#L13 assume !(fgetc_~c~0#1 < 0); 40478#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40477#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40476#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40475#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40472#L29 assume main_#t~switch3#1; 40471#L26 havoc main_#t~switch3#1; 40470#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40469#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40468#L13 assume !(fgetc_~c~0#1 < 0); 40467#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40466#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40465#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40464#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40461#L29 assume main_#t~switch3#1; 40460#L26 havoc main_#t~switch3#1; 40459#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40458#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40457#L13 assume !(fgetc_~c~0#1 < 0); 40456#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40455#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40454#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40453#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40450#L29 assume main_#t~switch3#1; 40449#L26 havoc main_#t~switch3#1; 40448#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40447#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40446#L13 assume !(fgetc_~c~0#1 < 0); 40445#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40444#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40443#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40442#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40439#L29 assume main_#t~switch3#1; 40438#L26 havoc main_#t~switch3#1; 40437#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40436#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40435#L13 assume !(fgetc_~c~0#1 < 0); 40434#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40433#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40432#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40431#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40428#L29 assume main_#t~switch3#1; 40427#L26 havoc main_#t~switch3#1; 40426#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40425#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40424#L13 assume !(fgetc_~c~0#1 < 0); 40423#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40422#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40421#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40420#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40417#L29 assume main_#t~switch3#1; 40416#L26 havoc main_#t~switch3#1; 40415#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40414#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40413#L13 assume !(fgetc_~c~0#1 < 0); 40412#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40411#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40410#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40409#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40406#L29 assume main_#t~switch3#1; 40405#L26 havoc main_#t~switch3#1; 40404#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40403#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40402#L13 assume !(fgetc_~c~0#1 < 0); 40401#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40400#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40399#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40398#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40395#L29 assume main_#t~switch3#1; 40394#L26 havoc main_#t~switch3#1; 40393#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40392#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40391#L13 assume !(fgetc_~c~0#1 < 0); 40390#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40389#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40388#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40387#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40384#L29 assume main_#t~switch3#1; 40383#L26 havoc main_#t~switch3#1; 40382#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40381#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40380#L13 assume !(fgetc_~c~0#1 < 0); 40379#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40378#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40377#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40376#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40373#L29 assume main_#t~switch3#1; 40372#L26 havoc main_#t~switch3#1; 40371#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40370#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40369#L13 assume !(fgetc_~c~0#1 < 0); 40368#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40367#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40366#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40365#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40362#L29 assume main_#t~switch3#1; 40361#L26 havoc main_#t~switch3#1; 40360#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40359#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40358#L13 assume !(fgetc_~c~0#1 < 0); 40357#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40356#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40355#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40354#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40351#L29 assume main_#t~switch3#1; 40350#L26 havoc main_#t~switch3#1; 40349#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40348#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40347#L13 assume !(fgetc_~c~0#1 < 0); 40346#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40345#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40344#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40343#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40340#L29 assume main_#t~switch3#1; 40339#L26 havoc main_#t~switch3#1; 40338#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40337#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40336#L13 assume !(fgetc_~c~0#1 < 0); 40335#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40334#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40333#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40332#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40329#L29 assume main_#t~switch3#1; 40328#L26 havoc main_#t~switch3#1; 40327#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40326#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40325#L13 assume !(fgetc_~c~0#1 < 0); 40324#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40323#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40322#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40321#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40318#L29 assume main_#t~switch3#1; 40317#L26 havoc main_#t~switch3#1; 40316#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40315#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40314#L13 assume !(fgetc_~c~0#1 < 0); 40313#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40312#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40311#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40310#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40307#L29 assume main_#t~switch3#1; 40306#L26 havoc main_#t~switch3#1; 40305#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40304#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40303#L13 assume !(fgetc_~c~0#1 < 0); 40302#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40301#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40300#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40299#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40296#L29 assume main_#t~switch3#1; 40295#L26 havoc main_#t~switch3#1; 40294#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40293#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40292#L13 assume !(fgetc_~c~0#1 < 0); 40291#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40290#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40289#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40288#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40285#L29 assume main_#t~switch3#1; 40284#L26 havoc main_#t~switch3#1; 40283#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40282#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40281#L13 assume !(fgetc_~c~0#1 < 0); 40280#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40279#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40278#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40277#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40274#L29 assume main_#t~switch3#1; 40273#L26 havoc main_#t~switch3#1; 40272#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40271#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40270#L13 assume !(fgetc_~c~0#1 < 0); 40269#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40268#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40267#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40266#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40263#L29 assume main_#t~switch3#1; 40262#L26 havoc main_#t~switch3#1; 40261#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40260#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40259#L13 assume !(fgetc_~c~0#1 < 0); 40258#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40257#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40256#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40255#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40252#L29 assume main_#t~switch3#1; 40251#L26 havoc main_#t~switch3#1; 40250#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40249#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40248#L13 assume !(fgetc_~c~0#1 < 0); 40247#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40246#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40245#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40244#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40241#L29 assume main_#t~switch3#1; 40240#L26 havoc main_#t~switch3#1; 40239#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40238#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40237#L13 assume !(fgetc_~c~0#1 < 0); 40236#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40235#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40234#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40233#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40230#L29 assume main_#t~switch3#1; 40229#L26 havoc main_#t~switch3#1; 40228#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40227#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40226#L13 assume !(fgetc_~c~0#1 < 0); 40225#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40224#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40223#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40222#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40219#L29 assume main_#t~switch3#1; 40218#L26 havoc main_#t~switch3#1; 40217#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40216#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40215#L13 assume !(fgetc_~c~0#1 < 0); 40214#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40213#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40212#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40211#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40208#L29 assume main_#t~switch3#1; 40207#L26 havoc main_#t~switch3#1; 40206#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40205#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40204#L13 assume !(fgetc_~c~0#1 < 0); 40203#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40202#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40201#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40200#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40197#L29 assume main_#t~switch3#1; 40196#L26 havoc main_#t~switch3#1; 40195#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40194#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40193#L13 assume !(fgetc_~c~0#1 < 0); 40192#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40191#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40190#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40189#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40186#L29 assume main_#t~switch3#1; 40185#L26 havoc main_#t~switch3#1; 40184#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40183#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40182#L13 assume !(fgetc_~c~0#1 < 0); 40181#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40180#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40179#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40178#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40175#L29 assume main_#t~switch3#1; 40174#L26 havoc main_#t~switch3#1; 40173#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40172#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40171#L13 assume !(fgetc_~c~0#1 < 0); 40170#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40169#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40168#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40167#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40164#L29 assume main_#t~switch3#1; 40163#L26 havoc main_#t~switch3#1; 40162#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40161#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40160#L13 assume !(fgetc_~c~0#1 < 0); 40159#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40158#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40157#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40156#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40153#L29 assume main_#t~switch3#1; 40152#L26 havoc main_#t~switch3#1; 40151#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40150#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40149#L13 assume !(fgetc_~c~0#1 < 0); 40148#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40147#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40146#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40145#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40142#L29 assume main_#t~switch3#1; 40141#L26 havoc main_#t~switch3#1; 40140#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40139#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40138#L13 assume !(fgetc_~c~0#1 < 0); 40137#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40136#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40135#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40134#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40131#L29 assume main_#t~switch3#1; 40130#L26 havoc main_#t~switch3#1; 40129#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40128#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40127#L13 assume !(fgetc_~c~0#1 < 0); 40126#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40125#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40124#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40123#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40120#L29 assume main_#t~switch3#1; 40119#L26 havoc main_#t~switch3#1; 40118#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40117#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40116#L13 assume !(fgetc_~c~0#1 < 0); 40115#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40114#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40113#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40112#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40109#L29 assume main_#t~switch3#1; 40108#L26 havoc main_#t~switch3#1; 40107#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40106#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40105#L13 assume !(fgetc_~c~0#1 < 0); 40104#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40103#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40102#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40101#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40098#L29 assume main_#t~switch3#1; 40097#L26 havoc main_#t~switch3#1; 40096#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40095#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40094#L13 assume !(fgetc_~c~0#1 < 0); 40093#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40092#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40091#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40090#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40087#L29 assume main_#t~switch3#1; 40086#L26 havoc main_#t~switch3#1; 40085#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40084#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40083#L13 assume !(fgetc_~c~0#1 < 0); 40082#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40081#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40080#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40079#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40076#L29 assume main_#t~switch3#1; 40075#L26 havoc main_#t~switch3#1; 40074#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40073#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40072#L13 assume !(fgetc_~c~0#1 < 0); 40071#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40070#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40069#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40068#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40065#L29 assume main_#t~switch3#1; 40064#L26 havoc main_#t~switch3#1; 40063#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40062#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40061#L13 assume !(fgetc_~c~0#1 < 0); 40060#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40059#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40058#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40057#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40054#L29 assume main_#t~switch3#1; 40053#L26 havoc main_#t~switch3#1; 40052#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40051#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40050#L13 assume !(fgetc_~c~0#1 < 0); 40049#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40048#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40047#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40046#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40043#L29 assume main_#t~switch3#1; 40042#L26 havoc main_#t~switch3#1; 40041#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40040#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40039#L13 assume !(fgetc_~c~0#1 < 0); 40038#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40037#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40036#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40035#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40032#L29 assume main_#t~switch3#1; 40031#L26 havoc main_#t~switch3#1; 40030#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40029#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40028#L13 assume !(fgetc_~c~0#1 < 0); 40027#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40026#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40025#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40024#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40021#L29 assume main_#t~switch3#1; 40020#L26 havoc main_#t~switch3#1; 40019#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40018#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40017#L13 assume !(fgetc_~c~0#1 < 0); 40016#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40015#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40014#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40013#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 40010#L29 assume main_#t~switch3#1; 40009#L26 havoc main_#t~switch3#1; 40008#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 40007#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 40006#L13 assume !(fgetc_~c~0#1 < 0); 40005#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 40004#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 40003#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 40002#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39999#L29 assume main_#t~switch3#1; 39998#L26 havoc main_#t~switch3#1; 39997#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39996#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39995#L13 assume !(fgetc_~c~0#1 < 0); 39994#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39993#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39992#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39991#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39988#L29 assume main_#t~switch3#1; 39987#L26 havoc main_#t~switch3#1; 39986#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39985#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39984#L13 assume !(fgetc_~c~0#1 < 0); 39983#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39982#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39981#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39980#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39977#L29 assume main_#t~switch3#1; 39976#L26 havoc main_#t~switch3#1; 39975#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39974#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39973#L13 assume !(fgetc_~c~0#1 < 0); 39972#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39971#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39970#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39969#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39966#L29 assume main_#t~switch3#1; 39965#L26 havoc main_#t~switch3#1; 39964#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39963#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39962#L13 assume !(fgetc_~c~0#1 < 0); 39961#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39960#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39959#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39958#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39955#L29 assume main_#t~switch3#1; 39954#L26 havoc main_#t~switch3#1; 39953#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39952#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39951#L13 assume !(fgetc_~c~0#1 < 0); 39950#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39949#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39948#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39947#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39944#L29 assume main_#t~switch3#1; 39943#L26 havoc main_#t~switch3#1; 39942#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39941#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39940#L13 assume !(fgetc_~c~0#1 < 0); 39939#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39938#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39937#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39936#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39933#L29 assume main_#t~switch3#1; 39932#L26 havoc main_#t~switch3#1; 39931#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39930#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39929#L13 assume !(fgetc_~c~0#1 < 0); 39928#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39927#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39926#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39925#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39922#L29 assume main_#t~switch3#1; 39921#L26 havoc main_#t~switch3#1; 39920#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39919#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39918#L13 assume !(fgetc_~c~0#1 < 0); 39917#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39916#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39915#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39914#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39911#L29 assume main_#t~switch3#1; 39910#L26 havoc main_#t~switch3#1; 39909#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39908#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39907#L13 assume !(fgetc_~c~0#1 < 0); 39906#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39905#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39904#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39903#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39900#L29 assume main_#t~switch3#1; 39899#L26 havoc main_#t~switch3#1; 39898#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39897#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39896#L13 assume !(fgetc_~c~0#1 < 0); 39895#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39894#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39893#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39892#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39889#L29 assume main_#t~switch3#1; 39888#L26 havoc main_#t~switch3#1; 39887#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39886#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39885#L13 assume !(fgetc_~c~0#1 < 0); 39884#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39883#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39882#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39881#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39878#L29 assume main_#t~switch3#1; 39877#L26 havoc main_#t~switch3#1; 39876#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39875#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39874#L13 assume !(fgetc_~c~0#1 < 0); 39873#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39872#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39871#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39870#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39867#L29 assume main_#t~switch3#1; 39866#L26 havoc main_#t~switch3#1; 39865#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39864#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39863#L13 assume !(fgetc_~c~0#1 < 0); 39862#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39861#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39860#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39859#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39856#L29 assume main_#t~switch3#1; 39855#L26 havoc main_#t~switch3#1; 39854#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39853#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39852#L13 assume !(fgetc_~c~0#1 < 0); 39851#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39850#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39849#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39848#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39845#L29 assume main_#t~switch3#1; 39844#L26 havoc main_#t~switch3#1; 39843#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39842#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39841#L13 assume !(fgetc_~c~0#1 < 0); 39840#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39839#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39838#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39837#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39834#L29 assume main_#t~switch3#1; 39833#L26 havoc main_#t~switch3#1; 39832#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39831#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39830#L13 assume !(fgetc_~c~0#1 < 0); 39829#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39828#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39827#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39826#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39823#L29 assume main_#t~switch3#1; 39822#L26 havoc main_#t~switch3#1; 39821#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39820#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39819#L13 assume !(fgetc_~c~0#1 < 0); 39818#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39817#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39816#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39815#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39812#L29 assume main_#t~switch3#1; 39811#L26 havoc main_#t~switch3#1; 39810#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39809#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39808#L13 assume !(fgetc_~c~0#1 < 0); 39807#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39806#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39805#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39804#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39801#L29 assume main_#t~switch3#1; 39800#L26 havoc main_#t~switch3#1; 39799#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39798#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39797#L13 assume !(fgetc_~c~0#1 < 0); 39796#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39795#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39794#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39793#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39790#L29 assume main_#t~switch3#1; 39789#L26 havoc main_#t~switch3#1; 39788#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39787#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39786#L13 assume !(fgetc_~c~0#1 < 0); 39785#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39784#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39783#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39782#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39779#L29 assume main_#t~switch3#1; 39778#L26 havoc main_#t~switch3#1; 39777#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39776#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39775#L13 assume !(fgetc_~c~0#1 < 0); 39774#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39773#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39772#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39771#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39768#L29 assume main_#t~switch3#1; 39767#L26 havoc main_#t~switch3#1; 39766#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39765#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39764#L13 assume !(fgetc_~c~0#1 < 0); 39763#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39762#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39761#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39760#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39757#L29 assume main_#t~switch3#1; 39756#L26 havoc main_#t~switch3#1; 39755#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39754#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39753#L13 assume !(fgetc_~c~0#1 < 0); 39752#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39751#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39750#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39749#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39746#L29 assume main_#t~switch3#1; 39745#L26 havoc main_#t~switch3#1; 39744#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39743#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39742#L13 assume !(fgetc_~c~0#1 < 0); 39741#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39740#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39739#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39738#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39735#L29 assume main_#t~switch3#1; 39734#L26 havoc main_#t~switch3#1; 39733#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39732#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39731#L13 assume !(fgetc_~c~0#1 < 0); 39730#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39729#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39728#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39727#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39724#L29 assume main_#t~switch3#1; 39723#L26 havoc main_#t~switch3#1; 39722#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39721#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39720#L13 assume !(fgetc_~c~0#1 < 0); 39719#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39718#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39717#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39716#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39713#L29 assume main_#t~switch3#1; 39712#L26 havoc main_#t~switch3#1; 39711#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39710#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39709#L13 assume !(fgetc_~c~0#1 < 0); 39708#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39707#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39706#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39705#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39702#L29 assume main_#t~switch3#1; 39701#L26 havoc main_#t~switch3#1; 39700#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39699#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39698#L13 assume !(fgetc_~c~0#1 < 0); 39697#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39696#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39695#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39694#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39691#L29 assume main_#t~switch3#1; 39690#L26 havoc main_#t~switch3#1; 39689#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39688#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39687#L13 assume !(fgetc_~c~0#1 < 0); 39686#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39685#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39684#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39683#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39680#L29 assume main_#t~switch3#1; 39679#L26 havoc main_#t~switch3#1; 39678#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39677#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39676#L13 assume !(fgetc_~c~0#1 < 0); 39675#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39674#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39673#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39672#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39669#L29 assume main_#t~switch3#1; 39668#L26 havoc main_#t~switch3#1; 39667#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39666#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39665#L13 assume !(fgetc_~c~0#1 < 0); 39664#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39663#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39662#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39661#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39658#L29 assume main_#t~switch3#1; 39657#L26 havoc main_#t~switch3#1; 39656#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39655#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39654#L13 assume !(fgetc_~c~0#1 < 0); 39653#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39652#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39651#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39650#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39647#L29 assume main_#t~switch3#1; 39646#L26 havoc main_#t~switch3#1; 39645#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39644#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39643#L13 assume !(fgetc_~c~0#1 < 0); 39642#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39641#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39640#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39639#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39636#L29 assume main_#t~switch3#1; 39635#L26 havoc main_#t~switch3#1; 39634#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39633#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39632#L13 assume !(fgetc_~c~0#1 < 0); 39631#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39630#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39629#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39628#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39625#L29 assume main_#t~switch3#1; 39624#L26 havoc main_#t~switch3#1; 39623#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39622#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39621#L13 assume !(fgetc_~c~0#1 < 0); 39620#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39619#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39618#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39617#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39614#L29 assume main_#t~switch3#1; 39613#L26 havoc main_#t~switch3#1; 39612#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39611#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39610#L13 assume !(fgetc_~c~0#1 < 0); 39609#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39608#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39607#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39606#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39603#L29 assume main_#t~switch3#1; 39602#L26 havoc main_#t~switch3#1; 39601#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39600#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39599#L13 assume !(fgetc_~c~0#1 < 0); 39598#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39597#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39596#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39595#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39592#L29 assume main_#t~switch3#1; 39591#L26 havoc main_#t~switch3#1; 39590#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39589#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39588#L13 assume !(fgetc_~c~0#1 < 0); 39587#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39586#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39585#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39584#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39581#L29 assume main_#t~switch3#1; 39580#L26 havoc main_#t~switch3#1; 39579#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39578#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39577#L13 assume !(fgetc_~c~0#1 < 0); 39576#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39575#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39574#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39573#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39570#L29 assume main_#t~switch3#1; 39569#L26 havoc main_#t~switch3#1; 39568#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39567#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39566#L13 assume !(fgetc_~c~0#1 < 0); 39565#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39564#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39563#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39562#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39559#L29 assume main_#t~switch3#1; 39558#L26 havoc main_#t~switch3#1; 39557#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39556#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39555#L13 assume !(fgetc_~c~0#1 < 0); 39554#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39553#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39552#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39551#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39548#L29 assume main_#t~switch3#1; 39547#L26 havoc main_#t~switch3#1; 39546#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39545#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39544#L13 assume !(fgetc_~c~0#1 < 0); 39543#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39542#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39541#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39540#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39537#L29 assume main_#t~switch3#1; 39536#L26 havoc main_#t~switch3#1; 39535#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39534#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39533#L13 assume !(fgetc_~c~0#1 < 0); 39532#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39531#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39530#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39529#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39526#L29 assume main_#t~switch3#1; 39525#L26 havoc main_#t~switch3#1; 39524#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39523#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39522#L13 assume !(fgetc_~c~0#1 < 0); 39521#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39520#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39519#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39518#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39515#L29 assume main_#t~switch3#1; 39514#L26 havoc main_#t~switch3#1; 39513#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39512#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39511#L13 assume !(fgetc_~c~0#1 < 0); 39510#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39509#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39508#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39507#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39504#L29 assume main_#t~switch3#1; 39503#L26 havoc main_#t~switch3#1; 39502#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39501#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39500#L13 assume !(fgetc_~c~0#1 < 0); 39499#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39498#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39497#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39496#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39493#L29 assume main_#t~switch3#1; 39492#L26 havoc main_#t~switch3#1; 39491#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39490#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39489#L13 assume !(fgetc_~c~0#1 < 0); 39488#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39487#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39486#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39485#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39482#L29 assume main_#t~switch3#1; 39481#L26 havoc main_#t~switch3#1; 39480#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39479#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39478#L13 assume !(fgetc_~c~0#1 < 0); 39477#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39476#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39475#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39474#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39471#L29 assume main_#t~switch3#1; 39470#L26 havoc main_#t~switch3#1; 39469#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39468#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39467#L13 assume !(fgetc_~c~0#1 < 0); 39466#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39465#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39464#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39463#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39460#L29 assume main_#t~switch3#1; 39459#L26 havoc main_#t~switch3#1; 39458#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39457#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39456#L13 assume !(fgetc_~c~0#1 < 0); 39455#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39454#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39453#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39452#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39449#L29 assume main_#t~switch3#1; 39448#L26 havoc main_#t~switch3#1; 39447#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39446#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39445#L13 assume !(fgetc_~c~0#1 < 0); 39444#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39443#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39442#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39441#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39438#L29 assume main_#t~switch3#1; 39437#L26 havoc main_#t~switch3#1; 39436#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39435#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39434#L13 assume !(fgetc_~c~0#1 < 0); 39433#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39432#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39431#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39430#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39427#L29 assume main_#t~switch3#1; 39426#L26 havoc main_#t~switch3#1; 39425#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39424#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39423#L13 assume !(fgetc_~c~0#1 < 0); 39422#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39421#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39420#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39419#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39416#L29 assume main_#t~switch3#1; 39415#L26 havoc main_#t~switch3#1; 39414#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39413#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39412#L13 assume !(fgetc_~c~0#1 < 0); 39411#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39410#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39409#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39408#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39405#L29 assume main_#t~switch3#1; 39404#L26 havoc main_#t~switch3#1; 39403#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39402#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39401#L13 assume !(fgetc_~c~0#1 < 0); 39400#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39399#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39398#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39397#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39394#L29 assume main_#t~switch3#1; 39393#L26 havoc main_#t~switch3#1; 39392#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39391#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39390#L13 assume !(fgetc_~c~0#1 < 0); 39389#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39388#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39387#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39386#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39383#L29 assume main_#t~switch3#1; 39382#L26 havoc main_#t~switch3#1; 39381#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39380#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39379#L13 assume !(fgetc_~c~0#1 < 0); 39378#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39377#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39376#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39375#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39372#L29 assume main_#t~switch3#1; 39371#L26 havoc main_#t~switch3#1; 39370#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39369#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39368#L13 assume !(fgetc_~c~0#1 < 0); 39367#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39366#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39365#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39364#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39361#L29 assume main_#t~switch3#1; 39360#L26 havoc main_#t~switch3#1; 39359#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39358#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39357#L13 assume !(fgetc_~c~0#1 < 0); 39356#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39355#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39354#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39353#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39350#L29 assume main_#t~switch3#1; 39349#L26 havoc main_#t~switch3#1; 39348#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39347#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39346#L13 assume !(fgetc_~c~0#1 < 0); 39345#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39344#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39343#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39342#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39339#L29 assume main_#t~switch3#1; 39338#L26 havoc main_#t~switch3#1; 39337#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39336#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39335#L13 assume !(fgetc_~c~0#1 < 0); 39334#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39333#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39332#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39331#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39328#L29 assume main_#t~switch3#1; 39327#L26 havoc main_#t~switch3#1; 39326#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39325#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39324#L13 assume !(fgetc_~c~0#1 < 0); 39323#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39322#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39321#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39320#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39317#L29 assume main_#t~switch3#1; 39316#L26 havoc main_#t~switch3#1; 39315#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39314#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39313#L13 assume !(fgetc_~c~0#1 < 0); 39312#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39311#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39310#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39309#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39306#L29 assume main_#t~switch3#1; 39305#L26 havoc main_#t~switch3#1; 39304#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39303#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39302#L13 assume !(fgetc_~c~0#1 < 0); 39301#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39300#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39299#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39298#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39295#L29 assume main_#t~switch3#1; 39294#L26 havoc main_#t~switch3#1; 39293#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39292#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39291#L13 assume !(fgetc_~c~0#1 < 0); 39290#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39289#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39288#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39287#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39284#L29 assume main_#t~switch3#1; 39283#L26 havoc main_#t~switch3#1; 39282#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39281#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39280#L13 assume !(fgetc_~c~0#1 < 0); 39279#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39278#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39277#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39276#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39273#L29 assume main_#t~switch3#1; 39272#L26 havoc main_#t~switch3#1; 39271#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39270#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39269#L13 assume !(fgetc_~c~0#1 < 0); 39268#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39267#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39266#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39265#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39262#L29 assume main_#t~switch3#1; 39261#L26 havoc main_#t~switch3#1; 39260#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39259#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39258#L13 assume !(fgetc_~c~0#1 < 0); 39257#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39256#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39255#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39254#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39251#L29 assume main_#t~switch3#1; 39250#L26 havoc main_#t~switch3#1; 39249#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39248#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39247#L13 assume !(fgetc_~c~0#1 < 0); 39246#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39245#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39244#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39243#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39240#L29 assume main_#t~switch3#1; 39239#L26 havoc main_#t~switch3#1; 39238#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39237#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39236#L13 assume !(fgetc_~c~0#1 < 0); 39235#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39234#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39233#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39232#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39229#L29 assume main_#t~switch3#1; 39228#L26 havoc main_#t~switch3#1; 39227#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39226#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39225#L13 assume !(fgetc_~c~0#1 < 0); 39224#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39223#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39222#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39221#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39218#L29 assume main_#t~switch3#1; 39217#L26 havoc main_#t~switch3#1; 39216#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39215#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39214#L13 assume !(fgetc_~c~0#1 < 0); 39213#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39212#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39211#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39210#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39207#L29 assume main_#t~switch3#1; 39206#L26 havoc main_#t~switch3#1; 39205#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39204#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39203#L13 assume !(fgetc_~c~0#1 < 0); 39202#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39201#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39200#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39199#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39196#L29 assume main_#t~switch3#1; 39195#L26 havoc main_#t~switch3#1; 39194#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39193#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39192#L13 assume !(fgetc_~c~0#1 < 0); 39191#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39190#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39189#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39188#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39185#L29 assume main_#t~switch3#1; 39184#L26 havoc main_#t~switch3#1; 39183#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39182#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39181#L13 assume !(fgetc_~c~0#1 < 0); 39180#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39179#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39178#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39177#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39174#L29 assume main_#t~switch3#1; 39173#L26 havoc main_#t~switch3#1; 39172#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39171#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39170#L13 assume !(fgetc_~c~0#1 < 0); 39169#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39168#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39167#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39166#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39163#L29 assume main_#t~switch3#1; 39162#L26 havoc main_#t~switch3#1; 39161#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39160#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39159#L13 assume !(fgetc_~c~0#1 < 0); 39158#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39157#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39156#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39155#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39152#L29 assume main_#t~switch3#1; 39151#L26 havoc main_#t~switch3#1; 39150#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39149#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39148#L13 assume !(fgetc_~c~0#1 < 0); 39147#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39146#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39145#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39144#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39141#L29 assume main_#t~switch3#1; 39140#L26 havoc main_#t~switch3#1; 39139#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39138#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39137#L13 assume !(fgetc_~c~0#1 < 0); 39136#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39135#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39134#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39133#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39130#L29 assume main_#t~switch3#1; 39129#L26 havoc main_#t~switch3#1; 39128#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39127#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39126#L13 assume !(fgetc_~c~0#1 < 0); 39125#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39124#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39123#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39122#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39119#L29 assume main_#t~switch3#1; 39118#L26 havoc main_#t~switch3#1; 39117#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39116#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39115#L13 assume !(fgetc_~c~0#1 < 0); 39114#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39113#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39112#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39111#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39108#L29 assume main_#t~switch3#1; 39107#L26 havoc main_#t~switch3#1; 39106#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39105#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39104#L13 assume !(fgetc_~c~0#1 < 0); 39103#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39102#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39101#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39100#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39097#L29 assume main_#t~switch3#1; 39096#L26 havoc main_#t~switch3#1; 39095#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39094#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39093#L13 assume !(fgetc_~c~0#1 < 0); 39092#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39091#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39090#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39089#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39086#L29 assume main_#t~switch3#1; 39085#L26 havoc main_#t~switch3#1; 39084#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39083#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39082#L13 assume !(fgetc_~c~0#1 < 0); 39081#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39080#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39079#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39078#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39075#L29 assume main_#t~switch3#1; 39074#L26 havoc main_#t~switch3#1; 39073#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39072#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39071#L13 assume !(fgetc_~c~0#1 < 0); 39070#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39069#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39068#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39067#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39064#L29 assume main_#t~switch3#1; 39063#L26 havoc main_#t~switch3#1; 39062#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39061#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39060#L13 assume !(fgetc_~c~0#1 < 0); 39059#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39058#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39057#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39056#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39053#L29 assume main_#t~switch3#1; 39052#L26 havoc main_#t~switch3#1; 39051#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39050#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39049#L13 assume !(fgetc_~c~0#1 < 0); 39048#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39047#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39046#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39045#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39042#L29 assume main_#t~switch3#1; 39041#L26 havoc main_#t~switch3#1; 39040#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39039#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39038#L13 assume !(fgetc_~c~0#1 < 0); 39037#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39036#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39035#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39034#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39031#L29 assume main_#t~switch3#1; 39030#L26 havoc main_#t~switch3#1; 39029#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39028#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39027#L13 assume !(fgetc_~c~0#1 < 0); 39026#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39025#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39024#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39023#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39020#L29 assume main_#t~switch3#1; 39019#L26 havoc main_#t~switch3#1; 39018#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39017#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39016#L13 assume !(fgetc_~c~0#1 < 0); 39015#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39014#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39013#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39012#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 39009#L29 assume main_#t~switch3#1; 39008#L26 havoc main_#t~switch3#1; 39007#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 39006#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 39005#L13 assume !(fgetc_~c~0#1 < 0); 39004#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 39003#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 39002#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 39001#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38998#L29 assume main_#t~switch3#1; 38997#L26 havoc main_#t~switch3#1; 38996#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38995#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38994#L13 assume !(fgetc_~c~0#1 < 0); 38993#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38992#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38991#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38990#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38987#L29 assume main_#t~switch3#1; 38986#L26 havoc main_#t~switch3#1; 38985#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38984#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38983#L13 assume !(fgetc_~c~0#1 < 0); 38982#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38981#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38980#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38979#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38976#L29 assume main_#t~switch3#1; 38975#L26 havoc main_#t~switch3#1; 38974#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38973#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38972#L13 assume !(fgetc_~c~0#1 < 0); 38971#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38970#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38969#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38968#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38965#L29 assume main_#t~switch3#1; 38964#L26 havoc main_#t~switch3#1; 38963#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38962#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38961#L13 assume !(fgetc_~c~0#1 < 0); 38960#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38959#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38958#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38957#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38954#L29 assume main_#t~switch3#1; 38953#L26 havoc main_#t~switch3#1; 38952#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38951#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38950#L13 assume !(fgetc_~c~0#1 < 0); 38949#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38948#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38947#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38946#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38943#L29 assume main_#t~switch3#1; 38942#L26 havoc main_#t~switch3#1; 38941#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38940#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38939#L13 assume !(fgetc_~c~0#1 < 0); 38938#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38937#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38936#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38935#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38932#L29 assume main_#t~switch3#1; 38931#L26 havoc main_#t~switch3#1; 38930#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38929#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38928#L13 assume !(fgetc_~c~0#1 < 0); 38927#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38926#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38925#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38924#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38921#L29 assume main_#t~switch3#1; 38920#L26 havoc main_#t~switch3#1; 38919#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38918#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38917#L13 assume !(fgetc_~c~0#1 < 0); 38916#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38915#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38914#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38913#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38910#L29 assume main_#t~switch3#1; 38909#L26 havoc main_#t~switch3#1; 38908#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38907#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38906#L13 assume !(fgetc_~c~0#1 < 0); 38905#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38904#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38903#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38902#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38899#L29 assume main_#t~switch3#1; 38898#L26 havoc main_#t~switch3#1; 38897#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38896#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38895#L13 assume !(fgetc_~c~0#1 < 0); 38894#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38893#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38892#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38891#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38888#L29 assume main_#t~switch3#1; 38887#L26 havoc main_#t~switch3#1; 38886#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38885#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38884#L13 assume !(fgetc_~c~0#1 < 0); 38883#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38882#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38881#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38880#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38877#L29 assume main_#t~switch3#1; 38876#L26 havoc main_#t~switch3#1; 38875#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38874#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38873#L13 assume !(fgetc_~c~0#1 < 0); 38872#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38871#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38870#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38869#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38866#L29 assume main_#t~switch3#1; 38865#L26 havoc main_#t~switch3#1; 38864#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38863#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38862#L13 assume !(fgetc_~c~0#1 < 0); 38861#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38860#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38859#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38858#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38855#L29 assume main_#t~switch3#1; 38854#L26 havoc main_#t~switch3#1; 38853#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38852#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38851#L13 assume !(fgetc_~c~0#1 < 0); 38850#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38849#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38848#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38847#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38844#L29 assume main_#t~switch3#1; 38843#L26 havoc main_#t~switch3#1; 38842#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38841#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38840#L13 assume !(fgetc_~c~0#1 < 0); 38839#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38838#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38837#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38836#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38833#L29 assume main_#t~switch3#1; 38832#L26 havoc main_#t~switch3#1; 38831#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38830#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38829#L13 assume !(fgetc_~c~0#1 < 0); 38828#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38827#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38826#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38825#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38822#L29 assume main_#t~switch3#1; 38821#L26 havoc main_#t~switch3#1; 38820#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38819#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38818#L13 assume !(fgetc_~c~0#1 < 0); 38817#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38816#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38815#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38814#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38811#L29 assume main_#t~switch3#1; 38810#L26 havoc main_#t~switch3#1; 38809#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38808#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38807#L13 assume !(fgetc_~c~0#1 < 0); 38806#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38805#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38804#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38803#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38800#L29 assume main_#t~switch3#1; 38799#L26 havoc main_#t~switch3#1; 38798#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38797#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38796#L13 assume !(fgetc_~c~0#1 < 0); 38795#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38794#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38793#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38792#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38789#L29 assume main_#t~switch3#1; 38788#L26 havoc main_#t~switch3#1; 38787#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38786#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38785#L13 assume !(fgetc_~c~0#1 < 0); 38784#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38783#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38782#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38781#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38778#L29 assume main_#t~switch3#1; 38777#L26 havoc main_#t~switch3#1; 38776#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38775#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38774#L13 assume !(fgetc_~c~0#1 < 0); 38773#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38772#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38771#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38770#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38767#L29 assume main_#t~switch3#1; 38766#L26 havoc main_#t~switch3#1; 38765#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38764#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38763#L13 assume !(fgetc_~c~0#1 < 0); 38762#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38761#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38760#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38759#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38756#L29 assume main_#t~switch3#1; 38755#L26 havoc main_#t~switch3#1; 38754#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38753#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38752#L13 assume !(fgetc_~c~0#1 < 0); 38751#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38750#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38749#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38748#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38745#L29 assume main_#t~switch3#1; 38744#L26 havoc main_#t~switch3#1; 38743#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38742#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38741#L13 assume !(fgetc_~c~0#1 < 0); 38740#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38739#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38738#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38737#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38734#L29 assume main_#t~switch3#1; 38733#L26 havoc main_#t~switch3#1; 38732#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38731#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38730#L13 assume !(fgetc_~c~0#1 < 0); 38729#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38728#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38727#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38726#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38723#L29 assume main_#t~switch3#1; 38722#L26 havoc main_#t~switch3#1; 38721#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38720#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38719#L13 assume !(fgetc_~c~0#1 < 0); 38718#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38717#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38716#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38715#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38712#L29 assume main_#t~switch3#1; 38711#L26 havoc main_#t~switch3#1; 38710#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38709#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38708#L13 assume !(fgetc_~c~0#1 < 0); 38707#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38706#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38705#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38704#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38701#L29 assume main_#t~switch3#1; 38700#L26 havoc main_#t~switch3#1; 38699#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38698#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38697#L13 assume !(fgetc_~c~0#1 < 0); 38696#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38695#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38694#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38693#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38690#L29 assume main_#t~switch3#1; 38689#L26 havoc main_#t~switch3#1; 38688#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38687#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38686#L13 assume !(fgetc_~c~0#1 < 0); 38685#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38684#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38683#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38682#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38679#L29 assume main_#t~switch3#1; 38678#L26 havoc main_#t~switch3#1; 38677#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38676#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38675#L13 assume !(fgetc_~c~0#1 < 0); 38674#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38673#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38672#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38671#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38668#L29 assume main_#t~switch3#1; 38667#L26 havoc main_#t~switch3#1; 38666#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38665#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38664#L13 assume !(fgetc_~c~0#1 < 0); 38663#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38662#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38661#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38660#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38657#L29 assume main_#t~switch3#1; 38656#L26 havoc main_#t~switch3#1; 38655#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38654#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38653#L13 assume !(fgetc_~c~0#1 < 0); 38652#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38651#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38650#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38649#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38646#L29 assume main_#t~switch3#1; 38645#L26 havoc main_#t~switch3#1; 38644#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38643#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38642#L13 assume !(fgetc_~c~0#1 < 0); 38641#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38640#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38639#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38638#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38635#L29 assume main_#t~switch3#1; 38634#L26 havoc main_#t~switch3#1; 38633#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38632#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38631#L13 assume !(fgetc_~c~0#1 < 0); 38630#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38629#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38628#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38627#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38624#L29 assume main_#t~switch3#1; 38623#L26 havoc main_#t~switch3#1; 38622#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38621#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38620#L13 assume !(fgetc_~c~0#1 < 0); 38619#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38618#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38617#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38616#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38613#L29 assume main_#t~switch3#1; 38612#L26 havoc main_#t~switch3#1; 38611#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38610#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38609#L13 assume !(fgetc_~c~0#1 < 0); 38608#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38607#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38606#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38605#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38602#L29 assume main_#t~switch3#1; 38601#L26 havoc main_#t~switch3#1; 38600#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38599#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38598#L13 assume !(fgetc_~c~0#1 < 0); 38597#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38596#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38595#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38594#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38591#L29 assume main_#t~switch3#1; 38590#L26 havoc main_#t~switch3#1; 38589#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38588#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38587#L13 assume !(fgetc_~c~0#1 < 0); 38586#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38585#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38584#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38583#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38580#L29 assume main_#t~switch3#1; 38579#L26 havoc main_#t~switch3#1; 38578#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38577#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38576#L13 assume !(fgetc_~c~0#1 < 0); 38575#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38574#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38573#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38572#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38569#L29 assume main_#t~switch3#1; 38568#L26 havoc main_#t~switch3#1; 38567#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38566#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38565#L13 assume !(fgetc_~c~0#1 < 0); 38564#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38563#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38562#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38561#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38558#L29 assume main_#t~switch3#1; 38557#L26 havoc main_#t~switch3#1; 38556#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38555#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38554#L13 assume !(fgetc_~c~0#1 < 0); 38553#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38552#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38551#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38550#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38547#L29 assume main_#t~switch3#1; 38546#L26 havoc main_#t~switch3#1; 38545#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38544#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38543#L13 assume !(fgetc_~c~0#1 < 0); 38542#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38541#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38540#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38539#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38536#L29 assume main_#t~switch3#1; 38535#L26 havoc main_#t~switch3#1; 38534#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38533#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38532#L13 assume !(fgetc_~c~0#1 < 0); 38531#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38530#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38529#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38528#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38525#L29 assume main_#t~switch3#1; 38524#L26 havoc main_#t~switch3#1; 38523#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38522#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38521#L13 assume !(fgetc_~c~0#1 < 0); 38520#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38519#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38518#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38517#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38514#L29 assume main_#t~switch3#1; 38513#L26 havoc main_#t~switch3#1; 38512#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38511#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38510#L13 assume !(fgetc_~c~0#1 < 0); 38509#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38508#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38507#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38506#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38503#L29 assume main_#t~switch3#1; 38502#L26 havoc main_#t~switch3#1; 38501#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38500#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38499#L13 assume !(fgetc_~c~0#1 < 0); 38498#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38497#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38496#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38495#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38492#L29 assume main_#t~switch3#1; 38491#L26 havoc main_#t~switch3#1; 38490#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38489#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38488#L13 assume !(fgetc_~c~0#1 < 0); 38487#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38486#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38485#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38484#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38481#L29 assume main_#t~switch3#1; 38480#L26 havoc main_#t~switch3#1; 38479#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38478#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38477#L13 assume !(fgetc_~c~0#1 < 0); 38476#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38475#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38474#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38473#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38470#L29 assume main_#t~switch3#1; 38469#L26 havoc main_#t~switch3#1; 38468#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38467#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38466#L13 assume !(fgetc_~c~0#1 < 0); 38465#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38464#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38463#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38462#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38459#L29 assume main_#t~switch3#1; 38458#L26 havoc main_#t~switch3#1; 38457#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38456#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38455#L13 assume !(fgetc_~c~0#1 < 0); 38454#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38453#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38452#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38451#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38448#L29 assume main_#t~switch3#1; 38447#L26 havoc main_#t~switch3#1; 38446#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38445#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38444#L13 assume !(fgetc_~c~0#1 < 0); 38443#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38442#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38441#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38440#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38437#L29 assume main_#t~switch3#1; 38436#L26 havoc main_#t~switch3#1; 38435#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38434#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38433#L13 assume !(fgetc_~c~0#1 < 0); 38432#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38431#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38430#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38429#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38426#L29 assume main_#t~switch3#1; 38425#L26 havoc main_#t~switch3#1; 38424#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38423#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38422#L13 assume !(fgetc_~c~0#1 < 0); 38421#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38420#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38419#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38418#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38415#L29 assume main_#t~switch3#1; 38414#L26 havoc main_#t~switch3#1; 38413#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38412#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38411#L13 assume !(fgetc_~c~0#1 < 0); 38410#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38409#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38408#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38407#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38404#L29 assume main_#t~switch3#1; 38403#L26 havoc main_#t~switch3#1; 38402#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38401#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38400#L13 assume !(fgetc_~c~0#1 < 0); 38399#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38398#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38397#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38396#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38393#L29 assume main_#t~switch3#1; 38392#L26 havoc main_#t~switch3#1; 38391#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38390#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38389#L13 assume !(fgetc_~c~0#1 < 0); 38388#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38387#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38386#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38385#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38382#L29 assume main_#t~switch3#1; 38381#L26 havoc main_#t~switch3#1; 38380#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38379#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38378#L13 assume !(fgetc_~c~0#1 < 0); 38377#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38376#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38375#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38374#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38371#L29 assume main_#t~switch3#1; 38370#L26 havoc main_#t~switch3#1; 38369#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38368#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38367#L13 assume !(fgetc_~c~0#1 < 0); 38366#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38365#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38364#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38363#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38360#L29 assume main_#t~switch3#1; 38359#L26 havoc main_#t~switch3#1; 38358#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38357#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38356#L13 assume !(fgetc_~c~0#1 < 0); 38355#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38354#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38353#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38352#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38349#L29 assume main_#t~switch3#1; 38348#L26 havoc main_#t~switch3#1; 38347#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38346#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38345#L13 assume !(fgetc_~c~0#1 < 0); 38344#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38343#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38342#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38341#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38338#L29 assume main_#t~switch3#1; 38337#L26 havoc main_#t~switch3#1; 38336#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38335#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38334#L13 assume !(fgetc_~c~0#1 < 0); 38333#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38332#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38331#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38330#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38327#L29 assume main_#t~switch3#1; 38326#L26 havoc main_#t~switch3#1; 38325#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38324#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38323#L13 assume !(fgetc_~c~0#1 < 0); 38322#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38321#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38320#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38319#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38316#L29 assume main_#t~switch3#1; 38315#L26 havoc main_#t~switch3#1; 38314#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38313#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38312#L13 assume !(fgetc_~c~0#1 < 0); 38311#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38310#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38309#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38308#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38305#L29 assume main_#t~switch3#1; 38304#L26 havoc main_#t~switch3#1; 38303#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38302#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38301#L13 assume !(fgetc_~c~0#1 < 0); 38300#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38299#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38298#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38297#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38294#L29 assume main_#t~switch3#1; 38293#L26 havoc main_#t~switch3#1; 38292#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38291#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38290#L13 assume !(fgetc_~c~0#1 < 0); 38289#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38288#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38287#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38286#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38283#L29 assume main_#t~switch3#1; 38282#L26 havoc main_#t~switch3#1; 38281#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38280#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38279#L13 assume !(fgetc_~c~0#1 < 0); 38278#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38277#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38276#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38275#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38272#L29 assume main_#t~switch3#1; 38271#L26 havoc main_#t~switch3#1; 38270#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38269#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38268#L13 assume !(fgetc_~c~0#1 < 0); 38267#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38266#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38265#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38264#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38261#L29 assume main_#t~switch3#1; 38260#L26 havoc main_#t~switch3#1; 38259#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38258#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38257#L13 assume !(fgetc_~c~0#1 < 0); 38256#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38255#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38254#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38253#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38250#L29 assume main_#t~switch3#1; 38249#L26 havoc main_#t~switch3#1; 38248#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38247#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38246#L13 assume !(fgetc_~c~0#1 < 0); 38245#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38244#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38243#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38242#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38239#L29 assume main_#t~switch3#1; 38238#L26 havoc main_#t~switch3#1; 38237#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38236#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38235#L13 assume !(fgetc_~c~0#1 < 0); 38234#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38233#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38232#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38231#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38228#L29 assume main_#t~switch3#1; 38227#L26 havoc main_#t~switch3#1; 38226#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38225#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38224#L13 assume !(fgetc_~c~0#1 < 0); 38223#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38222#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38221#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38220#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38217#L29 assume main_#t~switch3#1; 38216#L26 havoc main_#t~switch3#1; 38215#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38214#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38213#L13 assume !(fgetc_~c~0#1 < 0); 38212#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38211#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38210#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38209#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38206#L29 assume main_#t~switch3#1; 38205#L26 havoc main_#t~switch3#1; 38204#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38203#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38202#L13 assume !(fgetc_~c~0#1 < 0); 38201#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38200#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38199#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38198#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38195#L29 assume main_#t~switch3#1; 38194#L26 havoc main_#t~switch3#1; 38193#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38192#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38191#L13 assume !(fgetc_~c~0#1 < 0); 38190#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38189#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38188#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38187#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38184#L29 assume main_#t~switch3#1; 38183#L26 havoc main_#t~switch3#1; 38182#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38181#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38180#L13 assume !(fgetc_~c~0#1 < 0); 38179#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38178#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38177#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38176#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38173#L29 assume main_#t~switch3#1; 38172#L26 havoc main_#t~switch3#1; 38171#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38170#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38169#L13 assume !(fgetc_~c~0#1 < 0); 38168#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38167#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38166#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38165#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38162#L29 assume main_#t~switch3#1; 38161#L26 havoc main_#t~switch3#1; 38160#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38159#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38158#L13 assume !(fgetc_~c~0#1 < 0); 38157#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38156#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38155#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38154#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38151#L29 assume main_#t~switch3#1; 38150#L26 havoc main_#t~switch3#1; 38149#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38148#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38147#L13 assume !(fgetc_~c~0#1 < 0); 38146#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38145#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38144#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38143#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38140#L29 assume main_#t~switch3#1; 38139#L26 havoc main_#t~switch3#1; 38138#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38137#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38136#L13 assume !(fgetc_~c~0#1 < 0); 38135#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38134#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38133#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38132#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38129#L29 assume main_#t~switch3#1; 38128#L26 havoc main_#t~switch3#1; 38127#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38126#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38125#L13 assume !(fgetc_~c~0#1 < 0); 38124#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38123#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38122#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38121#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38118#L29 assume main_#t~switch3#1; 38117#L26 havoc main_#t~switch3#1; 38116#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38115#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38114#L13 assume !(fgetc_~c~0#1 < 0); 38113#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38112#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38111#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38110#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38107#L29 assume main_#t~switch3#1; 38106#L26 havoc main_#t~switch3#1; 38105#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38104#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38103#L13 assume !(fgetc_~c~0#1 < 0); 38102#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38101#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38100#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38099#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38096#L29 assume main_#t~switch3#1; 38095#L26 havoc main_#t~switch3#1; 38094#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38093#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38092#L13 assume !(fgetc_~c~0#1 < 0); 38091#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38090#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38089#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38088#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38085#L29 assume main_#t~switch3#1; 38084#L26 havoc main_#t~switch3#1; 38083#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38082#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38081#L13 assume !(fgetc_~c~0#1 < 0); 38080#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38079#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38078#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38077#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38074#L29 assume main_#t~switch3#1; 38073#L26 havoc main_#t~switch3#1; 38072#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38071#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38070#L13 assume !(fgetc_~c~0#1 < 0); 38069#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38068#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38067#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38066#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38063#L29 assume main_#t~switch3#1; 38062#L26 havoc main_#t~switch3#1; 38061#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38060#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38059#L13 assume !(fgetc_~c~0#1 < 0); 38058#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38057#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38056#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38055#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38052#L29 assume main_#t~switch3#1; 38051#L26 havoc main_#t~switch3#1; 38050#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38049#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38048#L13 assume !(fgetc_~c~0#1 < 0); 38047#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38046#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38045#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38044#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38041#L29 assume main_#t~switch3#1; 38040#L26 havoc main_#t~switch3#1; 38039#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38038#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38037#L13 assume !(fgetc_~c~0#1 < 0); 38036#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38035#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38034#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38033#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38030#L29 assume main_#t~switch3#1; 38029#L26 havoc main_#t~switch3#1; 38028#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38027#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38026#L13 assume !(fgetc_~c~0#1 < 0); 38025#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38024#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38023#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38022#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38019#L29 assume main_#t~switch3#1; 38018#L26 havoc main_#t~switch3#1; 38017#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38016#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38015#L13 assume !(fgetc_~c~0#1 < 0); 38014#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38013#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38012#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38011#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 38008#L29 assume main_#t~switch3#1; 38007#L26 havoc main_#t~switch3#1; 38006#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 38005#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 38004#L13 assume !(fgetc_~c~0#1 < 0); 38003#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 38002#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 38001#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 38000#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37997#L29 assume main_#t~switch3#1; 37996#L26 havoc main_#t~switch3#1; 37995#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37994#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37993#L13 assume !(fgetc_~c~0#1 < 0); 37992#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37991#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37990#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37989#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37986#L29 assume main_#t~switch3#1; 37985#L26 havoc main_#t~switch3#1; 37984#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37983#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37982#L13 assume !(fgetc_~c~0#1 < 0); 37981#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37980#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37979#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37978#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37975#L29 assume main_#t~switch3#1; 37974#L26 havoc main_#t~switch3#1; 37973#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37972#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37971#L13 assume !(fgetc_~c~0#1 < 0); 37970#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37969#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37968#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37967#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37964#L29 assume main_#t~switch3#1; 37963#L26 havoc main_#t~switch3#1; 37962#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37961#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37960#L13 assume !(fgetc_~c~0#1 < 0); 37959#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37958#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37957#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37956#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37953#L29 assume main_#t~switch3#1; 37952#L26 havoc main_#t~switch3#1; 37951#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37950#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37949#L13 assume !(fgetc_~c~0#1 < 0); 37948#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37947#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37946#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37945#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37942#L29 assume main_#t~switch3#1; 37941#L26 havoc main_#t~switch3#1; 37940#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37939#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37938#L13 assume !(fgetc_~c~0#1 < 0); 37937#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37936#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37935#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37934#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37931#L29 assume main_#t~switch3#1; 37930#L26 havoc main_#t~switch3#1; 37929#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37928#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37927#L13 assume !(fgetc_~c~0#1 < 0); 37926#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37925#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37924#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37923#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37920#L29 assume main_#t~switch3#1; 37919#L26 havoc main_#t~switch3#1; 37918#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37917#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37916#L13 assume !(fgetc_~c~0#1 < 0); 37915#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37914#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37913#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37912#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37909#L29 assume main_#t~switch3#1; 37908#L26 havoc main_#t~switch3#1; 37907#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37906#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37905#L13 assume !(fgetc_~c~0#1 < 0); 37904#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37903#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37902#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37901#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37898#L29 assume main_#t~switch3#1; 37897#L26 havoc main_#t~switch3#1; 37896#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37895#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37894#L13 assume !(fgetc_~c~0#1 < 0); 37893#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37892#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37891#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37890#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37887#L29 assume main_#t~switch3#1; 37886#L26 havoc main_#t~switch3#1; 37885#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37884#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37883#L13 assume !(fgetc_~c~0#1 < 0); 37882#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37881#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37880#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37879#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37876#L29 assume main_#t~switch3#1; 37875#L26 havoc main_#t~switch3#1; 37874#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37873#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37872#L13 assume !(fgetc_~c~0#1 < 0); 37871#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37870#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37869#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37868#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37865#L29 assume main_#t~switch3#1; 37864#L26 havoc main_#t~switch3#1; 37863#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37862#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37861#L13 assume !(fgetc_~c~0#1 < 0); 37860#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37859#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37858#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37857#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37854#L29 assume main_#t~switch3#1; 37853#L26 havoc main_#t~switch3#1; 37852#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37851#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37850#L13 assume !(fgetc_~c~0#1 < 0); 37849#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37848#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37847#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37846#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37843#L29 assume main_#t~switch3#1; 37842#L26 havoc main_#t~switch3#1; 37841#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37840#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37839#L13 assume !(fgetc_~c~0#1 < 0); 37838#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37837#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37836#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37835#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37832#L29 assume main_#t~switch3#1; 37831#L26 havoc main_#t~switch3#1; 37830#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37829#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37828#L13 assume !(fgetc_~c~0#1 < 0); 37827#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37826#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37825#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37824#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37821#L29 assume main_#t~switch3#1; 37820#L26 havoc main_#t~switch3#1; 37819#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37818#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37817#L13 assume !(fgetc_~c~0#1 < 0); 37816#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37815#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37814#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37813#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37810#L29 assume main_#t~switch3#1; 37809#L26 havoc main_#t~switch3#1; 37808#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37807#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37806#L13 assume !(fgetc_~c~0#1 < 0); 37805#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37804#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37803#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37802#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37799#L29 assume main_#t~switch3#1; 37798#L26 havoc main_#t~switch3#1; 37797#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37796#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37795#L13 assume !(fgetc_~c~0#1 < 0); 37794#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37793#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37792#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37791#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37788#L29 assume main_#t~switch3#1; 37787#L26 havoc main_#t~switch3#1; 37786#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37785#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37784#L13 assume !(fgetc_~c~0#1 < 0); 37783#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37782#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37781#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37780#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37777#L29 assume main_#t~switch3#1; 37776#L26 havoc main_#t~switch3#1; 37775#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37774#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37773#L13 assume !(fgetc_~c~0#1 < 0); 37772#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37771#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37770#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37769#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37766#L29 assume main_#t~switch3#1; 37765#L26 havoc main_#t~switch3#1; 37764#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37763#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37762#L13 assume !(fgetc_~c~0#1 < 0); 37761#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37760#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37759#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37758#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37755#L29 assume main_#t~switch3#1; 37754#L26 havoc main_#t~switch3#1; 37753#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37752#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37751#L13 assume !(fgetc_~c~0#1 < 0); 37750#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37748#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37746#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37736#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37737#L29 assume main_#t~switch3#1; 37730#L26 havoc main_#t~switch3#1; 37731#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37725#L9 assume !(~flag~0 > 1000);fgetc_#t~post0#1 := ~flag~0;~flag~0 := 1 + fgetc_#t~post0#1;havoc fgetc_#t~post0#1;fgetc_~c~0#1 := fgetc_#t~nondet1#1;havoc fgetc_#t~nondet1#1; 37721#L13 assume !(fgetc_~c~0#1 < 0); 37717#L13-2 fgetc_~c~0#1 := (if fgetc_~c~0#1 < 0 && 0 != fgetc_~c~0#1 % 256 then fgetc_~c~0#1 % 256 - 256 else fgetc_~c~0#1 % 256);fgetc_#res#1 := fgetc_~c~0#1; 37718#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37727#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37726#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37723#L29 assume main_#t~switch3#1; 37708#L26 
[2022-05-11 19:19:46,662 INFO  L793   eck$LassoCheckResult]: Loop: 37708#L26 havoc main_#t~switch3#1; 37710#L21-2 assume !false;assume { :begin_inline_fgetc } true;havoc fgetc_#res#1;havoc fgetc_#t~post0#1, fgetc_#t~nondet1#1, fgetc_~c~0#1; 37713#L9 assume ~flag~0 > 1000;fgetc_#res#1 := -1; 37693#L16 main_#t~ret2#1 := fgetc_#res#1;assume { :end_inline_fgetc } true;main_~temp~0#1 := main_#t~ret2#1;havoc main_#t~ret2#1; 37694#L24 assume !(0 == main_~temp~0#1 % 256 || -1 == main_~temp~0#1 % 256);main_#t~switch3#1 := -1 == main_~temp~0#1 % 256; 37699#L27 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 61 == main_~temp~0#1 % 256; 37700#L29 assume !main_#t~switch3#1;main_#t~switch3#1 := main_#t~switch3#1 || 0 == main_~temp~0#1 % 256; 37703#L31 assume !main_#t~switch3#1;main_#t~switch3#1 := true; 37707#L33 assume main_#t~switch3#1; 37708#L26 
[2022-05-11 19:19:46,662 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:19:46,662 INFO  L85        PathProgramCache]: Analyzing trace with hash -1278133200, now seen corresponding path program 7 times
[2022-05-11 19:19:46,662 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:19:46,662 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1319391649]
[2022-05-11 19:19:46,663 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:19:46,663 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:20:15,466 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:20:15,466 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:20:44,177 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:20:44,259 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:20:44,260 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:20:44,260 INFO  L85        PathProgramCache]: Analyzing trace with hash 1728403042, now seen corresponding path program 9 times
[2022-05-11 19:20:44,260 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:20:44,260 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1854321802]
[2022-05-11 19:20:44,260 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:20:44,260 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:20:44,261 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:20:44,261 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2022-05-11 19:20:44,262 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2022-05-11 19:20:44,262 INFO  L133   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2022-05-11 19:20:44,263 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2022-05-11 19:20:44,263 INFO  L85        PathProgramCache]: Analyzing trace with hash 2119393043, now seen corresponding path program 8 times
[2022-05-11 19:20:44,263 INFO  L121   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2022-05-11 19:20:44,263 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1796978992]
[2022-05-11 19:20:44,263 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2022-05-11 19:20:44,263 INFO  L126          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2022-05-11 19:20:45,078 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2022-05-11 19:21:59,321 INFO  L134       CoverageAnalysis]: Checked inductivity of 657231 backedges. 1528 proven. 655703 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:21:59,322 INFO  L139   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2022-05-11 19:21:59,322 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1796978992]
[2022-05-11 19:21:59,322 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1796978992] provided 0 perfect and 1 imperfect interpolant sequences
[2022-05-11 19:21:59,322 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleZ3 [698493796]
[2022-05-11 19:21:59,322 INFO  L93    rtionOrderModulation]: Changing assertion order to OUTSIDE_LOOP_FIRST1
[2022-05-11 19:21:59,322 INFO  L168          SolverBuilder]: Constructing external solver with command: z3 -smt2 -in SMTLIB2_COMPLIANT=true
[2022-05-11 19:21:59,324 INFO  L189       MonitoredProcess]: No working directory specified, using /usr/bin/z3
[2022-05-11 19:21:59,325 INFO  L229       MonitoredProcess]: Starting monitored process 22 with /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (exit command is (exit), workingDir is null)
[2022-05-11 19:21:59,328 INFO  L327       MonitoredProcess]: [MP /usr/bin/z3 -smt2 -in SMTLIB2_COMPLIANT=true (22)] Waiting until timeout for monitored process
[2022-05-11 19:22:00,786 INFO  L228   tOrderPrioritization]: Assert order OUTSIDE_LOOP_FIRST1 issued 2 check-sat command(s)
[2022-05-11 19:22:00,786 INFO  L229   tOrderPrioritization]: Conjunction of SSA is unsat
[2022-05-11 19:22:00,806 INFO  L263         TraceCheckSpWp]: Trace formula consists of 7661 conjuncts, 384 conjunts are in the unsatisfiable core
[2022-05-11 19:22:00,826 INFO  L286         TraceCheckSpWp]: Computing forward predicates...
[2022-05-11 19:22:09,662 INFO  L134       CoverageAnalysis]: Checked inductivity of 657231 backedges. 1528 proven. 655703 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:22:09,663 INFO  L328         TraceCheckSpWp]: Computing backward predicates...
[2022-05-11 19:25:54,552 INFO  L134       CoverageAnalysis]: Checked inductivity of 657231 backedges. 1528 proven. 655703 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2022-05-11 19:25:54,553 INFO  L160   FreeRefinementEngine]: IpTcStrategyModuleZ3 [698493796] provided 0 perfect and 2 imperfect interpolant sequences
[2022-05-11 19:25:54,553 INFO  L186   FreeRefinementEngine]: Found 0 perfect and 3 imperfect interpolant sequences.
[2022-05-11 19:25:54,554 INFO  L199   FreeRefinementEngine]: Number of different interpolants: perfect sequences [] imperfect sequences [384, 384, 384] total 767
[2022-05-11 19:25:54,554 INFO  L115   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1244210278]
[2022-05-11 19:25:54,554 INFO  L85    oduleStraightlineAll]: Using 3 imperfect interpolants to construct interpolant automaton
[2022-05-11 19:25:54,624 INFO  L103   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2022-05-11 19:25:54,652 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 768 interpolants.
[2022-05-11 19:25:54,670 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=294528, Invalid=294528, Unknown=0, NotChecked=0, Total=589056
[2022-05-11 19:25:54,672 INFO  L87              Difference]: Start difference. First operand 4226 states and 5377 transitions. cyclomatic complexity: 1153 Second operand  has 768 states, 768 states have (on average 8.971354166666666) internal successors, (6890), 767 states have internal predecessors, (6890), 0 states have call successors, (0), 0 states have call predecessors, (0), 0 states have return successors, (0), 0 states have call predecessors, (0), 0 states have call successors, (0)
Killed by 15
 
